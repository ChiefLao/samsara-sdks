{
    "info": {
        "_postman_id": "b9a01798-dfed-4269-a5cc-255725c94942",
        "name": "Samsara API",
        "description": "<style type=\"text/css\">\nn {\n    padding: 1em;\n    width: 100%;\n    display: block;\n    margin: 28px 0;\n}\nn.info {\n    background-color: rgba(0, 51, 160, 0.1);\n}\nn.warning {\n    background-color: #fdf6e3;\n}\ni:before {\n    margin-right: 6px;\n}\nnh {\n    font-size: 1.5rem;\n    font-weight: 700;\n    line-height: 1.1;\n    display: block;\n}\nnb {\n    margin-top: 10px;\n    padding-left: 22px;\n    display: block;\n}\n</style>\n\n# Overview\n\n<n class=\"info\">\n<nh>\n<i class=\"fa fa-info-circle\"></i>\nSomething new!\n</nh>\n<nb>\nWelcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br>\n<br>\nWant to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br>\n<br>\n*Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br>\n<br>\nSubmit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)!\n</nb>\n</n>\n\nSamsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.\n\nThe Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.\n\nVisit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.\n\nIf you have any questions, please visit https://samsara.com/help.\n\n## Endpoints\n\nAll our APIs can be accessed through HTTP requests to URLs like:\n\n```\nhttps://api.samsara.com/<endpoint>\n```\n\nFor EU customers, this URL will be:\n\n```\nhttps://api.eu.samsara.com/<endpoint>\n```\n\n<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nNote\n</nh>\n<nb>\nLegacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>`\n</nb>\n</n>\n\n## Authentication\n\nTo authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.\n\nYour API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.\n\nAuthentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:\n\n```curl\nAuthorization: Bearer {access_token}\n```\n\nAll API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.\n\n### OAuth2\nIf building an application for our marketplace, our API is accessible via. OAuth2 as well.\n\n| Type  | Value |\n| ------------- |:-------------:|\n| Security scheme      | OAuth2                                   |\n| OAuth2 Flow          | accessCode                               |\n| Authorization URL    | https://api.samsara.com/oauth2/authorize |\n| Token URL            | https://api.samsara.com/oauth2/token     |\n\n\n\n## Common Patterns\n\nYou can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).\n",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "addresses",
            "item": [
                {
                    "name": "{id}",
                    "item": [
                        {
                            "name": "Delete an address",
                            "id": "e9069a7c-75ee-44bb-8632-30dd67e66ebe",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/addresses/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "49ca6693-d432-401b-8adc-60f0d7689435",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`"
                                        }
                                    ]
                                },
                                "description": "Delete a specific address. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "38047431-1fe5-4f67-9a47-5c81148a85ce",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "2dd41914-7075-403a-bfb6-8d8a00e44f1a",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve an address",
                            "id": "e23894a2-ef42-418b-bf39-1c278916cca7",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/addresses/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "c2f90dc5-aa6d-467c-a7fa-793cbd53758c",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`"
                                        }
                                    ]
                                },
                                "description": "Returns a specific address. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "f2b4ecba-1376-4533-9e75-0c2a9880cd8e",
                                    "name": "An Address.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"formattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"geofence\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressTypes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"latitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"longitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "3dcd6b60-e1b6-47d1-944c-0aa482cdd4c5",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update an address",
                            "id": "03ba38cf-fc3f-4709-ab0c-505286da5962",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/addresses/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "48687b2f-30ff-4157-9b7f-82e1f1374be2",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`"
                                        }
                                    ]
                                },
                                "description": "Update a specific address. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "80177cf7-ec7c-486b-9eaa-6c48c2bfff46",
                                    "name": "Updated address object with ID.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"formattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"geofence\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressTypes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"latitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"longitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "11190113-48ea-4d6e-9979-683b8e5113e1",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "0fddade4-c9a7-4d3e-8819-35666a609f03"
                },
                {
                    "name": "List all addresses",
                    "id": "0f359a91-28ad-4b66-b827-2a088127d62c",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/addresses?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&createdAfterTime=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "addresses"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "<long>",
                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                },
                                {
                                    "key": "after",
                                    "value": "<string>",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "<string>,<string>",
                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "tagIds",
                                    "value": "<string>,<string>",
                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "createdAfterTime",
                                    "value": "<string>",
                                    "description": "A filter on data to have a created at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                }
                            ]
                        },
                        "description": "Returns a list of all addresses in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "4be7163e-f938-4065-b834-964d84ae9a57",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/addresses?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&createdAfterTime=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "createdAfterTime",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create an address",
                    "id": "68aefc6c-67e8-4be9-b25d-8a81efbf0d23",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"name\": \"<string>\",\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/addresses",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "addresses"
                            ]
                        },
                        "description": "Creates a new address in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "8bfb9f74-9adc-4654-a11b-31262ed0f471",
                            "name": "Newly created address object with ID.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"name\": \"<string>\",\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/addresses",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"formattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"geofence\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressTypes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"latitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"longitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "115ea391-14d4-4eac-a031-0efc90fb0fef",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"name\": \"<string>\",\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/addresses",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "72168589-48a0-4a08-9473-4670330951a6"
        },
        {
            "name": "beta",
            "item": [
                {
                    "name": "attributes",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "[beta] Deleting an attribute",
                                    "id": "f9481dab-f6e4-43f8-a82f-b95bf4a21ddf",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes",
                                                ":id"
                                            ],
                                            "query": [
                                                {
                                                    "key": "entityType",
                                                    "value": "<string>",
                                                    "description": "(Required) Denotes the type of entity, driver or asset."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "146d7046-0cc9-405d-b5d8-1ec053cbd5e1",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) Samsara-provided UUID of the attribute."
                                                }
                                            ]
                                        },
                                        "description": "Delete an attribute by id, including all of its applications. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "d921cc21-8a1d-435c-bbe2-65970e448994",
                                            "name": "A successful DELETE response is a 204 with no content.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "entityType",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        },
                                        {
                                            "id": "ecab586c-87fe-4e03-adfa-ba118fa1083c",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "entityType",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Retrieve an attribute",
                                    "id": "2b8a26f3-8a08-49ec-9b8d-3443a44bcbd0",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes",
                                                ":id"
                                            ],
                                            "query": [
                                                {
                                                    "key": "entityType",
                                                    "value": "<string>",
                                                    "description": "(Required) Denotes the type of entity, driver or asset."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "87db272b-f632-4551-afcb-aa476749bdf8",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) Samsara-provided UUID of the attribute."
                                                }
                                            ]
                                        },
                                        "description": "Fetch an attribute by id, including all of its applications. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "4b0903bd-8b1d-4987-b01a-da500f12aa87",
                                            "name": "The attribute corresponding to request id.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "entityType",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                        },
                                        {
                                            "id": "5bae134e-6639-4b8b-8c4e-4aaa275d7e88",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "entityType",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Update an attribute",
                                    "id": "f4ca94db-b81b-4cb7-b17b-0d4517253f28",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"entityType\": \"<string>\",\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"numberValues\": [\n        \"<double>\",\n        \"<double>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "51803513-9d4c-4c1e-91ed-daa54be88a7c",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) Samsara-provided UUID of the attribute."
                                                }
                                            ]
                                        },
                                        "description": "Updates an attribute in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "21f5b0fb-21ae-46ee-9916-8d78a2e8058d",
                                            "name": "Newly created attribute object with ID.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"entityType\": \"<string>\",\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"numberValues\": [\n        \"<double>\",\n        \"<double>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                        },
                                        {
                                            "id": "3101eac3-6b6b-494f-8e14-a0cca8c0ec54",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"entityType\": \"<string>\",\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"numberValues\": [\n        \"<double>\",\n        \"<double>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "d68a3f97-5a9e-49cc-b338-09598876a944"
                        },
                        {
                            "name": "[beta] List all attributes by entity type",
                            "id": "3b2bbe57-6450-4fb8-8f1e-d4c921b49fd2",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/attributes?entityType=<string>&limit=<long>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "attributes"
                                    ],
                                    "query": [
                                        {
                                            "key": "entityType",
                                            "value": "<string>",
                                            "description": "(Required) Denotes the type of entity, driver or asset."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Fetch all attributes in an organization associated with either drivers or assets. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "ef18f528-bc74-41f9-8344-48b40339303a",
                                    "name": "All attributes in an organization for an entity type",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes?entityType=<string>&limit=<long>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "entityType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "4ecd7d33-a439-4486-95c3-888de537ea2a",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes?entityType=<string>&limit=<long>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "entityType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Create an attribute",
                            "id": "d56519a2-2406-4986-83db-f1647c4328ff",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entityType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"numberValues\": [\n        \"<double>\",\n        \"<double>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/attributes",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "attributes"
                                    ]
                                },
                                "description": "Creates a new attribute in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "fd5a16c9-6ea7-4aa5-837f-cb9b1dc2a988",
                                    "name": "Newly created attribute object with ID.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entityType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"numberValues\": [\n        \"<double>\",\n        \"<double>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                },
                                {
                                    "id": "1e84cfd7-0e16-4fee-8133-947c918a4ae9",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entityType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"numberValues\": [\n        \"<double>\",\n        \"<double>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "79aa2cdc-2244-4e9b-bc61-609566b20e2c"
                },
                {
                    "name": "fleet",
                    "item": [
                        {
                            "name": "hos",
                            "item": [
                                {
                                    "name": "[beta] Get driver HOS ELD events",
                                    "id": "705e790d-e1d1-42d4-a3bf-c75a848daff1",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "hos",
                                                "drivers",
                                                "eld-events"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>",
                                                    "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>",
                                                    "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>",
                                                    "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>",
                                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>",
                                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active",
                                                    "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "25",
                                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 25 objects."
                                                }
                                            ]
                                        },
                                        "description": "Get all HOS ELD events in a time range, grouped by driver. Attributes will be populated depending on which ELD Event Type is being returned.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "f0bebd15-1aaf-4341-809a-47cfac011b39",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "29b7ada2-b5aa-4dfe-a63a-7eb748a748d7",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "14328754-86a5-49d6-b4ec-b38161c153d7",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "1f5e7638-01dc-46ff-8126-23fcefeb9870",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "08f442e3-af87-4b40-984c-3bdd8f639a72",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "42f56b5c-8f54-4009-a4bb-ad096a462561",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "43a754b0-6df0-4fef-83e9-083269901aa3",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2673f81a-710a-4a5d-ac9c-216a5090d17a",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "34235a59-43f5-45b4-ba8b-0ab52fcab1aa",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "db3808e9-83b7-45af-a30f-7bc29495a898",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7546bac5-52fe-492b-a446-5c9c6cb87d67",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Get all driver HOS violations",
                                    "id": "b6aff0a1-6462-4977-a897-ba6b7d1852a3",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "hos",
                                                "violations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>",
                                                    "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>",
                                                    "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>",
                                                    "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>",
                                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>",
                                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on violations data based on the violation type enum. Supported types: `NONE, californiaMealbreakMissed, cycleHoursOn, cycleOffHoursAfterOnDutyHours, dailyDrivingHours, dailyOffDutyDeferralAddToDay2Consecutive, dailyOffDutyDeferralNotPartMandatory, dailyOffDutyDeferralTwoDayDrivingLimit, dailyOffDutyDeferralTwoDayOffDuty, dailyOffDutyNonResetHours, dailyOffDutyTotalHours, dailyOnDutyHours, mandatory24HoursOffDuty, restbreakMissed, shiftDrivingHours, shiftHours, shiftOnDutyHours, unsubmittedLogs`"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                }
                                            ]
                                        },
                                        "description": "Get active Hours of Service violations for the specified drivers.\n\nThe day object time range for a violation is defined by the `driver`'s `eldDayStartHour`. This value is configurable per driver.\n\nThe `startTime` and `endTime` parameters indicate the datetime range you'd like to retrieve violations for. A violation will be returned if its `violationStartTime` falls within this datetime range (inclusive of `startTime` and `endTime`).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "f03d4845-dc75-44bd-be32-4afe8d22b338",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "6aedcb2f-f15d-47fa-bcea-8a57db0bd05c",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "1f28a8e7-c49f-4304-abfd-088999636aa7",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "661a2dd0-26b9-47a7-97ef-ec3b0e1ccb27",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "9fe93dd9-67c8-4279-b814-980217330540",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a24a68cb-5aa8-4866-8177-f4cb655ae9f1",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "14a7f68b-e637-4f48-9270-9e8a8efe6c3d",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4721db7e-2197-4ed4-845d-d5b601ca79ea",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "222d30f7-b46c-48c4-baf8-7bf11a3e4d7c",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "90cfa501-fc3c-491b-b368-fddd04129121",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "61149f3c-6c9d-41f4-bcf6-816c07da9176",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "f7ab5b77-11ca-4210-97fe-6d1229a6c3f3"
                        },
                        {
                            "name": "trailers",
                            "item": [
                                {
                                    "name": "stats",
                                    "item": [
                                        {
                                            "name": "[beta] Get trailer stats",
                                            "id": "e52d175e-7393-4940-845a-0826305aefca",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "types",
                                                            "value": "<string>",
                                                            "description": "(Required) The stat types you want this endpoint to return information on.\n\nYou may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>",
                                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>",
                                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>",
                                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                        },
                                                        {
                                                            "key": "trailerIds",
                                                            "value": "<string>",
                                                            "description": " A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "<string>",
                                                            "description": " A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 Format. Millisecond precision and timezones are supported."
                                                        }
                                                    ]
                                                },
                                                "description": "Returns the last known stats of all trailers at the given `time`. If no `time` is specified, the current time is used.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "0f0d7d22-fa52-42e0-86c1-2b324f5e69e6",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "b5c3699a-1538-48bd-8bcc-53e635fca5a6",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "5960c08f-0984-43c9-8064-5bcbc2f4959d",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "41522b00-65b4-4629-81f0-003d1c68d4c5",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "6bc49a56-d358-40a4-b1a7-fbc7bec856e0",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "e773e505-a1c8-45a9-a2d7-aa0d8dde94b3",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "ed2f9145-a3a2-4858-b405-56fd137b9571",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "aa5dd4f0-eaf3-4722-ac1c-fe35d10d488a",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "9c945e58-4448-4ba5-af20-24565c809fbc",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "529b4eaf-058c-4719-a671-82a649813186",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "f47750fd-8379-488b-a868-666b75b78d2e",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "[beta] Get trailer stats feed",
                                            "id": "f3bd84bf-6289-40ad-93ef-24b505c3858a",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "types",
                                                            "value": "<string>",
                                                            "description": "(Required) The stat types you want this endpoint to return information on.\n\nYou may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>",
                                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>",
                                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>",
                                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                        },
                                                        {
                                                            "key": "trailerIds",
                                                            "value": "<string>",
                                                            "description": " A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>",
                                                            "description": "Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters&decorations=gps`.\n\nYou may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters&decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.\n\nNote that decorations may significantly increase the response payload size.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        }
                                                    ]
                                                },
                                                "description": "Follow a feed of trailer stats.\n\nThe first call to this endpoint will provide the most recent stats for each trailer and an `endCursor`.\n\nProviding the `endCursor` value to the `after` query parameter will fetch all updates since the previous API call.\n\nIf `hasNextPage` is false, no new data is immediately available. Please wait a minimum of 5 seconds before making a subsequent request.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "be3de1f4-d6db-42f0-984a-e15b2c6e1ab1",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "f5f6d394-4c38-4b9a-84d8-e42c90ca4384",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "a5edddeb-810b-4cd4-bbe4-202fc7044a49",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "cb2183af-d709-4954-a2c6-b2694518b04a",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "d8ce0874-89af-4e6c-8d52-b7beb3c07e74",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "694970e0-703a-4d87-a3fc-5df98f8d632d",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "f1c40d4e-8391-4179-a796-9ad264df9632",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "349dc0f2-a65f-4658-b8ee-0346abe6f694",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "389795da-ec2e-4748-8d2a-c1fd73bd6f4b",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "eea97484-901a-458b-8690-6246e4531513",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "5edf58ca-ba2d-4f2f-8cc0-7d2f2a012aff",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "[beta] Get trailer stats history",
                                            "id": "92978d2f-43b8-4297-952f-548732c3a208",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>",
                                                            "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>",
                                                            "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>",
                                                            "description": "(Required) The stat types you want this endpoint to return information on.\n\nYou may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>",
                                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>",
                                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>",
                                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                        },
                                                        {
                                                            "key": "trailerIds",
                                                            "value": "<string>",
                                                            "description": " A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>",
                                                            "description": "Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters&decorations=gps`.\n\nYou may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters&decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.\n\nNote that decorations may significantly increase the response payload size.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        }
                                                    ]
                                                },
                                                "description": "Returns trailer stats during the given time range for all trailers. This can be optionally filtered by tags or specific trailer IDs.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "cbbf0a78-d344-4c09-8d97-ffd6e25745d6",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "5e9b5c5b-0f4f-488a-9f46-0a5412561f79",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "b0d1e311-7ed4-4243-829f-a4da636055d0",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "1e356bee-9772-47ad-a266-82eaaf90c519",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "efccbfdb-3ef3-4e2a-afe9-0f2688be38a2",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "1ba87193-b351-49a9-89b0-036c246a5bab",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "524e5125-d0cb-4480-a92f-63701a21e23a",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "b3b7e70a-2a65-45e7-af24-df9650f79d24",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "c0701839-338c-4fa5-998d-81a198e366e1",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "3a31da6d-9301-42e9-9b1f-bcbd19868b4b",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "9004f9f1-9b65-4e98-97d5-0d6e121e38a4",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        }
                                    ],
                                    "id": "9c93b70b-df6e-451c-b0d9-08b416df4109"
                                },
                                {
                                    "name": "{id}",
                                    "item": [
                                        {
                                            "name": "[beta] Delete a trailer",
                                            "id": "d8be646b-13d7-4031-90f7-c06f457bf2f4",
                                            "request": {
                                                "method": "DELETE",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "46cb5a86-91ef-4917-9630-7cf506c2a8f6",
                                                            "key": "id",
                                                            "value": "<string>",
                                                            "description": "(Required) Unique identifier for the trailer to delete."
                                                        }
                                                    ]
                                                },
                                                "description": "Delete a trailer with the given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "40583555-9204-4737-81d9-e74848244403",
                                                    "name": "No Content response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "_postman_previewlanguage": "text",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": ""
                                                },
                                                {
                                                    "id": "b0c146c4-dc90-4edf-8e60-7ef00d8cb325",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "2f1a0ee2-5bb7-4760-a2d4-004578ef97ea",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "405879cb-3bd6-41af-8813-d42f8b113e3f",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "02f28613-888e-4dbc-8fe1-c005de85b458",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "979d6093-1bd6-4681-8d02-8924075fb45a",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "975a2014-d37b-4558-84be-29745375a790",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "435105bc-8a9d-498f-8e71-9fed286a6db4",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "93af3069-86a9-4bfc-9ed9-4b59a24b2f3f",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "711ebd1c-2446-42aa-ae99-d17c8ff52fcb",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "0c90978b-7e85-4408-808c-b70f76762424",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "[beta] Retrieve a trailer",
                                            "id": "198e1784-50cf-4d97-8686-0d95aece3144",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "ab24c318-26d8-4834-b6ca-56c82369ce84",
                                                            "key": "id",
                                                            "value": "<string>",
                                                            "description": "(Required) ID of the trailer. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: \"key:value\". For example, \"maintenanceId:250020\"."
                                                        }
                                                    ]
                                                },
                                                "description": "Retrieve a trailer with given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "ea5f3fd2-7033-4235-b30d-f0c616331583",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enabledForMobile\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSerialNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "f9448f01-8120-47be-81a1-db5bea1a7a8f",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "e14953f2-3133-4166-967b-5bfede5959c0",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "747aa53f-0432-41b8-8c3a-e6f09a96cfe3",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "020ca93c-f5c2-4937-b16c-577a3a6a4eaf",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "0aaeab96-f978-4287-ab69-ee0d1adb14b1",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "58fc506c-4b99-44ca-8f6b-170a07144229",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "e01cca2e-93f8-4206-b1e1-f2b14def3083",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "6bcfa7a5-dad4-4733-b6a0-4ba8ecc61a26",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "67859662-f486-4bf9-981b-21fb39ea5468",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "760d42b6-19cf-4631-9e18-a7d044f35d6d",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "[beta] Update a trailer",
                                            "id": "b83585a7-0d83-4dfc-8401-3aea53b2bbc7",
                                            "request": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "6646aca9-cb75-46a4-88ee-f458257bd417",
                                                            "key": "id",
                                                            "value": "<string>",
                                                            "description": "(Required) Unique identifier for the trailer to update."
                                                        }
                                                    ]
                                                },
                                                "description": "Update a trailer.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "6f07d925-3788-4ddf-af54-0949855655e0",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enabledForMobile\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSerialNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "872fc685-4ce7-46ed-a744-1b7781a76ef1",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "2b58ba84-41d3-4679-a3ea-adcc92c303fe",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "5e5a028d-fe76-4d70-a2ac-61d774242ab3",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "6f2513a2-dcc3-4d96-bad7-86ad55099e32",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "45c269c3-effa-4ca2-b79f-e24cbd9a34c6",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "9f8002a1-aa28-4f46-b460-d4ca9e118fdb",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "473835cc-e88c-41f4-ba5f-65942d96e6f1",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "06d5432f-bd10-4203-86e1-984729e9e754",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "ef2b3bad-80bf-409b-b4ff-7ba06de5d154",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "e68b97d6-636a-4871-802d-5b7b4d1cb472",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        }
                                    ],
                                    "id": "eebaba7a-4087-4d97-9606-03b4c7e7a1aa"
                                },
                                {
                                    "name": "[beta] List all trailers",
                                    "id": "5ffb8079-b057-4635-8a23-fb8eba952dc6",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "trailers"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>",
                                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>",
                                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512",
                                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                }
                                            ]
                                        },
                                        "description": "List all trailers.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "234aedcf-d77e-4d3c-80dd-56e86430628c",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "4212f6fd-bed7-4ec6-95e1-ca2233eafeaa",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "67dafb56-dc4d-46cb-83c8-8301e13a8703",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b8c92f61-a263-4d8b-9683-cfabb4ed4c90",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2c05f17e-4dd1-48f1-8b0c-ccfb3ae0b3ee",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4a1bef3d-5043-4a7f-832e-7392eb4aca80",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "9061ac2f-a76c-47f1-b94f-7391ff1a0267",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "456a94a7-e0ad-45d9-8536-4336226611f4",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "06a5d9c5-50ad-467a-9149-003fc755c132",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2ea12c61-bc4e-4008-825a-282d24a0646d",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "17094e37-a2e8-490f-bc66-5db96b762393",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Creates a new trailer asset",
                                    "id": "58f482d5-3a24-4425-959f-c9eb06e26c6d",
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/trailers",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "trailers"
                                            ]
                                        },
                                        "description": "Creates a new trailer asset.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "505eae58-0ae3-46f4-afd2-4556b9ef6b85",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enabledForMobile\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSerialNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "16b991af-a47a-4157-b000-46c19a0f48c5",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0a8115f1-0ff1-499f-876f-e60076bda638",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "04db7c89-9cda-4aec-89e2-f1fafa9fc435",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "cf4f70fd-a871-4f2b-aaef-5c82f2c13cda",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "fc49e214-ede2-4988-a10d-ebf72e1036a9",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "76a36673-e920-4de7-93b0-64f1c9009989",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "424cc96a-b345-49f6-a6db-5ce1c2d20582",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c79874fe-e1db-43a9-a1cc-c577e608de87",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "375e6aa6-6197-48c8-be2c-49846f2ade9f",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b0bbd505-f2fb-40fb-a667-7cf64f759880",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "c7074e88-d596-4d7e-8e7c-7b00bb72c1cb"
                        },
                        {
                            "name": "[beta] List driver efficiency",
                            "id": "1d792bea-9d17-41de-bc92-23ad50d8a202",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/fleet/drivers/efficiency?driverActivationStatus=<string>&driverIds=<string>,<string>&after=<string>&driverTagIds=<string>,<string>&driverParentTagIds=<string>,<string>&startTime=<dateTime>&endTime=<dateTime>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "fleet",
                                        "drivers",
                                        "efficiency"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverActivationStatus",
                                            "value": "<string>",
                                            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers)."
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Cannot be used with tag filtering or driver status. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "driverTagIds",
                                            "value": "<string>,<string>",
                                            "description": "Filters summary to drivers based on this comma-separated list of tag IDs. Data from all the drivers' respective vehicles will be included in the summary, regardless of which tag the vehicle is associated with. Should not be provided in addition to `driverIds`. Example: driverTagIds=1234,5678"
                                        },
                                        {
                                            "key": "driverParentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "Filters like `driverTagIds` but includes descendants of all the given parent tags. Should not be provided in addition to `driverIds`. Example: `driverParentTagIds=1234,5678`"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<dateTime>",
                                            "description": "A start time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `startTime` is 2020-03-17T12:06:19Z then the results will include data starting from 2020-03-17T12:00:00Z. The provided start time cannot be in the future. Start time can be at most 31 days before the end time. If the start time is within the last hour, the results will be empty. Default: 24 hours prior to endTime."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<dateTime>",
                                            "description": "An end time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `endTime` is 2020-03-17T12:06:19Z then the results will include data up until 2020-03-17T12:00:00Z. The provided end time cannot be in the future. End time can be at most 31 days after the start time.   Default: The current time truncated to the hour mark."
                                        }
                                    ]
                                },
                                "description": "Get all drivers' efficiencies. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "04a0a483-e9c3-419e-938b-8d12727e115b",
                                    "name": "List of all drivers' efficiencies",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/drivers/efficiency?driverActivationStatus=<string>&driverIds=<string>,<string>&after=<string>&driverTagIds=<string>,<string>&driverParentTagIds=<string>,<string>&startTime=<dateTime>&endTime=<dateTime>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "drivers",
                                                "efficiency"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverParentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<dateTime>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<dateTime>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"driverSummaries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"summaryEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"summaryStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "4117908b-d692-4786-8adf-0d17409fa6c2",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/drivers/efficiency?driverActivationStatus=<string>&driverIds=<string>,<string>&after=<string>&driverTagIds=<string>,<string>&driverParentTagIds=<string>,<string>&startTime=<dateTime>&endTime=<dateTime>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "drivers",
                                                "efficiency"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverParentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<dateTime>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<dateTime>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Update an equipment",
                            "id": "7c58be52-87e1-4fef-b2c1-9bbf982904c1",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "0e864e45-5d72-4c58-bcfb-40c756ea6c65",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed."
                                        }
                                    ]
                                },
                                "description": "Update an equipment.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "76db94f8-deba-4d6e-870e-dcac6f8fb994",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"equipmentSerialNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "602f68f2-7b4a-4289-acf1-bd9bbd7c77f6",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7727f703-3721-4ad3-bb57-373967a6a8cb",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5cd657a5-f014-49e7-b61f-58dff63e46e6",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "00e2e83e-0524-4ecd-a312-37a0ac4d5630",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3b3faa04-c249-4c6c-ab4e-026c9d500454",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "76a224a1-d049-4467-9a10-5ebcf0ec4a02",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5ae873dc-6392-44fa-b74b-8a2f93dea425",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "feab3979-43be-49a9-97a0-f059364a11be",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "86baf8e4-1547-4b3f-a56c-cbb85706b3b8",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6ef6c70a-c078-4ab5-9292-ff50517cf766",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<long>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Fetches safety activity event feed",
                            "id": "b89ae8e7-eb23-4bf0-8ea8-121b4b3c3316",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "fleet",
                                        "safety-events",
                                        "audit-logs",
                                        "feed"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get continuous safety events. The safety activity event feed offers a change-log for safety events. Use this endpoint to subscribe to safety event changes. See documentation below for all supported change-log types.\n\n| ActivityType      | Description |\n| ----------- | ----------- |\n| CreateSafetyEvent      | a new safety event is processed by Samsara       |\n| BehaviorLabelActivityType   | a label is added or removed from a safety event        |\n| InboxActivityType   | a safety event inbox state is updated        |\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "eec3ea04-44a2-4cb0-a7f1-eee62f7fb182",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "1db36760-cefb-404d-847f-b805611d1d26",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e80ea5e3-f42f-461e-969f-6a5e1964fd83",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "fb57d1ac-d00b-4707-a1f1-f3bea06591dd",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4f102c7c-28b1-4875-a5bf-b13341635cce",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3f499c7f-3682-47e6-9528-b7f8943830da",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "18f39d15-bc9c-4da0-93ca-4ab549b42879",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a945c5ab-a625-4b16-ab5c-8466fe391666",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2a062671-4c7d-4ab6-9523-b52a494f558a",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "12c71d58-51ec-4548-b13f-ff9585d50bf2",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "16add97a-06c5-45a6-86a4-2b4ff36528a5",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Update engine immobilizer state of a vehicle.",
                            "id": "e73e645c-cd88-45a5-a626-ee66c1a66eea",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"state\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "fleet",
                                        "vehicles",
                                        ":id",
                                        "immobilizer"
                                    ],
                                    "variable": [
                                        {
                                            "id": "8d47870f-5e13-4d83-b9eb-a0204e581ecb",
                                            "key": "id",
                                            "value": "<long>",
                                            "description": "(Required) Vehicle ID"
                                        }
                                    ]
                                },
                                "description": "Update the engine immobilizer state of a vehicle. This requires an engine immobilizer to be installed on the vehicle gateway. The desired engine immobilizer state will be set on the vehicle when the vehicle gateway is online, and the engine is not running.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "042f4176-a93d-4d5a-8dd1-50ed627e2dc0",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"id\": \"<long>\",\n \"state\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8e9e54f7-fa44-4e64-b400-4323ab44ae1e",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1fac4eee-c67b-4c8c-9deb-1bbf9e763841",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "9274aa29-0288-41c1-b95e-2e7921279550",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "91e1534c-d748-4684-b5bb-6b57ec4c0957",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5e943308-e3da-4e2e-aef5-c5c5b8140153",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "12b51572-c468-423e-abd3-41cfd5fc66d4",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7aa48d5e-fe8c-4e43-9aff-12f02244cdf8",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "be3ae356-0348-4a35-a255-5c3e8630bc4c",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "398b67c3-6682-44e1-91ca-7c519c23af1d",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6f4521e5-d955-43f3-8af4-10c844c4f614",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "30bcb975-b403-42ee-b251-7d71cc940e7a"
                },
                {
                    "name": "ifta-detail/csv",
                    "item": [
                        {
                            "name": "[beta] Create a job to generate csv files of IFTA mileage segments.",
                            "id": "d0aba6c4-4cb4-41ee-a740-73688f97c840",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "ifta-detail",
                                        "csv"
                                    ]
                                },
                                "description": "Create a job to generate csv files of IFTA mileage segments.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "83993e69-12a0-4bd9-8a71-b2f1a1dd4c1f",
                                    "name": "Created response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"args\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requestedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"completedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"files\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "2d960430-4478-4e0a-b248-4586500969fc",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a760ece6-1b8a-4dc8-8b11-c06aa7590607",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "57913d30-5293-4adc-8d92-174c3bdad91e",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f179d7e7-615f-440a-ae05-e8c24b9b0abd",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6c35194f-2cd3-43a6-a15d-376c2255b7a3",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6980647d-a849-4eb9-86ab-8f341cc585a5",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8ec3ea9b-6280-48cc-8926-a2eba32ee43a",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a5345925-e876-4b0c-b15f-ce86149529aa",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1046905a-3150-4ba1-8d1c-87196450c4fe",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4c9e02c5-2268-4b32-b2ea-1f009fbedc53",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Get information about an existing IFTA detail job.",
                            "id": "19021061-85c9-4023-b501-d6459957019d",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "ifta-detail",
                                        "csv",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "98b269ce-875c-43a0-9a1f-3801ce98bfb5",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the requested job."
                                        }
                                    ]
                                },
                                "description": "Get information about an existing IFTA detail job.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "0e4f6a88-1a11-493c-ab10-3a7394ddaee8",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"args\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requestedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"completedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"files\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "1bbb9734-0ed7-4128-96ad-85dff663fc52",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "30a57bdb-d3e7-4f4a-b8bb-c291e4ffeb50",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6febed99-a84f-42ae-ae62-9321506347f0",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b30acdeb-b27a-4ecf-873d-1cace776594d",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d4c1627a-bf47-4f11-b1db-2f2e5b4170ea",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a0ae8393-c096-426d-89c3-3ed845606f91",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cf5cea4c-9668-4b83-be76-68d5714075fe",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "bbbb2408-058b-4eb8-afce-b835df00efbe",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "210978e0-ecc4-4a62-a8df-33d983620318",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f864ab6a-05d9-46a2-ada7-f1bfb54e9df8",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "12949236-dc46-4fa9-abf7-7cd010df7e4b"
                },
                {
                    "name": "industrial/jobs",
                    "item": [
                        {
                            "name": "[beta] Deletes an existing job",
                            "id": "74287654-0e16-4a4f-bb51-72e2d0ddbb86",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "industrial",
                                        "jobs"
                                    ],
                                    "query": [
                                        {
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`, `\"jobId:98765\"`)."
                                        }
                                    ]
                                },
                                "description": "Deletes an existing job\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "fa9e583e-ffd5-49df-a4d0-e8f46d65f9da",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"id\": \"<string>\",\n \"uuid\": \"<string>\"\n}"
                                },
                                {
                                    "id": "29e6ca7c-f28e-4f61-aebb-4f0fd5b9eda0",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "9a778be5-848c-400b-9439-e4f2a0d98768",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d8f98c30-d8c4-4386-9c03-101f825bb14c",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "dd0e5cdb-bc6b-4bde-a153-65f68bb72fc6",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7bcb0a2a-45b5-41d9-8100-02fa281f0f5c",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ffc70d9c-4895-44e1-b09a-0633ea13d62b",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "aaa2451b-c17a-4025-bd2c-c4b75dfa1069",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "92c2d594-865c-4e9b-bad5-b0f49736be5e",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5917e1c6-b719-4ca7-9974-be6c76d2caa7",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4fd6f4e0-338f-44ba-955d-db10e9d14cd8",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Fetches all jobs",
                            "id": "5f596932-ebbc-48e5-a764-c8b9ef7236cb",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "industrial",
                                        "jobs"
                                    ],
                                    "query": [
                                        {
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`, `\"jobId:98765\"`)."
                                        },
                                        {
                                            "key": "startDate",
                                            "value": "<string>",
                                            "description": " A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endDate",
                                            "value": "<string>",
                                            "description": " An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "industrialAssetIds",
                                            "value": "<string>",
                                            "description": "IndustrialAssetId in STRING format. (Example: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`)."
                                        },
                                        {
                                            "key": "industrialAssetIds",
                                            "value": "<string>",
                                            "description": "IndustrialAssetId in STRING format. (Example: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`)."
                                        },
                                        {
                                            "key": "fleetDeviceIds",
                                            "value": "<integer>",
                                            "description": "FleetDeviceId in INTEGER format. (Example: `123456`)."
                                        },
                                        {
                                            "key": "fleetDeviceIds",
                                            "value": "<integer>",
                                            "description": "FleetDeviceId in INTEGER format. (Example: `123456`)."
                                        },
                                        {
                                            "key": "status",
                                            "value": "<string>",
                                            "description": "A job status in STRING format. Job statuses can be one of three (ignores case): `\"active\", \"scheduled\", \"completed\"`  Valid values: `active`, `scheduled`, `completed`"
                                        },
                                        {
                                            "key": "customerName",
                                            "value": "<string>",
                                            "description": "Customer name to filter by"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Fetches jobs based on id/uuid or provided filters\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "22c95585-b124-40c3-96b6-5e91fa0bdeee",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"id\": \"<string>\",\n \"uuid\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a3dec598-1968-4cd5-917f-0b92347923c3",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d81292ba-194b-4928-8367-e08f993b048c",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2f3652d3-d68c-4e49-82e0-20962c266aa7",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "afc8bffa-8b13-4ba3-82e9-fbf6362d58c1",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ba69d57d-1a5c-4915-b4c6-59b2d951174d",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "9fa1053d-9b93-4d36-aed7-e8dc2f4f692f",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7f2df9b2-a864-49b6-9b4b-93d8b2e09a03",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a37ba359-5214-4b61-b39b-45c139cc4161",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "675c1a49-a62a-4a7e-9759-846f95eb8282",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "845d0e7e-a8ee-4d84-b409-53711839dea5",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Patches a job",
                            "id": "7369baaa-2985-4c4c-848d-dc106f0c4eec",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "industrial",
                                        "jobs"
                                    ],
                                    "query": [
                                        {
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`, `\"jobId:98765\"`)."
                                        }
                                    ]
                                },
                                "description": "Patches an existing job and returns it\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "732bcb34-21c0-4a81-bbbb-98c0e9e2754f",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"address\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modifiedAt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"uuid\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fleetDevices\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"industrialAssets\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"id\": \"<string>\",\n \"uuid\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8d90a3ca-1813-439e-9705-5d643146aeee",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cd680bcb-5742-4689-a98b-509e633543af",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8fee9cda-96d4-4ca3-8bb4-a18c71a8adff",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "62c300a4-8565-4185-8179-07859200ac58",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1ead8a24-7b75-44e2-a5ae-b79f7ab36660",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "57a4ae27-ddce-4fc9-aa37-593ab5e0d911",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8d984d7e-3a09-40fa-8477-9c2939f1d2a8",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "103a9b74-256e-4ae3-b77c-167e6c34c4e2",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "bb101ea3-b561-4e6e-b726-2538b271a3f4",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2a47aa2c-9312-4677-9ff0-6f0fb9a002dc",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Create a job",
                            "id": "3adfc3b1-1fcd-4efc-89d6-31d4c6cb2c5d",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/industrial/jobs",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "industrial",
                                        "jobs"
                                    ]
                                },
                                "description": "Creates a new job and returns it\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "ef9d5df8-c8c1-43e3-a45d-0e9450c20271",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"address\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modifiedAt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"uuid\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fleetDevices\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"industrialAssets\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"id\": \"<string>\",\n \"uuid\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f0674ba3-3bc5-45ba-b3b3-fc4418e10c3c",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2f5fd2d4-f0df-4805-af3f-a9431d2bea54",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ef3358c7-1f6d-4716-b579-c1fc8f017ce9",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "591df307-35c2-415b-8b5b-bcc5b18c8607",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "fbf7ebe4-0690-430e-9684-b665071a6e8d",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f86e6ddd-17e6-4b08-99fe-f0d192e9c953",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5fbab0f6-3315-4fb5-b88f-9f09459387e9",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f79f7f0c-98cd-4829-8dcd-a94fe05add7e",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "42ce0215-a8de-47ce-b78e-818907f5b5e1",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "9c43e538-ef32-45d9-b64e-7983fd8841d2",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "63240eb2-1eb8-469f-908f-e10568374159"
                },
                {
                    "name": "webhooks",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "[beta] Delete a webhook with the given ID",
                                    "id": "b8150e5f-17e9-4c4b-a680-19253d8355e4",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "7c4f64e6-0891-4c68-9599-92d9011fd3b1",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) Unique identifier for the webhook to delete."
                                                }
                                            ]
                                        },
                                        "description": "Delete a webhook with the given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "09d27aa7-afc6-496e-8c5c-25eee08c96be",
                                            "name": "No Content response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": ""
                                        },
                                        {
                                            "id": "c5b70463-4ee1-4de1-b164-c472878e0f7d",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8d78eea4-670a-479a-a934-7e996d0b9c8d",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c90693e6-d648-4bd7-b6ec-5fcfd40ad370",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "cd8564bb-44ed-4915-8e55-e882bbd01b1d",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0182078e-7d45-45cf-b3ac-0bd96a6f89cf",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "879e8917-fc6a-4b38-9e43-33edb8177a2d",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f103fe09-52ed-4780-ac09-eb960618e65c",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c0260d1e-d824-46fd-a02e-d65f9fd88908",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a99081e9-6d00-4c70-b1e0-9c21a9a6c0dd",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0918e6b2-fe44-41d2-bb6b-414a66300da4",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Retrieve a webhook with given ID",
                                    "id": "87374b0b-7e38-4679-b4a4-890a75ac1800",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "7cce5cbc-3501-4ae1-b9c4-56620ecedc1f",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the webhook. This is the Samsara-specified ID."
                                                }
                                            ]
                                        },
                                        "description": "Retrieve a webhook with given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "720b2f1d-5849-4a5a-9338-364715bcb7cf",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"id\": \"<string>\",\n \"name\": \"<string>\",\n \"secretKey\": \"<string>\",\n \"url\": \"<string>\",\n \"version\": \"<string>\",\n \"customHeaders\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "375bbb93-cc27-4575-8ead-deaddcca407c",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b8010c6a-dd94-4dd0-8a89-a6c0b57573c2",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "5b76ea08-76b3-4793-ad3b-a8e3645fb8b9",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7fbf4bfd-6b2a-4415-be84-9a24f2419bac",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6c15c138-2b1b-428a-9d31-39ac8390fb5e",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "40b861b9-6a6f-48ed-940e-a7aad22a4bb9",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c157ffd6-e904-4f6c-a33a-e2b4366c4729",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "3376e72c-27b1-451e-8fc7-d09cef2d702f",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "3e593025-859f-4bcd-902c-8b5675f127cd",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2b726f8c-856c-493f-b914-f3b2ef8e0952",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Update a specific webhook's information.",
                                    "id": "accd67a0-2ad7-4f0f-91b7-955732765442",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "93317786-8b3e-4cdf-851f-d25ae6d078b1",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) Unique identifier for the webhook to update."
                                                }
                                            ]
                                        },
                                        "description": "Update a specific webhook's information.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "ab1f8f10-9724-41a0-a233-fe4c0eef469e",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"id\": \"<string>\",\n \"name\": \"<string>\",\n \"secretKey\": \"<string>\",\n \"url\": \"<string>\",\n \"version\": \"<string>\",\n \"customHeaders\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "a25822d7-dd30-4bb9-8cd3-30182ae3cf1c",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "473278c0-1a70-4a15-add2-ad07da987f2d",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "14eb0f48-7c88-4ba9-8c3c-65511ddc3a0e",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "56b2bf19-090a-4247-abc4-76813ff82320",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "d998d17e-d7c2-4f3d-b05a-ccf2b1126be4",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a467a7e8-bf44-4ac9-bf45-3ab0a7566f89",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b5f34d27-de7b-4bfe-b639-756b92b51774",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ad87920e-93c6-4e69-800f-65041b944707",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "fd7c8e1d-d5c7-4a02-a7ae-4989673238bc",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b4dd6f8e-f3c1-4df4-935c-2895bf5a49cd",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "b848c03a-2667-4515-a13e-2caf4ac5c56d"
                        },
                        {
                            "name": "[beta] List all webhooks belonging to a specific org.",
                            "id": "0d6d387c-a295-447a-9dfe-3a042e814c12",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "webhooks"
                                    ],
                                    "query": [
                                        {
                                            "key": "ids",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of webhook IDs. Example: `ids=49412323223,49412329928`"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "512",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "List all webhooks belonging to a specific org.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "fe566f09-263d-4934-b72a-f3e01bf09775",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "c758cd7c-dc9d-4772-9732-ddbea7cb4440",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "92f36a05-5444-42f2-b35f-4e0d880335b9",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "083bb196-99f6-43c4-94c9-69be80132389",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "99e018e6-24c4-4b86-9158-911eb5050cda",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5b2c92d3-5191-47f0-b5d4-e9329216f677",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "fb4f3947-d093-4949-8e4d-2629959ffc0b",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4b69ff3e-7c18-4bfa-8d89-2e07a5c20b28",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f34df98b-dd8e-447d-81fe-0dc775a651f5",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6a8b037f-98b2-41ae-955f-219dddf2346f",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4362a308-bd5e-4704-9404-ccf26b395ea4",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Create a webhook",
                            "id": "6ed97f85-2d4c-41b6-a810-5ee38078f9e3",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/webhooks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "webhooks"
                                    ]
                                },
                                "description": "Create a webhook\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "15dc019d-4dc2-46ef-9754-f3fbcef2ba2f",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"id\": \"<string>\",\n \"name\": \"<string>\",\n \"secretKey\": \"<string>\",\n \"url\": \"<string>\",\n \"version\": \"<string>\",\n \"customHeaders\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "e0c9e6a4-6495-494a-8c2a-0d9d39f4a045",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d22d7c06-47d9-417e-b7c0-933d916903e1",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c9dcc1e4-0c4b-4d04-a1db-dafe779f0918",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cdb02253-fd8d-4122-9abd-d74ad5399caf",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0bf6bb8d-42f3-421c-bfc5-b0b8ed5418ba",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7dae2189-aff6-4ea8-a882-8917a8be50f7",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d827996c-dd44-44e6-9d21-f88d53c21d5e",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "012b9f69-a092-4ee1-ac55-795484a9523b",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "9d66358b-f21a-4769-96d2-01e9de25e627",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "92a9c12f-fd1b-488a-887a-93757e0b834b",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "d4a8c1ca-2784-4a0f-a29a-1cc8fcdff299"
                },
                {
                    "name": "[beta] Get an AEMP equipment",
                    "id": "9753b7da-076c-4dc3-96ca-be37ec649bf6",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "beta",
                                "aemp",
                                "fleet",
                                "equipment",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "id": "a5b7f518-93fc-4921-94d3-31d1f257e426",
                                    "key": "id",
                                    "value": "<string>",
                                    "description": "(Required) The Samsara equipment id or external id. This is automatically generated when the Equipment object is created. It cannot be changed."
                                }
                            ]
                        },
                        "description": "Get an equipment following the AEMP ISO 15143-3 standard.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "cb2937d0-d643-4380-90b3-e40c9335e3fa",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"Fleet\": {\n  \"Equipment\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "508158ea-4c99-4554-ad5e-5b0109f1017e",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "3b96c8c4-d18a-49a0-9058-c0bac1546844",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "5e78cb2f-4a3a-4b70-94d7-af45d3d07f63",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "39f0736a-5368-45f7-8525-a3c394a4e746",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "07aa7028-fa3f-4cc8-995b-a05c0223542b",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "e2d63de5-a926-4acd-9e44-20ec35654de1",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "f7c47c24-62da-4c7a-bb2c-a8de4a6b9471",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "22130eb1-13dd-42d9-b999-7fe22ac2caa1",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "6ed35bf8-ee9d-4fa1-8ca5-eaa575345dcf",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "a521a2c8-7171-4512-a59b-2b8b73f60855",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "ed4fd6a7-4551-48b3-ab36-19b3f7936ed7"
        },
        {
            "name": "contacts",
            "item": [
                {
                    "name": "{id}",
                    "item": [
                        {
                            "name": "Delete a contact",
                            "id": "54e87a6c-1769-4562-94e0-815a10f10ba1",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/contacts/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "20884fdb-de7b-4e7a-8ba2-ac6b79901663",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) Unique identifier for the contact."
                                        }
                                    ]
                                },
                                "description": "Delete the given contact. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "13c79974-0cdf-486b-9303-9aa8c00efbab",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "4c81094a-ac7a-4dd6-bb10-186c4d05615b",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve a contact",
                            "id": "f7753ab7-72e2-4c1e-b2e7-333bd9e9a81f",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/contacts/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "bb147208-0518-455d-8b4f-ba0050f2ee99",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) Unique identifier for the contact."
                                        }
                                    ]
                                },
                                "description": "Get a specific contact's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "e592d804-4f38-4664-843a-e3bf2c74175a",
                                    "name": "Returns the specified contact.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "0c363672-efec-402a-a5da-ad0ecca1bcd7",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a contact",
                            "id": "446118cc-b809-4383-9e68-d1af9895dfef",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/contacts/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "e704b57a-f3d0-4d15-ba4f-49349cab67c1",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) Unique identifier for the contact."
                                        }
                                    ]
                                },
                                "description": "Update a specific contact's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "4eebf9b2-ec40-4ce8-9fc1-1288425adf0d",
                                    "name": "Updated contact object with given ID.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "8be2cead-1cdf-486f-933d-ccdd5f5ab864",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "b63df499-ef95-4713-b14b-f6fddc8ffb4f"
                },
                {
                    "name": "List all contacts",
                    "id": "45927842-7020-43ca-88c4-5cbb97fd416c",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/contacts?limit=<long>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "contacts"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "<long>",
                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                },
                                {
                                    "key": "after",
                                    "value": "<string>",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Returns a list of all contacts in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "46bf3ae7-7610-4fb7-8158-614598d9ce59",
                            "name": "List of all contacts",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/contacts?limit=<long>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "2b1c451c-bbd4-4e5d-9fba-8013834d97ed",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/contacts?limit=<long>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create a contact",
                    "id": "176e9bb4-2d96-48cf-9e6f-8125aaae3ee8",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/contacts",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "contacts"
                            ]
                        },
                        "description": "Add a contact to the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "7747e979-e936-4d28-b75d-c4158caf0c6b",
                            "name": "Contact was successfully added.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/contacts",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "ccb87633-a472-496e-8211-161246bc7dd5",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/contacts",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "e39f8971-5aaa-4b89-9ca6-a211f2458f71"
        },
        {
            "name": "fleet",
            "item": [
                {
                    "name": "carrier-proposed-assignments",
                    "item": [
                        {
                            "name": "Retrieve assignments",
                            "id": "b1d912f1-dd3e-4edc-b886-0e1c2df6a521",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments?limit=<long>&after=<string>&driverIds=<string>,<string>&activeTime=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "carrier-proposed-assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>",
                                            "description": "If specified, limits the results to those for these drivers. e.g. `driverIds=1,2,3`"
                                        },
                                        {
                                            "key": "activeTime",
                                            "value": "<string>",
                                            "description": "If specified, shows assignments that will be active at this time. Defaults to now, which would show current active assignments. In RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        }
                                    ]
                                },
                                "description": "Show the assignments that are active for drivers and that would currently be visible to them in the driver app. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "7731bdcb-c7ad-471d-a372-4fbd23b314cf",
                                    "name": "Returns the assignments that drivers would see in the future, if any.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments?limit=<long>&after=<string>&driverIds=<string>,<string>&activeTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "activeTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "1ee8f2a1-6ac8-486e-8733-7c95cb914511",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments?limit=<long>&after=<string>&driverIds=<string>,<string>&activeTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "activeTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create an assignment",
                            "id": "e80e6d92-69ec-467a-8694-f227b6f2675e",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"vehicleId\": \"<string>\",\n    \"activeTime\": \"<string>\",\n    \"shippingDocs\": \"<string>\",\n    \"trailerNames\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "carrier-proposed-assignments"
                                    ]
                                },
                                "description": "Creates a new assignment that a driver can later use. Each driver can only have one future assignment. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "4b2200cb-be7a-4e87-8c96-2a0acbfa824f",
                                    "name": "Return the created assignment",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverId\": \"<string>\",\n    \"vehicleId\": \"<string>\",\n    \"activeTime\": \"<string>\",\n    \"shippingDocs\": \"<string>\",\n    \"trailerNames\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"activeTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"acceptedTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstSeenTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"rejectedTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shippingDocs\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailers\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "9b52e008-a2b1-45a0-98f0-a827c53876d6",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverId\": \"<string>\",\n    \"vehicleId\": \"<string>\",\n    \"activeTime\": \"<string>\",\n    \"shippingDocs\": \"<string>\",\n    \"trailerNames\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Delete an assignment",
                            "id": "9f9866d2-977f-42f9-bcaa-6ff826d81b00",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "carrier-proposed-assignments",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "5c50e6e4-6159-4891-8e31-81fcdd58e734",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the assignment."
                                        }
                                    ]
                                },
                                "description": "Permanently delete an assignment. You can only delete assignments that are not yet active. To override a currently active assignment, create a new empty one, instead. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "64b5f52d-6d69-4319-888b-c6d682125992",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "5a4a4ae5-4f28-41c3-9198-546a20a65bc3",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "ed0cd3b7-6c97-40a6-bd88-0dcfea2e90f6"
                },
                {
                    "name": "defects",
                    "item": [
                        {
                            "name": "Get all defects",
                            "id": "9da485f2-9897-4ed0-a61a-1e102bae25bf",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/defects/history?limit=<long>&after=<string>&startTime=<string>&endTime=<string>&isResolved=<boolean>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "defects",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). *The maximum time period you can query for is 30 days.*"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). *The maximum time period you can query for is 30 days.*"
                                        },
                                        {
                                            "key": "isResolved",
                                            "value": "<boolean>",
                                            "description": "A filter on the data based on resolution status. Example: `isResolved=true`"
                                        }
                                    ]
                                },
                                "description": "Returns a list of DVIR defects in an organization, filtered by creation time. The maximum time period you can query for is 30 days. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "4eb4616b-76a3-48c7-b4b0-613c4d622030",
                                    "name": "List of all DVIR defects in the organization",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/defects/history?limit=<long>&after=<string>&startTime=<string>&endTime=<string>&isResolved=<boolean>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "defects",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "isResolved",
                                                    "value": "<boolean>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "5aec20ac-508c-45ad-a5e2-c1c79097b369",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/defects/history?limit=<long>&after=<string>&startTime=<string>&endTime=<string>&isResolved=<boolean>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "defects",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "isResolved",
                                                    "value": "<boolean>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a defect",
                            "id": "fe4d5adc-193b-402d-9863-043cc48ca2b5",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"resolvedAtTime\": \"<string>\",\n    \"resolvedBy\": {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/defects/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "defects",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "ac301e12-12f8-4314-8dd0-e7b748a29396",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the defect."
                                        }
                                    ]
                                },
                                "description": "Updates a given defect. Can be used to resolve a defect by marking its `isResolved` field to `true`. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "97e5bcb0-d95f-498e-b0f1-715b5cc6be16",
                                    "name": "Return the modified defect entity",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"resolvedAtTime\": \"<string>\",\n    \"resolvedBy\": {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/defects/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "defects",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isResolved\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defectType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mechanicNotes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mechanicNotesUpdatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resolvedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resolvedBy\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailer\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "406c0ccf-1782-41b3-a48b-56a6a8b095b6",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"resolvedAtTime\": \"<string>\",\n    \"resolvedBy\": {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/defects/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "defects",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "3d8655bf-c411-47de-8433-492df905d265"
                },
                {
                    "name": "documents",
                    "item": [
                        {
                            "name": "pdfs",
                            "item": [
                                {
                                    "name": "Create a document PDF",
                                    "id": "d66f587c-7285-40ae-94ac-45bbb141fc84",
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents/pdfs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents",
                                                "pdfs"
                                            ]
                                        },
                                        "description": "Request creation of a document PDF. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "21be639c-0871-496d-82d2-41974c3595cf",
                                            "name": "Newly created PDF generation job.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"documentId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/pdfs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        "pdfs"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"documentId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "f28f4064-95a9-4794-906c-e301e5b77e77",
                                            "name": "Error response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"documentId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/pdfs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        "pdfs"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Query a document PDF",
                                    "id": "901e0fb2-7229-4024-98c6-9a28f51506e1",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents/pdfs/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents",
                                                "pdfs",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "21ca37d9-e0f3-4c64-bde2-018139318d65",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the pdf."
                                                }
                                            ]
                                        },
                                        "description": "Returns generation job status and download URL for a PDF. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "d7b38536-a4bf-4f89-842c-0af196762f76",
                                            "name": "Document PDF job status and download URL.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/pdfs/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        "pdfs",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"completedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"documentId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"downloadDocumentPdfUrl\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requestedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "64771452-912b-40b7-bf71-91535ad36a6a",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/pdfs/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        "pdfs",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "fab48005-9daf-40e9-9e50-583cd1977d79"
                        },
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Delete document",
                                    "id": "be801be0-ab12-4b08-8774-e9a5269a0c53",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "9a1247be-5e01-412a-b69b-86c52bf76364",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the document to delete"
                                                }
                                            ]
                                        },
                                        "description": "Deletes a single document. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/deleteDriverDocumentByIdAndDriverId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "520730a3-679a-446a-9518-4905cd704ce2",
                                            "name": "No Content response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": ""
                                        },
                                        {
                                            "id": "28869a0b-a3d8-447e-b6bd-223fb11a4e12",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6de2c92b-252c-4712-bcf3-0cfaf6878b0e",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "e2c986fb-b1a3-4695-9d1b-06642dbb22c7",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "597bc455-e4d8-465c-acc5-78cc9f93b045",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6769ce5f-1253-44db-b40b-235f65bd4282",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a88ccf8b-a720-46c0-aa36-54df45044b29",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "059654ad-102f-471b-a438-4c48362bd308",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "fdd9c73c-56d2-4fce-b684-a1a1c93aa5e2",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ffd48974-11ea-4b9b-a05c-9b8a15375815",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "414a9585-4dd1-422e-bd81-396959198543",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Fetch document",
                                    "id": "34ad3c40-9518-4a7b-aa2b-47e7c4aced41",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "bd3f0b8f-54b4-4d2a-818e-538c6c32f803",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the document"
                                                }
                                            ]
                                        },
                                        "description": "Returns a single document. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDriverDocumentByIdAndDriverId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "dcc806dd-6a85-4711-ac9a-2f6960ffd200",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"documentType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fields\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"state\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conditionalFieldSections\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"routeStop\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "e5cb8218-facb-4938-8bcf-0c0cb9cfb577",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "5343272f-9a37-4ed1-8f2d-dbecfc2830dc",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a4aeb45c-4364-48f9-add4-ab28ad9b179e",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "87dca003-bdfb-4850-8641-16843fe567a4",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0e7ede8a-7ad2-4c2b-8a1a-6bbfb27643e8",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b94ff4bb-cdf8-429a-9613-664a2b522e1f",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2b4015f8-a779-4d51-b3d5-3839edea0c56",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "3113458f-d313-4a79-821f-e7642ae0eb8b",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "96391aa2-968a-417a-9c61-221ae297a6e6",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7bb36c28-f1de-496b-bd91-562038524872",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "65121347-3516-40f0-88da-4234478d0f08"
                        },
                        {
                            "name": "Fetch all documents",
                            "id": "ceb01b70-443f-435e-a4d4-a3b00648827a",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "documents"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "documentTypeId",
                                            "value": "<string>",
                                            "description": "ID of the document template type."
                                        },
                                        {
                                            "key": "queryBy",
                                            "value": "<string>",
                                            "description": "Query by document creation time (`created`) or updated time (`updated`). Defaults to `created`."
                                        }
                                    ]
                                },
                                "description": "Get all documents for the given time range. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDriverDocumentsByOrgId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "9e1f32a5-b7bf-41ca-b313-cb3b87b6a85f",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "7f80ce54-0735-4dd8-9513-875d0379773d",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "967885ea-fff1-4089-ac3a-a981b82107b6",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b02f5abe-23a0-4a67-9261-71e200c951e3",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ca9f06a8-8f2f-4d37-b3bf-7c92f70d8852",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1160ec9c-faec-4b50-b896-017aeeef24cb",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "32eec48a-b5ff-4516-835f-25db55bdb5a8",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "33d1b887-4e83-4d4b-9e29-167760df1a39",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "bb4fb811-bd41-4b3d-be5e-8b89a7bd2d52",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "554f5327-70c4-439e-a491-cf072c3a881e",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "30313b90-decc-409e-b9a1-78fbb3cb2831",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create document",
                            "id": "4ecc8758-d035-4a6d-9672-70c110a257a2",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/documents",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "documents"
                                    ]
                                },
                                "description": "Creates a single document. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDriverDocument).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "697e7fa7-469b-4233-b0b5-5680d4ef1f41",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"documentType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fields\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"state\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conditionalFieldSections\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"routeStop\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "86ec1599-cc89-4c3c-8201-c63b8e6b48cc",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e433a44b-e1e3-4ef7-a21f-a59e02d11be5",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "968518b6-1c59-470e-83ba-d275026be9ab",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7858b0ef-cd1d-4ec8-94c8-fcecabb125b8",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e570f2c5-efc4-43ee-b19a-a33564732af3",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3fd0260d-132b-4119-8549-67019a6514e4",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ff2465c4-6e67-4e12-a482-427a5a398dca",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8799e908-8606-40f6-9440-a92e61ef3c25",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "fbf92735-f61c-4edb-b751-3877c9f0f09e",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f6299ac6-b74e-493e-8b3a-ddd18be5bc8b",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "fe935e90-cd8f-4bfd-aa07-4cb46d734231"
                },
                {
                    "name": "drivers",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Retrieve a driver",
                                    "id": "85f36773-5e4f-4d80-a0c8-3d1f21b18e94",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "f9051f37-eab5-45f1-9d20-b4cf5edbbffc",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the driver. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                                }
                                            ]
                                        },
                                        "description": "Get information about a driver. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "0c9c75e6-7ae0-4f25-9c17-b721f3cc9658",
                                            "name": "Returns the specified driver.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/drivers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "drivers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentIdCardCode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverActivationStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldAdverseWeatherExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldBigDayExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldDayStartHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExempt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExemptReason\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldPcEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldYmEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDeactivated\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseState\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locale\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedVehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tachographCardNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"usDriverRulesetOverride\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"username\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleGroupTag\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "255f7c38-9b4a-45bd-a323-44ac943ae26a",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/drivers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "drivers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update a driver",
                                    "id": "ec94f7a7-b1ba-4aa6-b174-a7d5573562fd",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"deactivatedAtTime\": \"<string>\",\n    \"driverActivationStatus\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"username\": \"<string>\",\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "1e07d49e-898b-4c55-9bba-4536a1d712f4",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the driver. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                                }
                                            ]
                                        },
                                        "description": "Update a specific driver's information. This can also be used to activate or de-activate a given driver by setting the driverActivationStatus field. If the driverActivationStatus field is 'deactivated' then the user can also specify the deactivatedAtTime. The deactivatedAtTime cannot be more than 6 months in the past and must not come before the dirver's latest active HOS log. It will be considered an error if deactivatedAtTime is provided with a driverActivationStatus of active. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "62c4bf7f-79c2-4963-b074-79734f448de1",
                                            "name": "Updated driver object, with ID.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"deactivatedAtTime\": \"<string>\",\n    \"driverActivationStatus\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"username\": \"<string>\",\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/drivers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "drivers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentIdCardCode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverActivationStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldAdverseWeatherExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldBigDayExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldDayStartHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExempt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExemptReason\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldPcEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldYmEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDeactivated\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseState\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locale\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedVehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tachographCardNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"usDriverRulesetOverride\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"username\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleGroupTag\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "66a1a1b1-7755-49c1-9529-2661f6d42dbf",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"deactivatedAtTime\": \"<string>\",\n    \"driverActivationStatus\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"username\": \"<string>\",\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/drivers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "drivers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "361f48cb-c22f-4a6a-8730-7ae361a2c5a9"
                        },
                        {
                            "name": "List all drivers",
                            "id": "21866986-ebe6-4511-9314-fb60e6455010",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers?driverActivationStatus=<string>&limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&updatedAfterTime=<string>&createdAfterTime=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverActivationStatus",
                                            "value": "<string>",
                                            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers)."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "updatedAfterTime",
                                            "value": "<string>",
                                            "description": "A filter on data to have an updated at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "createdAfterTime",
                                            "value": "<string>",
                                            "description": "A filter on data to have a created at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        }
                                    ]
                                },
                                "description": "Get all drivers in organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "d984db9a-0f0d-4d21-9866-eea425764ce0",
                                    "name": "List of all driver objects.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers?driverActivationStatus=<string>&limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&updatedAfterTime=<string>&createdAfterTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "updatedAfterTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "createdAfterTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "0396edcc-d107-4638-aea3-f4d7c56185b5",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers?driverActivationStatus=<string>&limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&updatedAfterTime=<string>&createdAfterTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "updatedAfterTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "createdAfterTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create a driver",
                            "id": "829bced8-fc08-418c-8542-27f5a346a71a",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers"
                                    ]
                                },
                                "description": "Add a driver to the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "7284d888-ed4c-4fa6-8e1e-2520fd19d90c",
                                    "name": "Newly created driver object, with Samsara-generated ID.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentIdCardCode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverActivationStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldAdverseWeatherExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldBigDayExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldDayStartHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExempt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExemptReason\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldPcEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldYmEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDeactivated\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseState\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locale\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedVehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tachographCardNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"usDriverRulesetOverride\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"username\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleGroupTag\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "97da7574-d70d-463c-bfa0-de170f4da511",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get driver tachograph activity",
                            "id": "b252c176-7451-4ff8-8d4a-edeee0f36c2a",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers/tachograph-activity/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers",
                                        "tachograph-activity",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": "(Required) An end time in RFC 3339 format. It can't be more than 30 days past startTime. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns all known tachograph activity for all specified drivers in the time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "4d23cb74-80c7-40bf-927d-ed46acb84e0e",
                                    "name": "List of all driver tachograph activities in a specified time range.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/tachograph-activity/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "tachograph-activity",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "e1da3a60-c59e-40b7-a33f-c6b7c375d1c6",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/tachograph-activity/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "tachograph-activity",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get tachograph driver files",
                            "id": "d1ffd7bc-69e5-439b-9d7b-dfab4419356f",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers",
                                        "tachograph-files",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns all known tachograph files for all specified drivers in the time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "6425c430-1f36-42cc-8fae-0ae9e86d7e6f",
                                    "name": "List of all driver tachograph files in a specified time range.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "tachograph-files",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "127897ba-f370-4c63-81b6-6e452f881612",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "tachograph-files",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all vehicles assigned to a set of drivers",
                            "id": "5c2ac5fa-9197-470a-98c6-79e83ce923f8",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers",
                                        "vehicle-assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>",
                                            "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of driver tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of driver parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "driverActivationStatus",
                                            "value": "active",
                                            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get all vehicle assignments for the requested drivers in the requested time range. The only type of assignment supported right now are assignments created through the driver app.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "484a24d7-1380-4e1e-8dbb-1f512bb820d0",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "e437fb62-2212-4147-98fd-bb30584dca64",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4391cc61-1e2c-4697-8eb9-70d44974308d",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a8859940-78a6-44b8-9643-05aed5b53f58",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b2b113a3-9c4f-4e3f-8193-4c2caa1ab3f5",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0922b2d0-88a0-45a3-ad07-27f02889c9c9",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "dbbaad35-17cd-40eb-a172-26da62ba78dc",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "381d3ae9-2ec6-429e-87f6-9895086adeb8",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "12f6413e-813c-4738-b9b1-b9e6819af804",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f028828d-22c0-42e3-a432-ccb89a58b63b",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0eeda942-fbec-4188-baaa-d9a60c7ee42f",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "77586d1c-f46b-4c23-a8be-5e57b59ab56b"
                },
                {
                    "name": "dvirs",
                    "item": [
                        {
                            "name": "Create a mechanic DVIR",
                            "id": "83b20cc4-7881-426e-90fb-9328e40760a3",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authorId\": \"<string>\",\n    \"safetyStatus\": \"<string>\",\n    \"type\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"location\": \"<string>\",\n    \"mechanicNotes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"resolvedDefectIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerId\": \"<string>\",\n    \"vehicleId\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/dvirs",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "dvirs"
                                    ]
                                },
                                "description": "Creates a new mechanic DVIR in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "99968995-1558-49b3-b58c-3c6d9b5c609f",
                                    "name": "Newly created DVIR.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authorId\": \"<string>\",\n    \"safetyStatus\": \"<string>\",\n    \"type\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"location\": \"<string>\",\n    \"mechanicNotes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"resolvedDefectIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerId\": \"<string>\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"authorSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mechanicNotes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"odometerMeters\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"safetyStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"secondSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"thirdSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailer\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerDefects\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleDefects\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "00dc7498-e98b-4667-b8d5-abe2e007d0ab",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authorId\": \"<string>\",\n    \"safetyStatus\": \"<string>\",\n    \"type\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"location\": \"<string>\",\n    \"mechanicNotes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"resolvedDefectIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerId\": \"<string>\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all DVIRs",
                            "id": "9f855d95-1032-4f1d-9b36-a23399712153",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/dvirs/history?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&startTime=<string>&endTime=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "dvirs",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        }
                                    ]
                                },
                                "description": "Returns a list of all DVIRs in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "ef8bb9fc-c5bd-4fe0-baf2-05e1834b59bf",
                                    "name": "List of all DVIRs in the organization",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs/history?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&startTime=<string>&endTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"authorSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"endTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"licensePlate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"location\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"mechanicNotes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"odometerMeters\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"safetyStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"secondSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"startTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"thirdSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailerDefects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailerName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"vehicle\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"vehicleDefects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"authorSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"endTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"licensePlate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"location\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"mechanicNotes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"odometerMeters\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"safetyStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"secondSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"startTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"thirdSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailerDefects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailerName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"vehicle\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"vehicleDefects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "2b5bdd32-9cbb-4113-bd85-efae77af53ea",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs/history?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&startTime=<string>&endTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Resolve a DVIR",
                            "id": "89a4ff21-1356-45ea-b347-a0e2555872cb",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authorId\": \"<string>\",\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"signedAtTime\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/dvirs/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "dvirs",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "4f4895a4-f57d-4748-900d-42a3403831ae",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the DVIR."
                                        }
                                    ]
                                },
                                "description": "Resolves a given DVIR by marking its `isResolved` field to `true`. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "928dd970-fde3-4a42-a448-588f6f1a0769",
                                    "name": "Updated dvir object with ID.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authorId\": \"<string>\",\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"signedAtTime\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"authorSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mechanicNotes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"odometerMeters\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"safetyStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"secondSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"thirdSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailer\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerDefects\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleDefects\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "3757b2c0-dd5e-4d97-94b0-d609d3ca9322",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authorId\": \"<string>\",\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"signedAtTime\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "7f39db19-bd7d-41ee-8f5a-ced8b9327f42"
                },
                {
                    "name": "equipment",
                    "item": [
                        {
                            "name": "locations",
                            "item": [
                                {
                                    "name": "Get most recent locations for all equipment",
                                    "id": "751f447d-37ca-47da-a737-25fb8b5a240d",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/locations?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "locations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "Returns last known locations for all equipment. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "88ab2ebd-bed1-4f95-920d-5049427eb624",
                                            "name": "The most recent equipment locations and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "9635d329-508d-426e-a081-4744a089742a",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Follow feed of equipment locations",
                                    "id": "77c2d35b-b837-425c-809f-a31102bb1e9e",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "locations",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "Follow a continuous feed of all equipment locations from Samsara AG26s.\n\nYour first call to this endpoint will provide you with the most recent location for each unit of equipment and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment location updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. We'd suggest waiting a minimum of 5 seconds before requesting updates. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "2ff9dd3f-4b43-41c4-b903-a37545236513",
                                            "name": "The feed of equipment locations and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "d1402a15-380c-4d6e-9b27-fed293e10910",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Get historical equipment locations",
                                    "id": "6701832a-68ff-4e09-91c3-358803864e95",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "locations",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "Returns historical equipment locations during the given time range. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "a7fc9663-5a7b-4e0c-b8bf-805ca6d8de51",
                                            "name": "Historical equipment locations and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "86770ad4-eb93-4a78-b7eb-74147a3a30d5",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "51f2ed72-7a68-4dde-9c40-4e1c0f02d456"
                        },
                        {
                            "name": "stats",
                            "item": [
                                {
                                    "name": "Get most recent stats for all equipment",
                                    "id": "55af9757-8a22-448f-8f15-e86b6870cad1",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/stats?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "stats"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "<string>,<string>",
                                                    "description": "(Required) The types of equipment stats you want to query. Currently, you may submit up to 3 types.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG26 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG26 was activated, and a manual odometer offset provided in the Samsara cloud dashboard. Valid values: `Off`, `On`."
                                                }
                                            ]
                                        },
                                        "description": "Returns the last known stats for all equipment. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "f130d3a6-1e6a-4546-aec8-7b89dc2209e6",
                                            "name": "The most recent equipment stats and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "dfd7d12a-b1b7-4e8e-af71-f0be864f0e14",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Follow a feed of equipment stats",
                                    "id": "b6a21496-513f-4a77-b159-dad558a82f44",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "stats",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "<string>,<string>",
                                                    "description": "(Required) The types of equipment stats you want to query. Currently, you may submit up to 3 types.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG26 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG26 was activated, and a manual odometer offset provided in the Samsara cloud dashboard. Valid values: `Off`, `On`."
                                                }
                                            ]
                                        },
                                        "description": "Follow a continuous feed of all equipment stats from Samsara AG26s.\n\nYour first call to this endpoint will provide you with the most recent stats for each unit of equipment and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment stats updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. Each stat type has a different refresh rate, but in general we'd suggest waiting a minimum of 5 seconds before requesting updates. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "ee141ade-1d3d-46a6-86b0-ee11946e7d69",
                                            "name": "The feed of equipment stats and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "57ca1982-5763-44aa-82d0-bbd20a50be5d",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Get historical equipment stats",
                                    "id": "72e9a02c-41b4-4d52-9cdf-a69c7ab55328",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "stats",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "<string>,<string>",
                                                    "description": "(Required) The types of equipment stats you want to query. Currently, you may submit up to 3 types.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG26 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG26 was activated, and a manual odometer offset provided in the Samsara cloud dashboard. Valid values: `Off`, `On`."
                                                }
                                            ]
                                        },
                                        "description": "Returns historical equipment status during the given time range. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "f48c583b-67cb-4ba9-a092-2d982a509c4f",
                                            "name": "Historical equipment stats and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "5b4d5b1b-68ed-4a99-a6c4-6494576da452",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "7606748e-9df9-4b9f-b035-e05c942a3a0c"
                        },
                        {
                            "name": "List all equipment",
                            "id": "27fe88e2-b379-4f3a-9efb-563bb2eeb96e",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/equipment?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "equipment"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns a list of all equipment in an organization. Equipment objects represent powered assets connected to a [Samsara AG26](https://www.samsara.com/products/models/ag26) via an APWR, CAT, or J1939 cable. They are automatically created with a unique Samsara Equipment ID whenever an AG26 is activated in your organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "7f44b517-560f-423a-87e8-6e1bad24c50a",
                                    "name": "List of all equipment objects, and pagination information",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "32aef665-21b6-4648-b560-7eaddb7987f6",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve a unit of equipment",
                            "id": "a39ef3d4-2706-4441-ad89-c5d9eb7b442a",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "aa13b655-25f5-4304-8c3b-68eecf3ba374",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) Samsara ID of the Equipment."
                                        }
                                    ]
                                },
                                "description": "Retrieves the unit of equipment with the given Samsara ID. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "e66cff54-d98a-49c6-a5d4-67c455dab781",
                                    "name": "The specified equipment object",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"assetSerial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "1e2d1ee2-111d-415b-bbad-e5cb1a0e3811",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "48c42ab5-bc1c-4a2f-b3c0-5e5265c80bce"
                },
                {
                    "name": "hos",
                    "item": [
                        {
                            "name": "Get HOS clocks",
                            "id": "4d1d7770-cf4d-48cd-8820-d23f49fa9142",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/hos/clocks?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&after=<string>&limit=<long>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "hos",
                                        "clocks"
                                    ],
                                    "query": [
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        }
                                    ]
                                },
                                "description": "Get the current HOS status for all drivers. Note that this includes inactive as well as active drivers. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogsSummary). \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "1b0aa378-f2d8-4847-ba8c-144c28c2a342",
                                    "name": "List of current HOS clock information for the specified drivers.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/clocks?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&after=<string>&limit=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "clocks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "f578043c-41a0-442d-a74e-1e717bdbcbcf",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/clocks?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&after=<string>&limit=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "clocks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all driver HOS daily logs",
                            "id": "994f6d12-24dd-4cea-a633-fc434a56635a",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "hos",
                                        "daily-logs"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>",
                                            "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                        },
                                        {
                                            "key": "startDate",
                                            "value": "<string>",
                                            "description": " A start date in RFC 3339 format. This is a date only without an associated time. Example: `2019-06-13`"
                                        },
                                        {
                                            "key": "endDate",
                                            "value": "<string>",
                                            "description": " An end date in RFC 3339 format. This is a date only without an associated time. Must be greater than or equal to the start date. Example: `2019-07-21`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "driverActivationStatus",
                                            "value": "active",
                                            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "expand",
                                            "value": "<string>",
                                            "description": "Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.\n\nValid value: `vehicle`  Valid values: `vehicle`"
                                        }
                                    ]
                                },
                                "description": "Get summarized daily Hours of Service charts for the specified drivers.\n\nThe time range for a log is defined by the `driver`'s `eldDayStartHour`. This value is configurable per driver.\n\nThe `startDate` and `endDate` parameters indicate the date range you'd like to retrieve daily logs for. A daily log will be returned if its `startTime` is on any of the days within in this date range (inclusive of `startDate` and `endDate`).\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.\n\nIf you are using the legacy version of this endpoint and looking for its documentation, you can find it [here](https://www.samsara.com/api-legacy#operation/getFleetDriversHosDailyLogs).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "5b5f9d05-c39e-4a8f-b24a-9b23bc1b9fde",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "1e7749a8-d585-4dab-b8a3-989b0b9bc2ff",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "339e4056-6aef-4f86-81f3-d3456561c89d",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c65cdeca-1c01-41be-9479-d4128855de2b",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d8610c6d-54dd-4056-8082-8951e154f349",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1c70d080-4d1e-488c-9081-6b37f5559e21",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "56899f3d-5ad3-4e1d-b932-efd8e19e273b",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e402c779-10a5-43a5-985f-dbe744601a05",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b5a53b86-ad71-44c8-bf28-982200404c91",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5f3d1998-1b92-4e8b-91f5-b936d9bdd1e6",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f5fbc6b8-b0e6-4e63-8deb-c7efdf4b369c",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get HOS logs",
                            "id": "c0f86be2-268c-4c59-b9f3-b41b27f0a26e",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/hos/logs?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&startTime=<string>&endTime=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "hos",
                                        "logs"
                                    ],
                                    "query": [
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": "A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": "An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Returns HOS logs between a given `startTime` and `endTime`. The logs can be further filtered using tags or by providing a list of driver IDs (including external IDs). The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogs).\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "cb73d12e-3138-4ffa-9c79-364a8a2eb7ed",
                                    "name": "List of the last known HOS log entries for the specified drivers.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/logs?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&startTime=<string>&endTime=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "ff2392d1-6578-4234-915b-fe701adac268",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/logs?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&startTime=<string>&endTime=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "1fbb30de-009f-4058-9074-b1afe72db6f8"
                },
                {
                    "name": "reports/ifta",
                    "item": [
                        {
                            "name": "Get IFTA jurisdiction reports.",
                            "id": "5bfe764d-b522-4f9f-a970-509c51709982",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "reports",
                                        "ifta",
                                        "jurisdiction"
                                    ],
                                    "query": [
                                        {
                                            "key": "year",
                                            "value": "<integer>",
                                            "description": "(Required)  The year of the requested IFTA report summary. Must be provided with a month or quarter param. Example: `year=2021`"
                                        },
                                        {
                                            "key": "month",
                                            "value": "<string>",
                                            "description": " The month of the requested IFTA report summary. Can not be provided with the quarter param. Example: `month=January`  Valid values: `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`"
                                        },
                                        {
                                            "key": "quarter",
                                            "value": "<string>",
                                            "description": " The quarter of the requested IFTA report summary. Can not be provided with the month param. Q1: January, February, March. Q2: April, May, June. Q3: July, August, September. Q4: October, November, December. Example: `quarter=Q1`  Valid values: `Q1`, `Q2`, `Q3`, `Q4`"
                                        },
                                        {
                                            "key": "jurisdictions",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of jurisdictions. Example: `jurisdictions=GA`"
                                        },
                                        {
                                            "key": "fuelType",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of IFTA fuel types. Example: `fuelType=Diesel`  Valid values: `Unspecified`, `A55`, `Biodiesel`, `CompressedNaturalGas`, `Diesel`, `E85`, `Electricity`, `Ethanol`, `Gasohol`, `Gasoline`, `Hydrogen`, `LiquifiedNaturalGas`, `M85`, `Methanol`, `Propane`, `Other`"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        }
                                    ]
                                },
                                "description": "Get all jurisdiction IFTA reports for the requested time duration. Data is returned in your organization's defined timezone.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "72247828-f878-40e4-9bbc-694142536417",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"jurisdictionReports\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"year\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"month\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"quarter\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"troubleshooting\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "1e4654aa-c38c-4c9e-a796-e5ba91a5a1ca",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "aef96f5e-e8e5-4901-acff-aa343435fc40",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "98f4b441-ade8-4c99-907e-97f8fe0b481d",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cc6e352d-06fc-44cd-b3da-4c2a6a7b547c",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1cd66317-47db-4434-aadd-4195003e740f",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0d839374-e0fd-4b86-9824-af656daaec7b",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5cade0a0-8d93-4520-8ef7-0bc5dc60ad95",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "004e5425-4685-4d91-846e-98da5f21fe10",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1b04b35d-0f3f-4074-b5b0-3b160c29936a",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e44f8d9d-043f-46cf-9273-745387501b01",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get IFTA vehicle reports.",
                            "id": "16289a7b-425b-4975-9ab4-8af9977db1ff",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "reports",
                                        "ifta",
                                        "vehicle"
                                    ],
                                    "query": [
                                        {
                                            "key": "year",
                                            "value": "<integer>",
                                            "description": "(Required)  The year of the requested IFTA report summary. Must be provided with a month or quarter param. Example: `year=2021`"
                                        },
                                        {
                                            "key": "month",
                                            "value": "<string>",
                                            "description": " The month of the requested IFTA report summary. Can not be provided with the quarter param. Example: `month=January`  Valid values: `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`"
                                        },
                                        {
                                            "key": "quarter",
                                            "value": "<string>",
                                            "description": " The quarter of the requested IFTA report summary. Can not be provided with the month param. Q1: January, February, March. Q2: April, May, June. Q3: July, August, September. Q4: October, November, December. Example: `quarter=Q1`  Valid values: `Q1`, `Q2`, `Q3`, `Q4`"
                                        },
                                        {
                                            "key": "jurisdictions",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of jurisdictions. Example: `jurisdictions=GA`"
                                        },
                                        {
                                            "key": "fuelType",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of IFTA fuel types. Example: `fuelType=Diesel`  Valid values: `Unspecified`, `A55`, `Biodiesel`, `CompressedNaturalGas`, `Diesel`, `E85`, `Electricity`, `Ethanol`, `Gasohol`, `Gasoline`, `Hydrogen`, `LiquifiedNaturalGas`, `M85`, `Methanol`, `Propane`, `Other`"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get all vehicle IFTA reports for the requested time duration. Data is returned in your organization's defined timezone.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "60fff9dd-cdef-43e4-82f5-a2b01025f9a1",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"vehicleReports\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"year\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"month\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"quarter\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"troubleshooting\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "404a5858-a9ed-4514-aa10-17afc0500bb6",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "615a8bbe-f0c5-4d88-b99e-06b4da7327c5",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "73bd2b49-04b2-4dca-8c45-7538f99cb325",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "02195529-681d-406b-8339-c371bc221e6c",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "68a17eb0-d400-4678-a712-7f09c3c9ab99",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5e683d8d-6d12-4a41-94b8-714a92903cda",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "da2242d8-5501-4045-b94b-f93358c1571b",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "20ed7884-721c-44ba-baec-3e12c307fb5c",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e3339307-410f-455a-ad1d-c747cf75ff52",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b651e361-0051-4d7e-a84e-bcac7e7fe774",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "c18997fa-80d2-4273-95ba-32764b3ef915"
                },
                {
                    "name": "routes",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Delete a route.",
                                    "id": "aa8cea1c-c1ca-4525-93e7-9fde45387978",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "0b856ba8-1b41-49fe-a374-c6795affcaba",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                                }
                                            ]
                                        },
                                        "description": "Delete a dispatch route and its associated stops.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "f4a95028-258c-4520-90fa-0886d253ae57",
                                            "name": "No Content response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": ""
                                        },
                                        {
                                            "id": "c5ffc204-a85a-496e-9ed5-4f4ab8078afa",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "42d7eab4-6bbe-4905-a992-9e72feb2e666",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "976716a4-d90d-4bfe-bb9e-4144f52b6346",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "382eb3aa-745f-4df5-ac2b-0c734409b676",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8a7ee422-e093-4824-8041-a8999d4a759c",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4c91ac05-61c3-45a8-8242-41dad98dd50f",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4f54ebb4-06a1-4c2a-8abb-88d25a59e1ea",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "aea544bb-5414-4860-8485-9b1ba9c2038a",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "83164c32-bc5c-4bcd-b8e8-f1245b464664",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8a2bec08-456e-40fd-b275-fd7ffdd7f61d",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Fetch a route",
                                    "id": "6bcf84ca-5b5e-4fba-a25b-e96755691a65",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "cf783255-57a6-4f84-ac3d-3214a5dfb003",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                                }
                                            ]
                                        },
                                        "description": "Returns a single route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDispatchRouteById).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "c52d19f2-5cbf-4775-84fa-b50215f690ee",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"settings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stops\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "bb251507-5908-4ea8-a341-073254988543",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "38724294-5694-458e-88a5-7496edfbb09f",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "eb80e458-bd89-4b64-9fd4-ab296bdf4a95",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7662c99d-a430-43fb-b058-8a49ea7bf259",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7e39e0f8-b5ae-48ac-b747-6afc009bf3a9",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ba321e1f-5b44-4461-8cae-4c944494b0a7",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "49e95c4c-f8b0-4039-9313-92cb172f8046",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "476e5a9c-f7c3-442c-9db5-5d9d71e0c425",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "3b2783cc-842e-4d26-8456-1aad4a7cb616",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "9d722f9e-20cd-4aee-befa-9028207df7f8",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update a route",
                                    "id": "ae13dc6c-8997-4295-a542-6990c16117ec",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "3f17b33a-86ab-41eb-aa8b-18b176b188f8",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) id of the route to update"
                                                }
                                            ]
                                        },
                                        "description": "Update a route.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.\n\nThe legacy version of this endpoint (which uses PUT instead of PATCH) can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/updateDispatchRouteById).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "adda60da-ad4f-4c2a-9b22-28cf0a2a3292",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"settings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stops\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "c2d580ef-55bb-44db-ba2d-1cad11d844fe",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a836fa2c-2ffb-4692-be08-59232a066d1a",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "fdb7e337-0a41-4f24-9c35-417d2dd4872c",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c1cfdd76-d18b-4476-b77d-401533cc08c7",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "df1445b1-6674-44ab-bb7f-cc6c5a4e2827",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8eba34d5-c0c5-4a75-9c9f-4a39b8fc4230",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "bcb30db3-1c95-428d-8c76-dbee24e753ae",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "173132ab-9f61-476f-834b-77969f258196",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "5fe9e76d-d197-46d6-962a-c3d731e78a99",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ee64bbc1-13cd-41db-b203-062a0f6c5c15",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "9b13f512-44e2-4628-b28e-1726db9e4ce0"
                        },
                        {
                            "name": "Fetch all routes",
                            "id": "68ac6b76-41af-49b7-b7bf-e7077bb2041f",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "routes"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "512",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Returns multiple routes. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllDispatchRoutes).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "5af0c7e3-f8d4-497b-982e-ab0edf6a2dbb",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "859a6b1a-f7ee-44f7-b933-751fd1178bd3",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1c8725d9-5324-4a93-b2ca-6adad58e39b7",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4f9bdacb-8b9b-4119-8339-342ba79e3932",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3d2b090c-0ea0-4e5c-a675-da27094219f7",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3a5ab55d-2779-4656-bfe5-0c3784236e2d",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d52189e3-8e01-47d0-83f7-ed507ed418ab",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "66c350da-df12-4883-ae64-7371f315d14b",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "77b1f69c-72b0-4cc1-8f1b-463cb8bc1c9b",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6bf7d62e-bb32-4433-af53-59c52d50561e",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "be43553c-8cad-4e52-95ef-69bba7572f7b",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create a route",
                            "id": "08fe6f88-bc98-405d-bb4f-bb80ef74d6b7",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/routes",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "routes"
                                    ]
                                },
                                "description": "Create a route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDispatchRoute).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "b6fcf0fd-1afb-43f1-abd3-8e02ed5c1568",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"settings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stops\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "b6694703-f3be-43de-b1a1-c653538e68e4",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cf4ef710-b04a-40fc-8c15-7091c81a7dba",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a065a7b6-1a62-4751-9377-36a3b624f90c",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c99aebf5-d482-4ce0-9028-03dded1f47bf",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "bfec2de3-e4f1-4687-a3af-f400ff1b47c0",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6531eb32-0b0a-44c5-9202-8961cfb9d9b6",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f6e52a64-701e-4e2d-842a-440a6b16e740",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "93a377d5-e2b8-4dfe-b936-73bede8a38e9",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f5f1a711-28a7-48a1-a123-b15f1c20478b",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "968783b1-f51b-438e-85d2-0bb655a76249",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get route updates",
                            "id": "c4dcdf33-fbe1-4053-b177-ab4e07df98b9",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "routes",
                                        "audit-logs",
                                        "feed"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "expand",
                                            "value": "<string>",
                                            "description": "Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.\n\nValid value: `route`  Valid values: `route`"
                                        }
                                    ]
                                },
                                "description": "Subscribes to a feed of immutable, append-only updates for routes. The initial request to this feed endpoint returns a cursor, which can be used on the next request to fetch updated routes that have had state changes since that request.\n\nThe legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllRouteJobUpdates).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "8840c778-c63a-4576-a9ce-e30a49ce894b",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "055e1988-f5a5-408c-8bd7-234dd1b7962e",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "44cdb14e-4244-4440-b507-c0e8884ba491",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ccbf2ab0-35cf-4e71-9b1b-8dfa0fd28060",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "52029286-bdae-4be2-9858-cca78e3dcd28",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "18e10767-e5f7-484c-be35-e0cc67b2fc6f",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6195c33d-b97d-4f44-941a-40de3cad2a5a",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cdd0367a-037b-476e-a298-d4322105da8f",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "75055bfb-cea5-4992-a80b-b4ded5690115",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0d4cdccc-a735-46de-a97e-205e7caaf3f4",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "bcad69c2-0c67-4c9b-a39a-7d999f02668b",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "1b00298f-d5ca-434f-906f-a1b5ee213531"
                },
                {
                    "name": "settings",
                    "item": [
                        {
                            "name": "compliance",
                            "item": [
                                {
                                    "name": "Get compliance settings",
                                    "id": "56abcd2d-d264-45ef-a54b-40b9c3aaa6ca",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/settings/compliance",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "settings",
                                                "compliance"
                                            ]
                                        },
                                        "description": "Get organization's compliance settings, including carrier name, office address, and DOT number\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "121b5e2a-3c98-46b4-90c6-d2066e9b3637",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"allowUnregulatedVehiclesEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canadaHosEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dotNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverAutoDutyEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"editCertifiedLogsEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"forceManualLocationForDutyStatusChangesEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"forceReviewUnassignedHosEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mainOfficeFormattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"persistentDutyStatusEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "239d1e63-2a63-4ecc-9f3d-e417769e9b05",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8ead28fc-1ba0-4872-ab8d-b6194b6a2da2",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "5ee406ce-0928-4a4b-8fa3-94bbc64fffcb",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f40c2e0e-74f4-4137-ae6e-647be532cdb8",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "dccbdbb7-2b8c-4beb-8a55-36dc95db351a",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2a440e3d-e574-418f-968f-ef24c63f8351",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "5a2c25a2-3fc6-41be-b14e-225d53eddc54",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "be6a1d81-3a9b-4182-84e3-f8bdc10f81ac",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "5a4d3f99-85a3-45aa-a49d-56e782e3293f",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "082fb4c7-558f-46b9-b808-f58c3b8d6037",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update compliance settings",
                                    "id": "07a2af33-f1c1-4313-aca6-d9fe0d60b8a3",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/settings/compliance",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "settings",
                                                "compliance"
                                            ]
                                        },
                                        "description": "Update organization's compliance settings, including carrier name, office address, and DOT number\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "e9debf8e-b43c-49bc-b400-d610542d0caa",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"allowUnregulatedVehiclesEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canadaHosEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dotNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverAutoDutyEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"editCertifiedLogsEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"forceManualLocationForDutyStatusChangesEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"forceReviewUnassignedHosEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mainOfficeFormattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"persistentDutyStatusEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "d9047026-7c64-471a-9238-b7704c574838",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "d2e4608e-007d-4811-8d9e-6d662461ee50",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4f561ef9-ce5f-473b-b60e-de83cdb48210",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a8242211-02f5-4f53-9378-b8712f9e5c99",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "47363932-829e-4bab-b613-b68033c41e7b",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4ee6470a-8b77-47a7-ad9a-fab46c660438",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "9ab3e217-6107-42fa-a9d8-38de4c613971",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "39ecfa66-2fe8-463c-afd0-495d96245556",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a6a3bda6-e85a-4977-afcd-68de7f859246",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "e489261a-ae70-4468-8c43-f6c97c5f1cc6",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "a7294e6f-74ae-4e5b-a4f6-5eb93d8c527a"
                        },
                        {
                            "name": "driver-app",
                            "item": [
                                {
                                    "name": "Get driver app settings",
                                    "id": "e42589e4-0a58-4663-ba75-5145792bc8d0",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "settings",
                                                "driver-app"
                                            ]
                                        },
                                        "description": "Get driver app settings.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "f5a3ae34-4538-4cef-9f0b-a996b1fdd028",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"driverFleetId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gamification\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gamificationConfig\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"orgVehicleSearch\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSelection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSelectionConfig\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "5a686044-f6ee-40e2-818e-f13fdbfa33c0",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "45f0fdf7-d8a6-47b2-94a6-59e158a06a10",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "1ac88e94-ab6e-4f6b-bdc6-3a9ce16528a9",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f38d6a3b-560d-490f-8195-2aac236eb611",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "de8b1603-a3ee-4d12-ac9e-e591aa458434",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0eca8443-13ed-4430-a53a-0b79379b5098",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8a8ecd95-36ae-4cda-ab6f-7228ba25a734",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f4d2fa9b-226d-46d2-9916-039e43ce6870",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "97cf4f4d-678a-4289-8c2b-3ac5ff3057b9",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "65f52b15-be41-4f94-a49d-6bc76029fe36",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update driver app settings",
                                    "id": "fd787027-7a05-4a87-b7dc-bcf8abb7cb64",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "settings",
                                                "driver-app"
                                            ]
                                        },
                                        "description": "Update driver app settings.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "31084a03-5f44-4441-afbb-a05337e163bf",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"driverFleetId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gamification\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gamificationConfig\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"orgVehicleSearch\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSelection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSelectionConfig\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "c539ae5a-e4d8-41fb-bb19-abb61d3885ed",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "559bf1a4-ba4e-4b7b-b3bc-995c74dfd528",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "06de7038-c16a-4ae5-a22a-89f4faa2b3d2",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6363452e-2e28-490c-93ba-f0332158fcb6",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "31735730-474a-486d-abe0-2a0d7dca1196",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "24a675a5-4095-4de0-adc2-5ce28c1f5f75",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f8924f49-24c5-4045-9f18-b0b85afb6831",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "9c52251c-3589-47f5-b847-0f1032655ffb",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ed06f3df-52f0-4220-99a3-478b93701856",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "bed7b251-407c-4536-9120-cfd0e35cac5d",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "a75fd7da-9bce-4f5a-8379-f571f55f64f2"
                        }
                    ],
                    "id": "9de849d4-46ba-4830-a3f5-34ad86ebf1d2"
                },
                {
                    "name": "vehicles",
                    "item": [
                        {
                            "name": "locations",
                            "item": [
                                {
                                    "name": "Locations snapshot",
                                    "id": "eb4a0f1c-9d46-4e7e-a7ca-1d9009f336e0",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/locations?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "locations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "time",
                                                    "value": "<string>",
                                                    "description": "A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported. (Example: `2020-01-27T07:06:25Z`)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestats) instead.***\n\nReturns the last known location of all vehicles at the given `time`. If no `time` is specified, the current time is used. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: <a href=\"/docs/vehicle-locations-1\" target=\"_blank\">Vehicle Locations</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "7f0f52b0-8e3a-45b8-8b9e-3c902db1e9d4",
                                            "name": "List of the most recent locations for the specified vehicles.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "1a6c3fe1-80cf-43d5-a19a-4c980feb85a4",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Locations feed",
                                    "id": "5399eca5-fc4b-4db6-8b11-b06d81144c0b",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "locations",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatsfeed) instead.***\n\nFollow a continuous feed of all vehicle locations from Samsara Vehicle Gateways.\n\nYour first call to this endpoint will provide you with the most recent location for each vehicle and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get location updates since that `endCursor`. \n\nIf `hasNextPage` is `false`, no updates are readily available yet. We'd suggest waiting a minimum of 5 seconds before requesting updates.\n\nRelated guide: <a href=\"/docs/vehicle-locations-1\" target=\"_blank\">Vehicle Locations</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "bde580a4-6541-4542-a462-1a75c10f7e34",
                                            "name": "List of locations events for the specified vehicles.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "616f89fd-55ce-467a-9feb-15d16176af34",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Historical locations",
                                    "id": "fee30998-23ab-437f-a5ec-248a474ce3f6",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "locations",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatshistory) instead.***\n\nReturns all known vehicle locations during the given time range. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: <a href=\"/docs/vehicle-locations-1\" target=\"_blank\">Vehicle Locations</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "9cb8bd9e-b3eb-4686-85dd-f376cd191df2",
                                            "name": "List of all locations for the specified vehicles and time range.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "9f2fb19e-797f-474e-a2a3-3355183da3f6",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "8bc278e8-5e33-46ff-ae70-141368a75bf5"
                        },
                        {
                            "name": "stats",
                            "item": [
                                {
                                    "name": "Stats snapshot",
                                    "id": "6ec1ff7c-b454-45c3-8706-62a2afcad2a1",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/stats?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "stats"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "time",
                                                    "value": "<string>",
                                                    "description": "A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported. (Example: `2020-01-27T07:06:25Z`)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "<string>,<string>",
                                                    "description": "(Required) The stat types you want this endpoint to return information on. See also the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the <a href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\">cloud dasbhoard</a>. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle."
                                                }
                                            ]
                                        },
                                        "description": "Returns the last known stats of all vehicles at the given `time`. If no `time` is specified, the current time is used.\n\nRelated guide: <a href=\"/docs/telematics\" target=\"_blank\">Telematics</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "8311d96c-2d26-4f3e-8382-756c9749ee88",
                                            "name": "Vehicle stats snapshot",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "d42054c6-c320-4a3d-879c-2065a0b435ce",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Stats feed",
                                    "id": "bc9862a6-c859-4532-8396-b2db9607af7f",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "stats",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "<string>,<string>",
                                                    "description": "(Required) The stat types you want this endpoint to return information on. See also the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the <a href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\">cloud dasbhoard</a>. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle."
                                                },
                                                {
                                                    "key": "decorations",
                                                    "value": "<string>,<string>",
                                                    "description": "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates&decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes&decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  "
                                                }
                                            ]
                                        },
                                        "description": "Follow a feed of vehicle stats. \n\nYour first call to this endpoint will provide you with the most recent stats for each vehicle and an `endCursor`.\n\nYou can the provide the `endCursor` value to the `after` query parameter to get all updates since the last call you made.\n\nIf `hasNextPage` is `false`, no new data is immediately available. You should wait a minimum of 5 seconds making a subsequent request.\n\nRelated guide: <a href=\"/docs/telematics\" target=\"_blank\">Telematics</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "2ba5d25b-3e3e-41e3-b17c-a264d1c325c9",
                                            "name": "List of stat events for the specified vehicles and stat types.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "5b329637-1022-4283-872b-503edec82372",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Historical stats",
                                    "id": "2146cdf0-1a5b-405a-b7a0-93f49859af53",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "stats",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "<string>,<string>",
                                                    "description": "(Required) The stat types you want this endpoint to return information on. See also the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the <a href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\">cloud dasbhoard</a>. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle."
                                                },
                                                {
                                                    "key": "decorations",
                                                    "value": "<string>,<string>",
                                                    "description": "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates&decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes&decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  "
                                                }
                                            ]
                                        },
                                        "description": "Returns vehicle stats during the given time range for all vehicles. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: <a href=\"/docs/telematics\" target=\"_blank\">Telematics</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "2947082e-a052-48c4-b868-9ab14b960fb4",
                                            "name": "List of vehicle stats for the specified vehicles, stat type, and time range.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "2c567333-5431-4755-8122-9fcfa3b32223",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "511dfb2d-5779-4c8c-a518-03968d520795"
                        },
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Retrieve a vehicle",
                                    "id": "b72a430a-0597-4310-9537-90c6f27bac51",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "dadafcb4-65d5-47ac-9d64-3318b10059d0",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the vehicle. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource, or automatically populated by fields on the vehicle. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `maintenanceId:250020`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.vin:1HGBH41JXMN109186`."
                                                }
                                            ]
                                        },
                                        "description": "Get information about a specific vehicle. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "2af7ca52-5a9b-4e4f-9039-7ce329562a5a",
                                            "name": "Returns the specified vehicle object.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType1\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType10\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType11\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType12\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType13\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType2\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType3\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType4\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType5\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType6\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType7\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType8\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType9\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cameraSerial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"harshAccelerationSettingType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"make\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"model\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedDriver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleRegulationMode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vin\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"year\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "193f2e93-4005-4254-bf73-ead21f1c8da6",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update a vehicle",
                                    "id": "d2e048ac-1b17-4b19-bd1d-9ad638886cce",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"auxInputType1\": \"<string>\",\n    \"auxInputType10\": \"<string>\",\n    \"auxInputType11\": \"<string>\",\n    \"auxInputType12\": \"<string>\",\n    \"auxInputType13\": \"<string>\",\n    \"auxInputType2\": \"<string>\",\n    \"auxInputType3\": \"<string>\",\n    \"auxInputType4\": \"<string>\",\n    \"auxInputType5\": \"<string>\",\n    \"auxInputType6\": \"<string>\",\n    \"auxInputType7\": \"<string>\",\n    \"auxInputType8\": \"<string>\",\n    \"auxInputType9\": \"<string>\",\n    \"engineHours\": \"<long>\",\n    \"externalIds\": \"<object>\",\n    \"gatewaySerial\": \"<string>\",\n    \"harshAccelerationSettingType\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"staticAssignedDriverId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleRegulationMode\": \"<string>\",\n    \"vin\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "3811274d-2588-40f9-b6fa-eb3f04a573f4",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) ID of the vehicle. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource, or automatically populated by fields on the vehicle. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `maintenanceId:250020`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.vin:1HGBH41JXMN109186`."
                                                }
                                            ]
                                        },
                                        "description": "Updates the given Vehicle object.\n\n**Note:** Vehicle objects are automatically created when Samsara Vehicle Gateways are installed. You cannot create a Vehicle object via API.\n\nYou are able to *update* many of the fields of a Vehicle.\n\n**Note**: There are no required fields in the request body, and you only need to provide the fields you wish to update. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "3d433868-d9d5-4dfd-8422-aecbadb71796",
                                            "name": "Returns the specified vehicle object.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"auxInputType1\": \"<string>\",\n    \"auxInputType10\": \"<string>\",\n    \"auxInputType11\": \"<string>\",\n    \"auxInputType12\": \"<string>\",\n    \"auxInputType13\": \"<string>\",\n    \"auxInputType2\": \"<string>\",\n    \"auxInputType3\": \"<string>\",\n    \"auxInputType4\": \"<string>\",\n    \"auxInputType5\": \"<string>\",\n    \"auxInputType6\": \"<string>\",\n    \"auxInputType7\": \"<string>\",\n    \"auxInputType8\": \"<string>\",\n    \"auxInputType9\": \"<string>\",\n    \"engineHours\": \"<long>\",\n    \"externalIds\": \"<object>\",\n    \"gatewaySerial\": \"<string>\",\n    \"harshAccelerationSettingType\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"staticAssignedDriverId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleRegulationMode\": \"<string>\",\n    \"vin\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType1\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType10\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType11\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType12\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType13\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType2\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType3\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType4\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType5\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType6\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType7\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType8\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType9\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cameraSerial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"harshAccelerationSettingType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"make\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"model\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedDriver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleRegulationMode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vin\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"year\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "d251c4a3-7969-4407-bb21-b16df7e004c4",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"auxInputType1\": \"<string>\",\n    \"auxInputType10\": \"<string>\",\n    \"auxInputType11\": \"<string>\",\n    \"auxInputType12\": \"<string>\",\n    \"auxInputType13\": \"<string>\",\n    \"auxInputType2\": \"<string>\",\n    \"auxInputType3\": \"<string>\",\n    \"auxInputType4\": \"<string>\",\n    \"auxInputType5\": \"<string>\",\n    \"auxInputType6\": \"<string>\",\n    \"auxInputType7\": \"<string>\",\n    \"auxInputType8\": \"<string>\",\n    \"auxInputType9\": \"<string>\",\n    \"engineHours\": \"<long>\",\n    \"externalIds\": \"<object>\",\n    \"gatewaySerial\": \"<string>\",\n    \"harshAccelerationSettingType\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<long>\",\n    \"staticAssignedDriverId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleRegulationMode\": \"<string>\",\n    \"vin\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "33c7c522-5718-4851-aab0-35306dad3e2f"
                        },
                        {
                            "name": "List all vehicles",
                            "id": "118cbe7b-2f91-4b67-a2c7-890f440a92e6",
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            },
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/vehicles?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "vehicles"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns a list of all vehicles. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "58c624b2-7f2d-45db-bf5e-a0dbc6565424",
                                    "name": "List of all vehicle objects, and pagination parameters.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "5587158d-270f-432e-89a7-f007dbe2d5e3",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e019621f-e615-4916-9607-fee3d0107943",
                                    "name": "List all vehicles",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [],
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>",
                                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
                                                    "disabled": true
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Date",
                                            "value": "Tue, 28 Sep 2021 23:48:36 GMT"
                                        },
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        },
                                        {
                                            "key": "Content-Length",
                                            "value": "1699"
                                        },
                                        {
                                            "key": "Connection",
                                            "value": "keep-alive"
                                        },
                                        {
                                            "key": "Request-Id",
                                            "value": "7fe02610"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n    \"data\": [\n        {\n            \"id\": \"281474978562887\",\n            \"name\": \"GSU2-NA7-NTT - Accord\",\n            \"staticAssignedDriver\": {\n                \"id\": \"7034884\",\n                \"name\": \"Jason McDonald\"\n            },\n            \"vin\": \"1HGCR2F78DA115644\",\n            \"cameraSerial\": \"GC78-UD2-83X\",\n            \"make\": \"HONDA\",\n            \"model\": \"Accord\",\n            \"year\": \"2013\",\n            \"harshAccelerationSettingType\": \"automatic\",\n            \"notes\": \"\",\n            \"externalIds\": {\n                \"samsara.vin\": \"1HGCR2F78DA115644\"\n            },\n            \"gateway\": {\n                \"serial\": \"\",\n                \"model\": \"none\"\n            },\n            \"vehicleRegulationMode\": \"regulated\"\n        },\n        {\n            \"id\": \"281474978562888\",\n            \"name\": \"GRUE-WYM-NHT\",\n            \"serial\": \"GRUEWYMNHT\",\n            \"harshAccelerationSettingType\": \"automatic\",\n            \"notes\": \"\",\n            \"externalIds\": {\n                \"samsara.serial\": \"GRUEWYMNHT\"\n            },\n            \"gateway\": {\n                \"serial\": \"GRUE-WYM-NHT\",\n                \"model\": \"VG54NA\"\n            },\n            \"vehicleRegulationMode\": \"regulated\"\n        },\n        {\n            \"id\": \"281474978562889\",\n            \"name\": \"GVF3-F7Z-2JW - Pete\",\n            \"serial\": \"GVF3F7Z2JW\",\n            \"cameraSerial\": \"GTDR-D3R-XDJ\",\n            \"harshAccelerationSettingType\": \"automatic\",\n            \"notes\": \"\",\n            \"externalIds\": {\n                \"samsara.serial\": \"GVF3F7Z2JW\"\n            },\n            \"gateway\": {\n                \"serial\": \"GVF3-F7Z-2JW\",\n                \"model\": \"VG54NA\"\n            },\n            \"vehicleRegulationMode\": \"regulated\"\n        },\n        {\n            \"id\": \"281474978884116\",\n            \"name\": \"GPY2-DTR-CZZ\",\n            \"vin\": \"WDBHA24G5XAT75139\",\n            \"serial\": \"GPY2DTRCZZ\",\n            \"make\": \"Mercedes-Benz\",\n            \"model\": \"C-Class\",\n            \"year\": \"1999\",\n            \"harshAccelerationSettingType\": \"automatic\",\n            \"notes\": \"\",\n            \"externalIds\": {\n                \"samsara.serial\": \"GPY2DTRCZZ\",\n                \"samsara.vin\": \"WDBHA24G5XAT75139\"\n            },\n            \"gateway\": {\n                \"serial\": \"GPY2-DTR-CZZ\",\n                \"model\": \"VG34\"\n            },\n            \"vehicleRegulationMode\": \"regulated\"\n        },\n        {\n            \"id\": \"281474978900788\",\n            \"name\": \"Honda\",\n            \"staticAssignedDriver\": {\n                \"id\": \"7034832\",\n                \"name\": \"Logan Kiernan\"\n            },\n            \"serial\": \"GSU2NA7NTT\",\n            \"harshAccelerationSettingType\": \"automatic\",\n            \"notes\": \"\",\n            \"externalIds\": {\n                \"samsara.serial\": \"GSU2NA7NTT\"\n            },\n            \"gateway\": {\n                \"serial\": \"GSU2-NA7-NTT\",\n                \"model\": \"VG54NA\"\n            },\n            \"vehicleRegulationMode\": \"regulated\"\n        }\n    ],\n    \"pagination\": {\n        \"endCursor\": \"\",\n        \"hasNextPage\": false\n    }\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all camera media",
                            "id": "e491c794-8327-4742-bf7b-9bc1eaad5ee8",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "vehicles",
                                        "cameras",
                                        "media",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get all camera media.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "acbdc386-e6f0-471f-807f-4bc2c84d999b",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "528e5b75-92c2-489c-9a17-51e048e19cf3",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "194f26a5-2e6a-475f-918a-e6399160511b",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2de48429-791a-4646-b8bf-11243c2ab850",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8a1a10d1-3b30-4b22-a010-88a87e3b8381",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ecd1870e-1112-4912-97e4-7b44f8b7cd5d",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "aa286863-6cbc-4a1e-a3f7-0c07bf831d65",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c1d9b5b3-a380-4c41-8adf-925ae5a8ebc6",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ccc73df4-3e19-4936-be36-3bc73c40dbf1",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c00aa28e-6063-4b70-9b4d-6e8a3098f050",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "65f59ed3-ed08-4e13-8b7f-cac23a6f83c7",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all drivers assigned to a set of vehicles",
                            "id": "099606d6-af40-413b-a170-00af36f9e734",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "vehicles",
                                        "driver-assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get all driver assignments for the requested vehicles in the requested time range. The only type of assignment supported right now are assignments created through the driver app.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "37641b06-7ae6-4f97-977a-a69dc330ccd1",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "c9c95157-2d98-42cc-9ca5-abd35c001fd9",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f6eb8e9e-8e86-4c6e-90d9-4877a8e70003",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ab1c6c24-848a-4e17-a241-06855e53ce71",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "46388c86-74e1-423c-89fb-43b9a6d1df81",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f0861ba9-e7da-4879-9b1e-2d6db7acd24e",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "11d6ee32-5b32-4862-9bd1-e05447a7e57c",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "dab3c1ce-06bd-4f8e-a30c-a076f6352752",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "df058399-4b7e-41c6-91f8-50ae9d5995be",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "69362b37-52fd-40c2-b50a-8017791972b9",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "42840356-8173-411d-a3a1-884442fafc7e",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get tachograph vehicle files",
                            "id": "597d662e-0c86-4e7c-99c7-9c3f0118abbb",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/vehicles/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&vehicleIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "vehicles",
                                        "tachograph-files",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>",
                                            "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns all known tachograph files for all specified vehicles in the time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "99f86adb-8043-4f52-9d67-fec8959b1323",
                                    "name": "List of all vehicle tachograph files in a specified time range.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&vehicleIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "tachograph-files",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "70796004-e8e7-4b81-91da-c2ea8a37a9c5",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&vehicleIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "tachograph-files",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "088e4364-ef89-4492-98ce-043bb4c37101"
                },
                {
                    "name": "Fetch document types",
                    "id": "5571674d-9591-4d3a-9a9a-fc314d3c3ac5",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "fleet",
                                "document-types"
                            ],
                            "query": [
                                {
                                    "key": "after",
                                    "value": "<string>",
                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Returns a list of the organization document types. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDriverDocumentTypesByOrgId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "30261b24-bf01-423d-b331-eecf141bd0eb",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "200373ec-86b4-4d54-8af3-ff00de137f52",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "1c652ab4-71f8-4ede-8dd9-9cd558e9b60c",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "7ffa5148-535b-4262-b9e4-1b213f928a3a",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "8753816e-504d-4bd1-9d3f-f37360c4bce2",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "0b0c920d-65de-494d-998c-759b1348c4a2",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "9a299739-0c67-472d-955e-c33c188b5c4f",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "d64a5676-e6ea-46c6-a79a-a8c687605a1f",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "037cf40c-8941-4c08-9fb2-20ddd3ca9b89",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "46304dcd-5f0d-4d61-a68e-84cdc092e06d",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "e4f8404d-9a4f-434b-a7da-d246f73e1ae1",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "List all safety events.",
                    "id": "a2606d29-bec4-4f7c-be67-1ebfaf5fbdc0",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/fleet/safety-events?after=<string>&startTime=<string>&endTime=<string>&tagIds=<string>,<string>&parentTagIds=<string>,<string>&vehicleIds=<string>,<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "fleet",
                                "safety-events"
                            ],
                            "query": [
                                {
                                    "key": "after",
                                    "value": "<string>",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                },
                                {
                                    "key": "startTime",
                                    "value": "<string>",
                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                },
                                {
                                    "key": "endTime",
                                    "value": "<string>",
                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                },
                                {
                                    "key": "tagIds",
                                    "value": "<string>,<string>",
                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "<string>,<string>",
                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "vehicleIds",
                                    "value": "<string>,<string>",
                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                }
                            ]
                        },
                        "description": "Fetch safety events for the organization in a given time period. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "622f353d-71f3-426f-8e02-e7fff72e9963",
                            "name": "List of safety events from given time period.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/safety-events?after=<string>&startTime=<string>&endTime=<string>&tagIds=<string>,<string>&parentTagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "safety-events"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>,<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "d52c7f07-486c-4938-a439-2f28f4569c33",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/safety-events?after=<string>&startTime=<string>&endTime=<string>&tagIds=<string>,<string>&parentTagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "safety-events"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>,<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "eb9443d6-e644-4b0c-8887-28e50a4818b5"
        },
        {
            "name": "gateways",
            "item": [
                {
                    "name": "List all gateways",
                    "id": "86ecafb3-459d-4137-91f9-c98f2832b065",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "gateways"
                            ],
                            "query": [
                                {
                                    "key": "models",
                                    "value": "<string>,<string>",
                                    "description": "Filter by a comma separated list of gateway models."
                                },
                                {
                                    "key": "after",
                                    "value": "<string>",
                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "List all gateways\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "f21b0ebb-8a71-40d2-9155-23abcf3ad469",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "e905f9b7-f3a7-465a-a97c-d3834a190883",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "7455dc58-e47f-4858-a1dc-5b7a8f1585dc",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "a67cf61c-9a4e-422a-bdce-e797e20df6f5",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "a3d32448-d5cc-4164-9f1b-810175437016",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "67a14356-fae4-4650-a88b-1b092f75b20d",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "4a1bdccd-acea-40d3-8b8e-87c7f454c6d1",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "358cf5dd-2afb-43a4-be73-852a3761f55f",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "353cc507-97c0-412c-a174-a69ff983b279",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "06dc2dab-6fcf-4d67-a7b4-9f6edd68ff44",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "14492253-4efb-4892-9e52-9bbfedf86519",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Activate a new gateway",
                    "id": "487f5302-4c63-47e4-a4c1-82c1f0983886",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"serial\": \"<string>\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/gateways",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "gateways"
                            ]
                        },
                        "description": "Activate a new gateway. To activate a device and associate it with your organization, enter its serial number. Each device's serial number can also be found on its label or packaging, or from your order confirmation email. A Not Found error could mean that the serial was not found or it has already been activated\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "93a10935-d87b-4138-a1d5-d853298ce8da",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"model\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"accessoryDevices\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"asset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"connectionStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dataUsageLast30Days\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "e4f18894-28fa-4f61-909c-9ce861d56be3",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "d77445ae-d7a6-4193-8e4e-e965c7752bbf",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "b84cab31-2876-4168-920e-854637cd2b9c",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "48b32c83-a3a3-4854-b9e1-440afb1da2bd",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "5e7f1b79-7717-479c-80da-fd2f4f8b6509",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "9a10ca53-ad09-4193-b9ac-eef1d92e3736",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "2141eae9-f7fc-4a1d-b4e2-a8a8f44cca86",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "c01e4cfc-a001-46aa-b048-e0c29dfe3469",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "5237c4f0-6ea3-40fc-b8c3-244309a474aa",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "44904f60-ff04-49a8-974d-7faa9c1c6d8e",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Deactivate a gateway",
                    "id": "4b097e4a-37f9-45db-8b9d-70603632acf6",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/gateways/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "gateways",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "id": "5492646c-fe81-4ad1-a32e-f3d4cac09f24",
                                    "key": "id",
                                    "value": "<string>",
                                    "description": "(Required) Gateway serial number"
                                }
                            ]
                        },
                        "description": "Deactivate a gateway\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "9bc03ce7-57b9-46f5-84ab-65483a314c37",
                            "name": "No Content response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "2f984102-460c-4ae2-8f10-f8aa60d785fe",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "7ebdfb3a-3a51-4603-b599-9640921e3fdd",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "fd2d3e8b-6cf1-4a08-9c25-8f49d16f8bad",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "700f207b-daa3-4cb4-8260-88faec363ce1",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "fe67a018-e558-469f-a020-0343c0ef3d31",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "d960050e-88ac-480a-b9b0-14497ef706c4",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "13747427-5b95-44bf-a27c-47e8f0af52b4",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "57918516-39ef-43fc-8d5a-64df3f0ce34c",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "af648904-17bd-4bc2-9914-4850b59d20fd",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "4788af9f-fb4c-4281-ae4b-04e3b080fd26",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "7469fc08-72d8-4c2d-993f-d779c633bf15"
        },
        {
            "name": "industrial",
            "item": [
                {
                    "name": "assets",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Delete an existing asset",
                                    "id": "6489281d-4b7b-47ff-8522-1d6c137c794b",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "c469aa2f-c940-4d04-9721-84d61de7184a",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) Id of the asset to be deleted."
                                                }
                                            ]
                                        },
                                        "description": "Delete asset. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "d6ebd394-253e-4504-92b8-e2ba3353883e",
                                            "name": "A successful DELETE response is a 204 with no content.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        },
                                        {
                                            "id": "80f81d40-ac20-4726-b79c-fe9a2cc45a5a",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update an asset",
                                    "id": "77797a1e-c952-4555-9416-464fdf88bc0b",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"customMetadata\": \"<object>\",\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"parentId\": \"<string>\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "7697d7a9-62ba-4dbf-bc71-65ea1afe8d7c",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) Id of the asset to be updated"
                                                }
                                            ]
                                        },
                                        "description": "Update an existing asset. Only the provided fields will be updated. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "e81e6621-8d10-4b67-be49-b59d17c197ce",
                                            "name": "The updated asset",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customMetadata\": \"<object>\",\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"parentId\": \"<string>\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRunning\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customMetadata\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dataOutputs\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationDataInput\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parentAsset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"runningStatusDataInput\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "f82ecf7a-3ff8-486b-a211-fd7b536377a2",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customMetadata\": \"<object>\",\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"parentId\": \"<string>\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Writes to data outputs on an asset",
                                    "id": "0af4f10b-b2cb-4574-8e87-715cff52a148",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"values\": \"<object>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets",
                                                ":id",
                                                "data-outputs"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "721735d9-e3e2-4e76-be11-76d3ec47eaf3",
                                                    "key": "id",
                                                    "value": "<string>",
                                                    "description": "(Required) Asset ID"
                                                }
                                            ]
                                        },
                                        "description": "Writes values to multiple data outputs on an asset simultaneously. Only the provided data outputs will be updated.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "c97e16d2-9c70-48f9-bb13-3132a07d2d46",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "dcd69ae1-eb7f-4580-b48f-f2a53dc2822b",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "88f54368-29b8-497f-a3f0-5e083194ac91",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4559b31d-1ea5-440a-a465-4dc75be820ae",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "905e2208-03aa-4859-bdff-2164e0ab106a",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "d3cc40f0-bbbb-40ee-b637-f7f06515dbfa",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6ff6c6ab-f403-4a05-849d-1be7f035eed4",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7de974ca-d774-4f22-9dfe-6c54dd73fed7",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "9211c35c-e03e-48f1-94af-3aa1da07d675",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "88742d23-3afb-42ce-9efe-30598ba0f7a0",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8eb325bf-3702-4183-8e22-1afc3936190d",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "faf8ddc2-1a6b-44a0-b2aa-85358fb7acd3"
                        },
                        {
                            "name": "List all assets",
                            "id": "bdc215c4-925b-41cc-8769-132b43b926e6",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/industrial/assets?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "industrial",
                                        "assets"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "assetIds",
                                            "value": "<string>,<string>",
                                            "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                        }
                                    ]
                                },
                                "description": "List all assets in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "17c070ba-cdde-4530-9c68-4951dff8e575",
                                    "name": "Assets in the organization.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "da7042ca-b539-4c5e-a54f-6915bc4a0b3e",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create an asset",
                            "id": "4640f8c8-a0f0-409a-a381-f47ae17f4ddc",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"<string>\",\n    \"customMetadata\": \"<object>\",\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"parentId\": \"<string>\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/industrial/assets",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "industrial",
                                        "assets"
                                    ]
                                },
                                "description": "Create an asset with optional configuration parameters. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "0bf38d75-2121-4b58-8def-ff44be631ca8",
                                    "name": "Newly created asset object",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"customMetadata\": \"<object>\",\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"parentId\": \"<string>\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRunning\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customMetadata\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dataOutputs\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationDataInput\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parentAsset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"runningStatusDataInput\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "f231926d-554e-4482-a97e-dc02b3165c10",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"customMetadata\": \"<object>\",\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"parentId\": \"<string>\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "6d2a32ad-86e1-4793-86d5-c90401853e15"
                },
                {
                    "name": "data-inputs",
                    "item": [
                        {
                            "name": "data-points",
                            "item": [
                                {
                                    "name": "List most recent data points for data inputs",
                                    "id": "e6044689-e4c4-4e09-a175-09034bce63c8",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs/data-points?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs",
                                                "data-points"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "dataInputIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                                }
                                            ]
                                        },
                                        "description": "Returns last known data points for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "9d936e2b-6979-499e-b545-1128d4dbae9b",
                                            "name": "List of last known data input data points and pagination parameters",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "66b1d7bb-32bf-47fa-a94e-7832dbf87776",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Follow a real-time feed of data points for data inputs",
                                    "id": "5b9b374d-cd6a-488a-b20c-880e802455cb",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs/data-points/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs",
                                                "data-points",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "dataInputIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                                }
                                            ]
                                        },
                                        "description": "Follow a continuous feed of all data input data points.\n\nYour first call to this endpoint will provide you with the most recent data points for each data input and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get data point updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. We suggest waiting a minimum of 5 seconds before requesting updates. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "85adf06d-e3cd-4783-9fdc-b5e08048185d",
                                            "name": "List of all data points for specified data inputs",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "b834c96b-8c9a-4a70-808d-844c277c61cb",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "List historical data points for data inputs",
                                    "id": "ebd8678f-5a27-4ca2-a4f8-13d264b24802",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs/data-points/history?startTime=<string>&endTime=<string>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs",
                                                "data-points",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "dataInputIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>",
                                                    "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                                }
                                            ]
                                        },
                                        "description": "Returns all known data points during the given time range for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "b5eec221-a311-4e4f-a9fa-4ee124ff907a",
                                            "name": "List of all data points for the specified data inputs and time range.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points/history?startTime=<string>&endTime=<string>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "00e2426e-090b-4aee-b5e7-ecc587b1f35f",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points/history?startTime=<string>&endTime=<string>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "3f15f322-3ee9-4b30-9174-60e20bd678f5"
                        },
                        {
                            "name": "List all data inputs",
                            "id": "029dea7b-43a4-4110-8484-996f76f64aae",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/industrial/data-inputs?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "industrial",
                                        "data-inputs"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "assetIds",
                                            "value": "<string>,<string>",
                                            "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                        }
                                    ]
                                },
                                "description": "Returns all data inputs, optionally filtered by tags or asset ids. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "2540f999-c9f8-4f71-a02c-4f00f3653f33",
                                    "name": "List of data inputs with names, ids, and other metadata.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "70a45bbb-efff-4ee1-8991-d210b56dc660",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs?limit=<long>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "90540d2c-917e-4d41-9d3d-a144a9fdee1a"
                }
            ],
            "id": "53ae9431-42e9-4eba-8b21-91140d2b09dc"
        },
        {
            "name": "preview/fleet/reports",
            "item": [
                {
                    "name": "[preview] Get fuel and energy efficiency driver reports.",
                    "id": "37c9a0fc-3008-43ff-96e4-6d9e3f026149",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "preview",
                                "fleet",
                                "reports",
                                "drivers",
                                "fuel-energy"
                            ],
                            "query": [
                                {
                                    "key": "startHour",
                                    "value": "<string>",
                                    "description": "(Required) A start time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Timezone will default to your organization's defined timezone if none is provided. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00)."
                                },
                                {
                                    "key": "endHour",
                                    "value": "<string>",
                                    "description": "(Required) An end time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Timezone will default to your organization's defined timezone if none is provided. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00)."
                                },
                                {
                                    "key": "driverIds",
                                    "value": "<string>,<string>",
                                    "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                },
                                {
                                    "key": "tagIds",
                                    "value": "<string>",
                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "<string>",
                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "after",
                                    "value": "<string>",
                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Get fuel and energy efficiency driver reports for the requested time range.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "d20f0fa5-f403-48db-9a27-cac127152ba6",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"driverReports\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "f4527c2a-6939-4ff8-8e9d-760777dd0659",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "956ad1c0-bf8c-41dd-9533-31e93ea20832",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "7f5c144d-f298-410b-9a5a-15c48a80b991",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "85621b50-697a-4cee-b261-e2a8fc03f64c",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "772e98e7-cdf3-4087-9ff4-4bed2a68df5f",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "94e68d43-8ddf-4d9d-a526-076396db31f2",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "c8db332f-ce2d-4adf-af25-4984bf6a00b9",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "c148dc68-409b-4b34-ab44-a25020559965",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "c9d429c3-843f-4b90-a18d-b75db9e4288d",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "85b8afac-129b-48fe-86f0-f7641419f80a",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "[preview] Get vehicle idling reports.",
                    "id": "6a11cbad-b9f9-49b5-8418-dcc5ad59ba66",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "preview",
                                "fleet",
                                "reports",
                                "vehicle",
                                "idling"
                            ],
                            "query": [
                                {
                                    "key": "startTime",
                                    "value": "<string>",
                                    "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                },
                                {
                                    "key": "endTime",
                                    "value": "<string>",
                                    "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                },
                                {
                                    "key": "vehicleIds",
                                    "value": "<string>",
                                    "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                },
                                {
                                    "key": "tagIds",
                                    "value": "<string>",
                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "<string>",
                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "ptoStatus",
                                    "value": "<string>",
                                    "description": "A filter on the data based on power take-off being active or inactive.  Valid values: `Active`, `Inactive`"
                                },
                                {
                                    "key": "minIdlingDurationMinutes",
                                    "value": "<integer>",
                                    "description": "A filter on the data based on a minimum idling duration."
                                }
                            ]
                        },
                        "description": "Get all vehicle idling reports for the requested time duration.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "f6ca42a9-e6de-4b48-9b1d-338eee9428dc",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"requestEndTime\": \"<string>\",\n \"requestStartTime\": \"<string>\"\n}"
                        },
                        {
                            "id": "047c7423-d526-4e1c-8005-d034844bd935",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "a1541145-9760-43f5-a20b-5d99a6df1861",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "542beb31-7cee-48f3-a43a-df3ceaf006de",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "fb34afed-c6fb-4e69-a06f-88054e5ba15d",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "345c9e07-6cad-45ee-9389-1052b98b5784",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "b05655d0-716d-42df-8931-2086c649d50e",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "c411e202-b24d-42b7-a8b0-b0b8522cfc94",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "cf76f8df-1e37-4bf9-9800-2638ddf1168e",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "6e19e25e-fd4e-4e43-a19b-905d51c46a20",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "e70f29c1-efd6-4c2a-bf93-a00150d0ab5e",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "[preview] Get fuel and energy efficiency vehicle reports.",
                    "id": "c4bfe15c-89fa-4aa1-8a9a-0cb57e6bc642",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "preview",
                                "fleet",
                                "reports",
                                "vehicles",
                                "fuel-energy"
                            ],
                            "query": [
                                {
                                    "key": "startHour",
                                    "value": "<string>",
                                    "description": "(Required) A start time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Timezone will default to your organization's defined timezone if none is provided. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00)."
                                },
                                {
                                    "key": "endHour",
                                    "value": "<string>",
                                    "description": "(Required) An end time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Timezone will default to your organization's defined timezone if none is provided. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00)."
                                },
                                {
                                    "key": "vehicleIds",
                                    "value": "<string>",
                                    "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                },
                                {
                                    "key": "energyType",
                                    "value": "<string>",
                                    "description": "The type of energy used by the vehicle.  Valid values: `fuel`, `hybrid`, `electric`"
                                },
                                {
                                    "key": "tagIds",
                                    "value": "<string>",
                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "<string>",
                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "after",
                                    "value": "<string>",
                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Get fuel and energy efficiency vehicle reports for the requested time range.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "65a279fe-7824-4b8e-899f-06825851fd80",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"endHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleReports\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "0586a072-3317-4b09-810d-b75594b0b803",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "364ea8b1-d59c-4b57-8851-99254c0b7bca",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "ce37c66c-3e70-4217-9b47-36d227a2e0ea",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "d9ea1338-2835-4953-b854-74c71de486ff",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "61b5e61c-ac1c-4dfb-b4ce-192eccde9cd0",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "4fca4aa9-9f12-418b-9ed3-b94d8462c0cc",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "3cb57563-799e-441e-84be-bceddc39f3ac",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "70e76342-e15d-47e9-9770-961d4fd6e1f3",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "dfacf5d7-bde4-4dca-b22f-d0c5bd9b12ab",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "9eae264e-f754-49bf-a7bd-7b4cbd4693b1",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "b98523d2-347e-48f1-bf61-2283375d8e77"
        },
        {
            "name": "tags",
            "item": [
                {
                    "name": "{id}",
                    "item": [
                        {
                            "name": "Delete a tag",
                            "id": "f5fbd7ed-457a-4caf-87e4-aabaea4941d1",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/tags/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "013db92b-f9a7-4d41-8bd8-061250450409",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`."
                                        }
                                    ]
                                },
                                "description": "Permanently deletes a tag. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "f4cf06a7-ea62-4fcd-af37-32d362b14600",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "601164ba-649e-4b17-94a5-b7157f77f5bf",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve a tag",
                            "id": "00bb0250-3c03-4102-a9bd-c74cf32a1a56",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/tags/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "ef00216f-a0f5-415e-bbcd-9d31d0d752a9",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`."
                                        }
                                    ]
                                },
                                "description": "Fetch a tag by id. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "9abb93f1-eae6-4520-8156-167b645ab925",
                                    "name": "The tag corresponding to request id.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                },
                                {
                                    "id": "8bef4ce0-606a-44ef-8591-9fff75de228c",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a tag",
                            "id": "2eb2099f-e764-4f33-afd2-ba3b53acc681",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tags/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "090eb538-45b3-444d-93a2-6dcaf4c12c44",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`."
                                        }
                                    ]
                                },
                                "description": "Update an existing tag. **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard. \n\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource. \n\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "4be5ec0c-c222-429d-9511-1e2b0a799d70",
                                    "name": "Returns updated tag object.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                },
                                {
                                    "id": "22111ad9-7d97-4d6d-bda5-6b34d5227d5d",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a tag",
                            "id": "4ce8e1d7-4af2-4f81-83b3-f65d438d09b2",
                            "request": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tags/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "ba6d33c6-f503-4e06-a9e5-8c34a9fc2849",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`."
                                        }
                                    ]
                                },
                                "description": "Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "305ada72-24d8-439e-baef-99992c87220b",
                                    "name": "The updated tag data.",
                                    "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                },
                                {
                                    "id": "e027f0f1-1871-4d86-9d29-229c0e26335a",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "bad3522a-0599-4b62-afca-68a4d1a1d403"
                },
                {
                    "name": "List all tags",
                    "id": "89bf1e23-544b-4eb7-8d7c-0b5dbed0c3c6",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tags?limit=<long>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tags"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "<long>",
                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                },
                                {
                                    "key": "after",
                                    "value": "<string>",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Return all of the tags for an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "384ef8d3-0a16-4cf5-87de-74b4f7adb437",
                            "name": "List of tags.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tags?limit=<long>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "e07ae3fd-31aa-46cd-be7b-6da7e56e441a",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tags?limit=<long>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create a tag",
                    "id": "3b468bfd-c9ef-48b9-b039-d19886f30095",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tags",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tags"
                            ]
                        },
                        "description": "Create a new tag for the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "0b6f057e-0f75-4ad8-9703-be15e2a6362e",
                            "name": "Newly created tag object, including the new tag ID.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tags",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                        },
                        {
                            "id": "1a9ab8f2-b6c5-4425-80ce-c873fb707fb6",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tags",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "ff7950e4-237c-4db6-8782-40f0f5e7a42d"
        },
        {
            "name": "users",
            "item": [
                {
                    "name": "{id}",
                    "item": [
                        {
                            "name": "Delete a user",
                            "id": "fc9463ae-bc68-485c-8e10-320418f0cee1",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "fa7df9b8-5407-49d1-96f7-47b3ef883c3f",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) Unique identifier for the user."
                                        }
                                    ]
                                },
                                "description": "Delete the given user. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "224dd455-e2b4-4cac-ad06-0e82ddc28960",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "d21af81d-725d-4f33-a59e-f8fa943c23e2",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve a user",
                            "id": "1eba7fbd-1493-433c-8d24-abc59c25b913",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "c8d0d18c-f4d6-45d4-b2eb-16f3f960ab0b",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) Unique identifier for the user."
                                        }
                                    ]
                                },
                                "description": "Get a specific user's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "00bdfe31-d15d-421b-b2b7-e90fb0fd1129",
                                    "name": "Returns the specified user.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"authType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"roles\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "8db90f75-313d-444b-b17f-bb9d78554bb0",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a user",
                            "id": "1a79bbf3-d4c8-4d43-8800-f07d8ae18044",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "790d2717-0419-4de9-ab1f-fcfc96e9b307",
                                            "key": "id",
                                            "value": "<string>",
                                            "description": "(Required) Unique identifier for the user."
                                        }
                                    ]
                                },
                                "description": "Update a specific user's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "f563d48c-80fb-4461-8708-dd51c96831d1",
                                    "name": "Updated user object with ID.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"authType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"roles\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "b5ccdd9c-33a8-45bc-afce-996a1b0f4df6",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "e51977ea-d77d-4623-9741-e7b07732dfef"
                },
                {
                    "name": "List all users",
                    "id": "68d9e34e-928d-4245-9d99-6826e77d5762",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users?limit=<long>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "<long>",
                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                },
                                {
                                    "key": "after",
                                    "value": "<string>",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Returns a list of all users in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "39c63f6e-02d2-4283-8743-c48d685bbdd0",
                            "name": "List all users.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users?limit=<long>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "c8c5c193-0c0e-4062-85ff-335cd06144de",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users?limit=<long>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create a user",
                    "id": "c97bdc24-099b-448d-93da-7b102a70a3d5",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"authType\": \"<string>\",\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ]
                        },
                        "description": "Add a user to the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "cdd2cfda-077d-4379-beb4-19d931e180a9",
                            "name": "Newly created user object with ID.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authType\": \"<string>\",\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"authType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"roles\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "1fabe309-98bd-4a5c-9e09-c217817e2c99",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authType\": \"<string>\",\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "6f2a90fe-2513-4824-bd94-c0e274163984"
        },
        {
            "name": "v1",
            "item": [
                {
                    "name": "fleet",
                    "item": [
                        {
                            "name": "assets",
                            "item": [
                                {
                                    "name": "{asset id}",
                                    "item": [
                                        {
                                            "name": "List historical locations for a given asset",
                                            "id": "4720a31f-65ca-4b5b-aa99-3e8c4effffab",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/locations?startMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        ":asset_id",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>",
                                                            "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs."
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>",
                                                            "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs."
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "e8efaea1-79c0-472c-92bb-655c18c0418b",
                                                            "key": "asset_id",
                                                            "value": "<long>",
                                                            "description": "(Required) ID of the asset. Must contain only digits 0-9."
                                                        }
                                                    ]
                                                },
                                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nList historical locations for a given asset. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "146eb3d7-a80b-42c9-a8b3-2815706a9306",
                                                    "name": "Asset location details.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/locations?startMs=<long>&endMs=<long>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "fleet",
                                                                "assets",
                                                                ":asset_id",
                                                                "locations"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startMs",
                                                                    "value": "<long>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<long>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "asset_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "[\n {\n  \"latitude\": \"<number>\",\n  \"location\": \"<string>\",\n  \"longitude\": \"<number>\",\n  \"speedMilesPerHour\": \"<number>\",\n  \"time\": \"<number>\"\n },\n {\n  \"latitude\": \"<number>\",\n  \"location\": \"<string>\",\n  \"longitude\": \"<number>\",\n  \"speedMilesPerHour\": \"<number>\",\n  \"time\": \"<number>\"\n }\n]"
                                                },
                                                {
                                                    "id": "9fc91f10-5718-4dc3-aa3c-4337778259db",
                                                    "name": "Unexpected error.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/locations?startMs=<long>&endMs=<long>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "fleet",
                                                                "assets",
                                                                ":asset_id",
                                                                "locations"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startMs",
                                                                    "value": "<long>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<long>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "asset_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "\"<string>\""
                                                }
                                            ]
                                        },
                                        {
                                            "name": "List stats for a given reefer",
                                            "id": "1d56263c-1f9c-4b10-a11c-3061bd791429",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/reefer?startMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        ":asset_id",
                                                        "reefer"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>",
                                                            "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs."
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>",
                                                            "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs."
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "345ec1d4-df2e-4889-b215-1b7bb6a5c1c9",
                                                            "key": "asset_id",
                                                            "value": "<long>",
                                                            "description": "(Required) ID of the asset. Must contain only digits 0-9."
                                                        }
                                                    ]
                                                },
                                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the reefer-specific stats of an asset. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "cbb0a482-4e98-431c-ace4-19a7c34fa989",
                                                    "name": "Reefer-specific asset details.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/reefer?startMs=<long>&endMs=<long>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "fleet",
                                                                "assets",
                                                                ":asset_id",
                                                                "reefer"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startMs",
                                                                    "value": "<long>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<long>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "asset_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"assetType\": \"<string>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"reeferStats\": {\n  \"alarms\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"engineHours\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fuelPercentage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"powerStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"returnAirTemp\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"setPoint\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "65810c5a-c18a-4938-b7f7-140993a2db67",
                                                    "name": "Unexpected error.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/reefer?startMs=<long>&endMs=<long>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "fleet",
                                                                "assets",
                                                                ":asset_id",
                                                                "reefer"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startMs",
                                                                    "value": "<long>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<long>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "asset_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "\"<string>\""
                                                }
                                            ]
                                        }
                                    ],
                                    "id": "00481d89-a221-4705-854a-e20dcd9d787c"
                                },
                                {
                                    "name": "List all assets",
                                    "id": "2827c3cc-a8d0-492a-abb7-8100b6610413",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/assets",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "assets"
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all of the assets. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "b6dc7451-04ae-40cb-8dfd-3d1ebdcb22fc",
                                            "name": "List of assets.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"assets\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "942e093c-490c-49c7-ae43-eff13e0d1ec8",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "List current location for all assets",
                                    "id": "ae2386eb-6456-4a86-8d26-4c159f839260",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/assets/locations?startingAfter=<string>&endingBefore=<string>&limit=<int64>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "assets",
                                                "locations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startingAfter",
                                                    "value": "<string>",
                                                    "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter."
                                                },
                                                {
                                                    "key": "endingBefore",
                                                    "value": "<string>",
                                                    "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter."
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<int64>",
                                                    "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch current locations of all assets. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "eb8b28e2-dbad-4ef9-939b-73ee614e62bd",
                                            "name": "List of assets and their current locations.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/locations?startingAfter=<string>&endingBefore=<string>&limit=<int64>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<int64>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"assets\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasPrevPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "7824a698-f2e9-4e05-b227-322476116b61",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/locations?startingAfter=<string>&endingBefore=<string>&limit=<int64>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<int64>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "List stats for all reefers",
                                    "id": "34bbc945-d201-4fcf-bbb6-bd4cb1eb4bca",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/assets/reefers?startMs=<long>&endMs=<long>&startingAfter=<string>&endingBefore=<string>&limit=<int64>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "assets",
                                                "reefers"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "<long>",
                                                    "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>",
                                                    "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs."
                                                },
                                                {
                                                    "key": "startingAfter",
                                                    "value": "<string>",
                                                    "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter."
                                                },
                                                {
                                                    "key": "endingBefore",
                                                    "value": "<string>",
                                                    "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter."
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<int64>",
                                                    "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetches all reefers and reefer-specific stats. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "9d4060e9-2438-44e5-8cc8-afe37b7696c8",
                                            "name": "All org reefers and reefer-specific details.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/reefers?startMs=<long>&endMs=<long>&startingAfter=<string>&endingBefore=<string>&limit=<int64>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        "reefers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<int64>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasPrevPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "e62c7ba0-676e-4b28-9a9a-40374ad63756",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/reefers?startMs=<long>&endMs=<long>&startingAfter=<string>&endingBefore=<string>&limit=<int64>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        "reefers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<int64>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "e2d3b117-9ae0-40f4-9e61-85ff166f76d8"
                        },
                        {
                            "name": "drivers",
                            "item": [
                                {
                                    "name": "Fetch driver safety score",
                                    "id": "75d28101-2f98-4c50-a037-338b3682d67e",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/drivers/:driverId/safety/score?startMs=<long>&endMs=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "drivers",
                                                ":driverId",
                                                "safety",
                                                "score"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "<long>",
                                                    "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>",
                                                    "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "347a4e15-ee61-47f2-936b-fe98d3a27a17",
                                                    "key": "driverId",
                                                    "value": "<long>",
                                                    "description": "(Required) ID of the driver. Must contain only digits 0-9."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the safety score for the driver. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "bb2b1308-337d-41e5-bfdb-4ce237168f29",
                                            "name": "Safety score details.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/drivers/:driverId/safety/score?startMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "drivers",
                                                        ":driverId",
                                                        "safety",
                                                        "score"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "driverId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"crashCount\": \"<integer>\",\n \"driverId\": \"<integer>\",\n \"harshAccelCount\": \"<integer>\",\n \"harshBrakingCount\": \"<integer>\",\n \"harshEvents\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"harshTurningCount\": \"<integer>\",\n \"safetyScore\": \"<integer>\",\n \"safetyScoreRank\": \"<string>\",\n \"timeOverSpeedLimitMs\": \"<integer>\",\n \"totalDistanceDrivenMeters\": \"<integer>\",\n \"totalHarshEventCount\": \"<integer>\",\n \"totalTimeDrivenMs\": \"<integer>\"\n}"
                                        },
                                        {
                                            "id": "3d0fda0d-5303-4faf-8942-9febe419c6d7",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/drivers/:driverId/safety/score?startMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "drivers",
                                                        ":driverId",
                                                        "safety",
                                                        "score"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "driverId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Set a duty status for a specific driver",
                                    "id": "8fc245fc-5d98-48aa-b464-b37ac4d34dd9",
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"duty_status\": \"<string>\",\n    \"location\": \"<string>\",\n    \"remark\": \"<string>\",\n    \"status_change_at_ms\": \"<int64>\",\n    \"vehicle_id\": \"<int64>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/drivers/:driver_id/hos/duty_status",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "drivers",
                                                ":driver_id",
                                                "hos",
                                                "duty_status"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "638f144c-f317-408e-b886-a49e7c556ea8",
                                                    "key": "driver_id",
                                                    "value": "<long>",
                                                    "description": "(Required) ID of the driver for whom the duty status is being set."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nSet an individual driver’s current duty status to 'On Duty' or 'Off Duty'.\n\n To ensure compliance with the ELD Mandate, only  authenticated drivers can make direct duty status changes on their own logbook. Any system external to the Samsara Driver App using this endpoint to trigger duty status changes must ensure that such changes are only triggered directly by the driver in question and that the driver has been properly authenticated. This endpoint should not be used to algorithmically trigger duty status changes nor should it be used by personnel besides the driver to trigger duty status changes on the driver’s behalf. Carriers and their drivers are ultimately responsible for maintaining accurate logs and should confirm that their use of the endpoint is compliant with the ELD Mandate. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "46b65dc8-47ab-4056-93f4-287bcfee5648",
                                            "name": "Successfully changed duty status. No response body is returned.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"duty_status\": \"<string>\",\n    \"location\": \"<string>\",\n    \"remark\": \"<string>\",\n    \"status_change_at_ms\": \"<int64>\",\n    \"vehicle_id\": \"<int64>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/drivers/:driver_id/hos/duty_status",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "drivers",
                                                        ":driver_id",
                                                        "hos",
                                                        "duty_status"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "driver_id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": ""
                                        },
                                        {
                                            "id": "684d5e8d-a1c7-4588-a79e-299ece894405",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"duty_status\": \"<string>\",\n    \"location\": \"<string>\",\n    \"remark\": \"<string>\",\n    \"status_change_at_ms\": \"<int64>\",\n    \"vehicle_id\": \"<int64>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/drivers/:driver_id/hos/duty_status",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "drivers",
                                                        ":driver_id",
                                                        "hos",
                                                        "duty_status"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "driver_id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "b02b3bdb-40b3-4945-8acd-ab18592dc981"
                        },
                        {
                            "name": "messages",
                            "item": [
                                {
                                    "name": "Get all messages.",
                                    "id": "e7e3d114-04a5-4c19-9a8d-7f675f929308",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/messages?endMs=<long>&durationMs=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "messages"
                                            ],
                                            "query": [
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>",
                                                    "description": "Time in unix milliseconds that represents the end of time range of messages to return. Used in combination with durationMs. Defaults to now."
                                                },
                                                {
                                                    "key": "durationMs",
                                                    "value": "<long>",
                                                    "description": "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet all messages. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "e8d52a28-5600-4231-9da1-37e488599ef1",
                                            "name": "Returns the fetched messages from most recently sent to least recently sent.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/messages?endMs=<long>&durationMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "messages"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "durationMs",
                                                            "value": "<long>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "6c4e4401-8975-429f-a0ed-fd7849d1e85a",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/messages?endMs=<long>&durationMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "messages"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "durationMs",
                                                            "value": "<long>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Send a message to a list of driver ids.",
                                    "id": "5e7ddc25-5937-4335-8ea0-10dee942a1b2",
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverIds\": [\n        \"<int64>\",\n        \"<int64>\"\n    ],\n    \"text\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/messages",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "messages"
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nSend a message to a list of driver ids. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "2a08336b-a6c2-46d5-a161-18bf75cebbcd",
                                            "name": "Returns the created messages.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverIds\": [\n        \"<int64>\",\n        \"<int64>\"\n    ],\n    \"text\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/messages",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "messages"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "d39d83cd-ca45-4b1c-91be-4450cc9c609f",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverIds\": [\n        \"<int64>\",\n        \"<int64>\"\n    ],\n    \"text\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/messages",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "messages"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "dfb55a31-0453-4b54-980b-d9ebfc298947"
                        },
                        {
                            "name": "trailers",
                            "item": [
                                {
                                    "name": "List trailer assignments for all trailers",
                                    "id": "016e2720-ce12-46de-84fb-c3e92d73ccf0",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/trailers/assignments?startMs=<long>&endMs=<long>&limit=<int64>&startingAfter=<string>&endingBefore=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "trailers",
                                                "assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "<long>",
                                                    "description": "Timestamp in Unix epoch miliseconds representing the start of the period to fetch. Omitting both startMs and endMs only returns current assignments."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>",
                                                    "description": "Timestamp in Unix epoch miliseconds representing the end of the period to fetch. Omitting endMs sets endMs as the current time"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<int64>",
                                                    "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'."
                                                },
                                                {
                                                    "key": "startingAfter",
                                                    "value": "<string>",
                                                    "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter."
                                                },
                                                {
                                                    "key": "endingBefore",
                                                    "value": "<string>",
                                                    "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch trailer assignment data for all trailers in your organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "012ffd1e-7013-49e7-aae8-e3c31f9c8c77",
                                            "name": "Returns trailer assignment data for all trailers in your organization",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/trailers/assignments?startMs=<long>&endMs=<long>&limit=<int64>&startingAfter=<string>&endingBefore=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "trailers",
                                                        "assignments"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<int64>"
                                                        },
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasPrevPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"trailers\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "00408221-954f-4f3d-9c0d-623f246c25eb",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/trailers/assignments?startMs=<long>&endMs=<long>&limit=<int64>&startingAfter=<string>&endingBefore=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "trailers",
                                                        "assignments"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<int64>"
                                                        },
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "List trailer assignments for a given trailer",
                                    "id": "8917941e-6b86-492b-9be2-af2c33d9d7e3",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/trailers/:trailerId/assignments?startMs=<long>&endMs=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "trailers",
                                                ":trailerId",
                                                "assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "<long>",
                                                    "description": "Timestamp in Unix epoch milliseconds representing the start of the period to fetch. Omitting both startMs and endMs only returns current assignments."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>",
                                                    "description": "Timestamp in Unix epoch milliseconds representing the end of the period to fetch. Omitting endMs sets endMs as the current time"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "624f4a2a-48c5-424f-8f77-d8065bbbe09b",
                                                    "key": "trailerId",
                                                    "value": "<long>",
                                                    "description": "(Required) ID of trailer. Must contain only digits 0-9."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch trailer assignment data for a single trailer. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "83873ba6-5fc9-45eb-aecd-3dcfe4e87880",
                                            "name": "Returns trailer assignment data for a single trailer",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/trailers/:trailerId/assignments?startMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "trailers",
                                                        ":trailerId",
                                                        "assignments"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "trailerId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"id\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"name\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"trailerAssignments\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                        },
                                        {
                                            "id": "2c4ed5e2-5ba9-4cad-8e9f-9a8f040389b1",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/trailers/:trailerId/assignments?startMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "trailers",
                                                        ":trailerId",
                                                        "assignments"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "trailerId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "81ae3785-89a2-48ff-ab47-12c7edf24d9f"
                        },
                        {
                            "name": "vehicles/{vehicle Id}/safety",
                            "item": [
                                {
                                    "name": "Fetch harsh events",
                                    "id": "5762524f-cb3c-437d-a9d4-ebdc1cd024a8",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/harsh_event?timestamp=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "vehicles",
                                                ":vehicleId",
                                                "safety",
                                                "harsh_event"
                                            ],
                                            "query": [
                                                {
                                                    "key": "timestamp",
                                                    "value": "<long>",
                                                    "description": "(Required) Timestamp in milliseconds representing the timestamp of a harsh event."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "f71a0d3d-143f-4931-8dab-f57d405d38e1",
                                                    "key": "vehicleId",
                                                    "value": "<long>",
                                                    "description": "(Required) ID of the vehicle. Must contain only digits 0-9."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch harsh event details for a vehicle. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "174152c8-85f3-4e99-8a73-8262aecba945",
                                            "name": "Harsh event details.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/harsh_event?timestamp=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "vehicles",
                                                        ":vehicleId",
                                                        "safety",
                                                        "harsh_event"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "timestamp",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "vehicleId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"harshEventType\": \"<string>\",\n \"incidentReportUrl\": \"<string>\",\n \"downloadForwardVideoUrl\": \"<string>\",\n \"downloadInwardVideoUrl\": \"<string>\",\n \"downloadTrackedInwardVideoUrl\": \"<string>\",\n \"isDistracted\": \"<boolean>\",\n \"location\": {\n  \"address\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"latitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"longitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "5f4dcb73-387b-46d9-8e39-2c4c5812120b",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/harsh_event?timestamp=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "vehicles",
                                                        ":vehicleId",
                                                        "safety",
                                                        "harsh_event"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "timestamp",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "vehicleId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Fetch vehicle safety scores",
                                    "id": "f9e4b89c-7050-4b83-9236-b25bc29fdd23",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/score?startMs=<long>&endMs=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "vehicles",
                                                ":vehicleId",
                                                "safety",
                                                "score"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "<long>",
                                                    "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>",
                                                    "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "c6568784-06fd-4f1a-b594-f54191316339",
                                                    "key": "vehicleId",
                                                    "value": "<long>",
                                                    "description": "(Required) ID of the vehicle. Must contain only digits 0-9."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the safety score for the vehicle. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "e98caca6-d598-4650-b5dc-04e8ebac0cdb",
                                            "name": "Safety score details.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/score?startMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "vehicles",
                                                        ":vehicleId",
                                                        "safety",
                                                        "score"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "vehicleId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"crashCount\": \"<integer>\",\n \"harshAccelCount\": \"<integer>\",\n \"harshBrakingCount\": \"<integer>\",\n \"harshEvents\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"harshTurningCount\": \"<integer>\",\n \"safetyScore\": \"<integer>\",\n \"safetyScoreRank\": \"<string>\",\n \"timeOverSpeedLimitMs\": \"<integer>\",\n \"totalDistanceDrivenMeters\": \"<integer>\",\n \"totalHarshEventCount\": \"<integer>\",\n \"totalTimeDrivenMs\": \"<integer>\",\n \"vehicleId\": \"<integer>\"\n}"
                                        },
                                        {
                                            "id": "24efa88b-5ce6-4d02-9edc-d43ff525e1d6",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/score?startMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "vehicles",
                                                        ":vehicleId",
                                                        "safety",
                                                        "score"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "vehicleId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "9ee6b715-28c5-49e4-829c-f675981dc57c"
                        },
                        {
                            "name": "Delete a route",
                            "id": "412826a4-5828-4926-9b54-9683d75a6dec",
                            "request": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"apply_to_future_routes\": \"<boolean>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id_or_external_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "fleet",
                                        "dispatch",
                                        "routes",
                                        ":route_id_or_external_id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "db5a0bbb-01f2-4d3d-9661-6eac2d57f526",
                                            "key": "route_id_or_external_id",
                                            "value": "<string>",
                                            "description": "(Required) ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                        }
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nDelete a dispatch route and its associated jobs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "37032daa-4bc1-4e5b-94d3-1dfab41ffe2d",
                                    "name": "Successfully deleted the dispatch route. No response body is returned.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"apply_to_future_routes\": \"<boolean>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id_or_external_id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "dispatch",
                                                "routes",
                                                ":route_id_or_external_id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "route_id_or_external_id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": ""
                                },
                                {
                                    "id": "25d4d1d8-0ace-46b7-ad91-a9481036e5c0",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"apply_to_future_routes\": \"<boolean>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id_or_external_id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "dispatch",
                                                "routes",
                                                ":route_id_or_external_id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "route_id_or_external_id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get HOS signin and signout",
                            "id": "2843ccb6-5884-4b99-b2d5-b165bd4428bd",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/fleet/hos_authentication_logs?driverId=<long>&startMs=<long>&endMs=<long>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "fleet",
                                        "hos_authentication_logs"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverId",
                                            "value": "<long>",
                                            "description": "(Required) Driver ID to query."
                                        },
                                        {
                                            "key": "startMs",
                                            "value": "<long>",
                                            "description": "(Required) Beginning of the time range, specified in milliseconds UNIX time."
                                        },
                                        {
                                            "key": "endMs",
                                            "value": "<long>",
                                            "description": "(Required) End of the time range, specified in milliseconds UNIX time."
                                        }
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet the HOS (hours of service) signin and signout logs for the specified driver. The response includes 4 fields that are now deprecated.\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "2f14108f-dbe7-41d3-9905-e71d8ec13532",
                                    "name": "HOS authentication logs for the specified driver.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/hos_authentication_logs?driverId=<long>&startMs=<long>&endMs=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "hos_authentication_logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverId",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "startMs",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"authenticationLogs\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "010b206c-a947-4db4-a9ba-c55ba78aca15",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/hos_authentication_logs?driverId=<long>&startMs=<long>&endMs=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "hos_authentication_logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverId",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "startMs",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get vehicles with engine faults or check lights",
                            "id": "ae893162-25d4-4c29-8014-ef648b06c1bd",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/fleet/maintenance/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "fleet",
                                        "maintenance",
                                        "list"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet list of the vehicles with any engine faults or check light data. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "fee46aa8-6a6a-496a-ad92-b1f12f015dda",
                                    "name": "List of vehicles and maintenance information about each.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/maintenance/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "maintenance",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"vehicles\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "e5812328-d7ce-4de3-b5de-fd8d51ef7827",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/maintenance/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "maintenance",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get vehicle trips",
                            "id": "76b16cd7-6c8b-4f58-9492-e0c8fe5218fd",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/fleet/trips?vehicleId=<long>&startMs=<long>&endMs=<long>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "fleet",
                                        "trips"
                                    ],
                                    "query": [
                                        {
                                            "key": "vehicleId",
                                            "value": "<long>",
                                            "description": "(Required) Vehicle ID to query."
                                        },
                                        {
                                            "key": "startMs",
                                            "value": "<long>",
                                            "description": "(Required) Beginning of the time range, specified in milliseconds UNIX time. Limited to a 90 day window with respect to startMs and endMs"
                                        },
                                        {
                                            "key": "endMs",
                                            "value": "<long>",
                                            "description": "(Required) End of the time range, specified in milliseconds UNIX time."
                                        }
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical trips data for specified vehicle. This method returns a set of historical trips data for the specified vehicle in the specified time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "37b4d1bd-d9a2-466a-8bfd-b0dd1e82d2bb",
                                    "name": "List of trips taken by the requested vehicle within the specified timeframe. Ongoing trips will be returned with 9223372036854775807 as their endMs.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/trips?vehicleId=<long>&startMs=<long>&endMs=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "trips"
                                            ],
                                            "query": [
                                                {
                                                    "key": "vehicleId",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "startMs",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"trips\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "abf1643f-c038-4e96-a1a9-9fd7cefa7654",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/trips?vehicleId=<long>&startMs=<long>&endMs=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "trips"
                                            ],
                                            "query": [
                                                {
                                                    "key": "vehicleId",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "startMs",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        }
                    ],
                    "id": "4962c613-08f1-4b75-8862-25c8139bcef5"
                },
                {
                    "name": "industrial/vision",
                    "item": [
                        {
                            "name": "cameras",
                            "item": [
                                {
                                    "name": "Fetch industrial cameras",
                                    "id": "450aa1d9-cf38-480d-bfb8-25e664f09da0",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/cameras",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "cameras"
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all cameras. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "38220dbb-974a-4af6-af99-f2ac1b847ea0",
                                            "name": "Returns details about a camera.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/cameras",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "cameras"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "[\n {\n  \"cameraId\": \"<long>\",\n  \"cameraName\": \"<string>\",\n  \"ethernetIp\": \"<string>\",\n  \"wifiIp\": \"<string>\"\n },\n {\n  \"cameraId\": \"<long>\",\n  \"cameraName\": \"<string>\",\n  \"ethernetIp\": \"<string>\",\n  \"wifiIp\": \"<string>\"\n }\n]"
                                        },
                                        {
                                            "id": "a826b35d-9570-4637-b14b-eaf9c543aca1",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/cameras",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "cameras"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Fetch industrial camera programs",
                                    "id": "e4065988-d361-43a0-b40d-0818c9964107",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/cameras/:camera_id/programs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "cameras",
                                                ":camera_id",
                                                "programs"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "3600a8d5-5556-43d3-91e3-a88bf472736c",
                                                    "key": "camera_id",
                                                    "value": "<long>",
                                                    "description": "(Required) The camera_id should be valid for the given accessToken."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch configured programs on the camera. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "b4fb92ce-778c-401c-82cd-a2afa2f1aa49",
                                            "name": "Returns programs configured on the camera.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/cameras/:camera_id/programs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "cameras",
                                                        ":camera_id",
                                                        "programs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "camera_id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "[\n {\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n },\n {\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n }\n]"
                                        },
                                        {
                                            "id": "0a062ad3-a5ab-4bf9-ac2c-b331efa563cd",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/cameras/:camera_id/programs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "cameras",
                                                        ":camera_id",
                                                        "programs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "camera_id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "b3054a59-023d-4e01-9523-7f1f1cb18c19"
                        },
                        {
                            "name": "runs",
                            "item": [
                                {
                                    "name": "{camera id}",
                                    "item": [
                                        {
                                            "name": "Fetch runs by camera",
                                            "id": "fb053651-2792-408a-85a5-82ab37ccf8ae",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id?durationMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "runs",
                                                        ":camera_id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "durationMs",
                                                            "value": "<long>",
                                                            "description": "(Required) DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>",
                                                            "description": "EndMs is an optional param. It will default to the current time."
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "52793f06-0fdb-4fae-9749-6d33aaa76cb5",
                                                            "key": "camera_id",
                                                            "value": "<long>",
                                                            "description": "(Required) The camera_id should be valid for the given accessToken."
                                                        }
                                                    ]
                                                },
                                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs by camera. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "a2b63cc2-00fa-4b02-be01-4e539d1194e0",
                                                    "name": "Return runs by cameraId.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id?durationMs=<long>&endMs=<long>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "industrial",
                                                                "vision",
                                                                "runs",
                                                                ":camera_id"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "durationMs",
                                                                    "value": "<long>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<long>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "camera_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "[\n {\n  \"deviceId\": \"<long>\",\n  \"endedAtMs\": \"<long>\",\n  \"program\": {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"reportMetadata\": {\n   \"itemsPerMinute\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"noReadCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"rejectCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"successCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"startedAtMs\": \"<long>\"\n },\n {\n  \"deviceId\": \"<long>\",\n  \"endedAtMs\": \"<long>\",\n  \"program\": {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"reportMetadata\": {\n   \"itemsPerMinute\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"noReadCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"rejectCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"successCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"startedAtMs\": \"<long>\"\n }\n]"
                                                },
                                                {
                                                    "id": "ae0f9411-bf84-4a3d-bd64-f9993ee55d8d",
                                                    "name": "Unexpected error.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id?durationMs=<long>&endMs=<long>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "industrial",
                                                                "vision",
                                                                "runs",
                                                                ":camera_id"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "durationMs",
                                                                    "value": "<long>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<long>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "camera_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "\"<string>\""
                                                }
                                            ]
                                        },
                                        {
                                            "name": "Fetch runs by camera and program",
                                            "id": "3d04d631-d0c7-4dae-87f9-4bb453e1760e",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id/:program_id/:started_at_ms?include=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "runs",
                                                        ":camera_id",
                                                        ":program_id",
                                                        ":started_at_ms"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "include",
                                                            "value": "<string>",
                                                            "description": "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'."
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "db536e18-587c-4b51-b916-a46b723eece4",
                                                            "key": "camera_id",
                                                            "value": "<long>",
                                                            "description": "(Required) The camera_id should be valid for the given accessToken."
                                                        },
                                                        {
                                                            "id": "dba7055b-70c0-466b-82b1-21897ad3f680",
                                                            "key": "program_id",
                                                            "value": "<long>",
                                                            "description": "(Required) The configured program's ID on the camera."
                                                        },
                                                        {
                                                            "id": "f5b72171-4bae-4c91-9757-3a74f3e37ce7",
                                                            "key": "started_at_ms",
                                                            "value": "<long>",
                                                            "description": "(Required) Started_at_ms is a required param. Indicates the start time of the run to be fetched."
                                                        }
                                                    ]
                                                },
                                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs by camera and program. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "e99605d5-5a5e-4bd3-a87b-605f920ad0a5",
                                                    "name": "Return runs by camera ID and program ID.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id/:program_id/:started_at_ms?include=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "industrial",
                                                                "vision",
                                                                "runs",
                                                                ":camera_id",
                                                                ":program_id",
                                                                ":started_at_ms"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "include",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "camera_id"
                                                                },
                                                                {
                                                                    "key": "program_id"
                                                                },
                                                                {
                                                                    "key": "started_at_ms"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"deviceId\": \"<long>\",\n \"endedAtMs\": \"<long>\",\n \"programId\": \"<long>\",\n \"reportMetadata\": {\n  \"itemsPerMinute\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"noReadCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"rejectCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"successCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"startedAtMs\": \"<long>\"\n}"
                                                },
                                                {
                                                    "id": "8d1cf382-b12b-407e-a5b7-bf93e7ab799c",
                                                    "name": "Unexpected error.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id/:program_id/:started_at_ms?include=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "industrial",
                                                                "vision",
                                                                "runs",
                                                                ":camera_id",
                                                                ":program_id",
                                                                ":started_at_ms"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "include",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "camera_id"
                                                                },
                                                                {
                                                                    "key": "program_id"
                                                                },
                                                                {
                                                                    "key": "started_at_ms"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "\"<string>\""
                                                }
                                            ]
                                        }
                                    ],
                                    "id": "1a3c6402-051e-45b6-912c-bee320877ebf"
                                },
                                {
                                    "name": "Fetch runs",
                                    "id": "6860860f-c9cb-407e-8dec-3706c62aaced",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs?durationMs=<long>&endMs=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "runs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "durationMs",
                                                    "value": "<long>",
                                                    "description": "(Required) DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<long>",
                                                    "description": "EndMs is an optional param. It will default to the current time."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "b76bc0f6-8660-42a6-b850-23bd3812efc2",
                                            "name": "Return runs.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/runs?durationMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "runs"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "durationMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"visionRuns\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "bffd2d34-02af-4d40-bedd-90fc9a5e833e",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/runs?durationMs=<long>&endMs=<long>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "runs"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "durationMs",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<long>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "b27812e8-c3a2-43f5-90f1-dd4f97e1d195"
                        },
                        {
                            "name": "Fetch the latest run for a camera or program",
                            "id": "cefb8242-53ad-4978-bb32-26828c0a4d2b",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/industrial/vision/run/camera/:camera_id?program_id=<long>&startedAtMs=<long>&include=<string>&limit=<long>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "industrial",
                                        "vision",
                                        "run",
                                        "camera",
                                        ":camera_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "program_id",
                                            "value": "<long>",
                                            "description": "The configured program's ID on the camera."
                                        },
                                        {
                                            "key": "startedAtMs",
                                            "value": "<long>",
                                            "description": "EndMs is an optional param. It will default to the current time."
                                        },
                                        {
                                            "key": "include",
                                            "value": "<string>",
                                            "description": "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "<long>",
                                            "description": "Limit is an integer value from 1 to 1,000."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "id": "c76747c7-13c4-45d7-a1f4-2be8990a42fb",
                                            "key": "camera_id",
                                            "value": "<long>",
                                            "description": "(Required) The camera_id should be valid for the given accessToken."
                                        }
                                    ]
                                },
                                "description": "Fetch the latest run for a camera or program by default. If startedAtMs is supplied, fetch the specific run that corresponds to that start time. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "8db16f76-cb01-4ed4-ab01-88967ff91385",
                                    "name": "Returns the details for this run.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/run/camera/:camera_id?program_id=<long>&startedAtMs=<long>&include=<string>&limit=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "run",
                                                "camera",
                                                ":camera_id"
                                            ],
                                            "query": [
                                                {
                                                    "key": "program_id",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "startedAtMs",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "include",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "key": "camera_id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"cameraId\": \"<long>\",\n \"endedAtMs\": \"<long>\",\n \"inspectionResults\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"isOngoing\": \"<boolean>\",\n \"program\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"runSummary\": {\n  \"itemsPerMinute\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"noReadCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"rejectCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"successCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"startedAtMs\": \"<long>\"\n}"
                                },
                                {
                                    "id": "ac82426b-5b5f-4007-92d2-be4ca198aee6",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/run/camera/:camera_id?program_id=<long>&startedAtMs=<long>&include=<string>&limit=<long>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "run",
                                                "camera",
                                                ":camera_id"
                                            ],
                                            "query": [
                                                {
                                                    "key": "program_id",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "startedAtMs",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "include",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "key": "camera_id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        }
                    ],
                    "id": "071f6013-ec40-4bcf-b7aa-299612571a3e"
                },
                {
                    "name": "machines",
                    "item": [
                        {
                            "name": "Get machine history",
                            "id": "0bd091ae-f0f4-4f2d-ae12-23e7c4e5ce39",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"endMs\": \"<integer>\",\n    \"startMs\": \"<integer>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/machines/history",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "machines",
                                        "history"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical data for machine objects. This method returns a set of historical data for all machines. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "2a11a3ae-4127-4297-af79-2c55ff70e912",
                                    "name": "List of machine results objects, each containing a time and a datapoint.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endMs\": \"<integer>\",\n    \"startMs\": \"<integer>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/machines/history",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "machines",
                                                "history"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"machines\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "de08badb-73d8-4731-aad9-b2839368c164",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endMs\": \"<integer>\",\n    \"startMs\": \"<integer>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/machines/history",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "machines",
                                                "history"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get machines",
                            "id": "d1308cbc-f08e-4c9e-a61a-5199248a1085",
                            "request": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/machines/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "machines",
                                        "list"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "bca75577-f73f-4dee-baa2-b2ec46c21da2",
                                    "name": "List of machine objects.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/machines/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "machines",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"machines\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "07476913-51d1-40fa-b22b-9c431b1fb111",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/machines/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "machines",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        }
                    ],
                    "id": "c4128dc3-cabe-4a0c-903e-3659b9ad6b59"
                },
                {
                    "name": "sensors",
                    "item": [
                        {
                            "name": "Get cargo status",
                            "id": "780ca5f2-6ff2-4bcc-b0f0-40fe06fd2209",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/cargo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "cargo"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet cargo monitor status (empty / full) for requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "4a323e7a-b495-497c-af86-da6168138600",
                                    "name": "List of sensor objects containing the current cargo status reported by each sensor.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/cargo",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "cargo"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "9c48a8e0-73bd-476c-8df1-925f6da666b6",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/cargo",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "cargo"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get door status",
                            "id": "87f7f582-94c1-4332-acb7-1353ffbddcbf",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/door",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "door"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet door monitor status (closed / open) for requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "312e8d56-dc90-4d63-95a7-4b3af52e7b63",
                                    "name": "List of sensor objects containing the current door status reported by each sensor.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/door",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "door"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "67752d2c-0e71-42a8-bf44-c12b80a9c95f",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/door",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "door"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get sensor history",
                            "id": "104af5c2-cf5f-4bd1-b7bf-e5ea78bc06cf",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"endMs\": \"<integer>\",\n    \"series\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"startMs\": \"<integer>\",\n    \"stepMs\": \"<integer>\",\n    \"fillMissing\": \"withNull\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/history",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "history"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical data for specified sensors. This method returns a set of historical data for the specified sensors in the specified time range and at the specified time resolution. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "80408eec-52dc-4fac-8ca3-4254a58177dc",
                                    "name": "List of results objects, each containing a time and a datapoint for each requested sensor/field pair.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endMs\": \"<integer>\",\n    \"series\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"startMs\": \"<integer>\",\n    \"stepMs\": \"<integer>\",\n    \"fillMissing\": \"withNull\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/history",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "history"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "7e8f263c-ffff-4aec-bb5d-79c45c2bb3a4",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endMs\": \"<integer>\",\n    \"series\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"startMs\": \"<integer>\",\n    \"stepMs\": \"<integer>\",\n    \"fillMissing\": \"withNull\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/history",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "history"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get humidity",
                            "id": "844249a1-417f-498e-b587-40027f768782",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/humidity",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "humidity"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet humidity for requested sensors. This method returns the current relative humidity for the requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "3aa9998f-6a11-489a-a467-60151629bac1",
                                    "name": "List of sensor objects containing the current humidity reported by each sensor.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/humidity",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "humidity"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "db1164ac-a96d-4298-a346-17f08325f3c6",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/humidity",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "humidity"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get all sensors",
                            "id": "83513201-40a3-40c4-8bc5-0ffb3a2bc737",
                            "request": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "list"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet sensor objects. This method returns a list of the sensor objects in the Samsara Cloud and information about them. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "a7f36da6-9388-401a-90f8-6b15f229a665",
                                    "name": "List of sensor objects.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "148f2d01-ca14-41a6-a9f5-1ed7cd4934bd",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get temperature",
                            "id": "5503a927-a7e5-4021-a84f-6db373b5cb27",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/temperature",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "temperature"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet temperature for requested sensors. This method returns the current ambient temperature (and probe temperature if applicable) for the requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "ee8ef63c-d4ff-496e-83d6-32494002e024",
                                    "name": "List of sensor objects containing the current temperature reported by each sensor.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/temperature",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "temperature"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "bd266a8a-d2dd-472d-95d4-94271c28fbae",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/temperature",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "temperature"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        }
                    ],
                    "id": "041ccdcd-9c91-4610-88b8-15572f9ec308"
                }
            ],
            "id": "806239a6-62aa-40c4-833a-9f2832053f28"
        },
        {
            "name": "Get information about your organization",
            "id": "a4e67b1c-319c-4aa5-9c20-2833ccf6177b",
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{baseUrl}}/me",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "me"
                    ]
                },
                "description": "Get information about your organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
            },
            "response": [
                {
                    "id": "b2ff12ed-c1de-4d64-b619-1143944105fd",
                    "name": "Returns information about your organization.",
                    "originalRequest": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/me",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "me"
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n \"data\": {\n  \"carrierSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                },
                {
                    "id": "44251aaf-46d0-4882-984f-718154606f40",
                    "name": "Error response",
                    "originalRequest": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/me",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "me"
                            ]
                        }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                }
            ]
        },
        {
            "name": "List all user roles",
            "id": "38035ad0-cbd4-401f-a3a9-702614247dfa",
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{baseUrl}}/user-roles?limit=<long>&after=<string>",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "user-roles"
                    ],
                    "query": [
                        {
                            "key": "limit",
                            "value": "<long>",
                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                        },
                        {
                            "key": "after",
                            "value": "<string>",
                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                        }
                    ]
                },
                "description": "Returns a list of all user roles in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
            },
            "response": [
                {
                    "id": "0b46a5ff-a4a0-4349-8b62-8f2a7c868405",
                    "name": "List all user roles.",
                    "originalRequest": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/user-roles?limit=<long>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user-roles"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "<long>"
                                },
                                {
                                    "key": "after",
                                    "value": "<string>"
                                }
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                },
                {
                    "id": "877ba3c3-e1e8-4e5d-a303-5e73362ea3a8",
                    "name": "Error response",
                    "originalRequest": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/user-roles?limit=<long>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user-roles"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "<long>"
                                },
                                {
                                    "key": "after",
                                    "value": "<string>"
                                }
                            ]
                        }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                }
            ]
        },
        {
            "name": "New Request",
            "id": "91ad7f3b-a95a-4141-9f59-4e5726b7046f",
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "method": "GET",
                "header": [],
                "url": null
            },
            "response": []
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{trixie}}",
                "type": "string"
            }
        ]
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "id": "9844786a-1eb4-473a-98ce-1e0a1f3343d9",
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "id": "7c16886d-dc23-4c90-9a71-bbb5be9c3ebc",
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "id": "50286c56-811d-476d-8571-9c3b4a7ca6df",
            "key": "baseUrl",
            "value": "https://api.samsara.com/"
        },
        {
            "id": "2cf416e1-c903-4fd0-9248-dd74947dd454",
            "key": "trixie",
            "value": "samsara_api_58g7OvAD1U7A148hWoQHr3uZgZYiHi"
        }
    ]
}