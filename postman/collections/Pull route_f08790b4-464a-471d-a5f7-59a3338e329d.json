{
    "info": {
        "_postman_id": "74ced7e5-11f0-4eaf-a952-e79b0086d247",
        "name": "Pull route",
        "description": "<style type=\"text/css\">\nn {\n    padding: 1em;\n    width: 100%;\n    display: block;\n    margin: 28px 0;\n}\nn.info {\n    background-color: rgba(0, 51, 160, 0.1);\n}\nn.warning {\n    background-color: #fdf6e3;\n}\ni:before {\n    margin-right: 6px;\n}\nnh {\n    font-size: 1.5rem;\n    font-weight: 700;\n    line-height: 1.1;\n    display: block;\n}\nnb {\n    margin-top: 10px;\n    padding-left: 22px;\n    display: block;\n}\n</style>\n\n# Overview\n\n<n class=\"info\">\n<nh>\n<i class=\"fa fa-info-circle\"></i>\nSomething new!\n</nh>\n<nb>\nWelcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br>\n<br>\nWant to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br>\n<br>\n*Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br>\n<br>\nSubmit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)!\n</nb>\n</n>\n\nSamsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.\n\nThe Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.\n\nVisit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.\n\nIf you have any questions, please visit https://samsara.com/help.\n\n## Endpoints\n\nAll our APIs can be accessed through HTTP requests to URLs like:\n\n```\nhttps://api.samsara.com/<endpoint>\n```\n\nFor EU customers, this URL will be:\n\n```\nhttps://api.eu.samsara.com/<endpoint>\n```\n\n<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nNote\n</nh>\n<nb>\nLegacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>`\n</nb>\n</n>\n\n## Authentication\n\nTo authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.\n\nYour API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.\n\nAuthentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:\n\n```curl\nAuthorization: Bearer {access_token}\n```\n\nAll API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.\n\n### OAuth2\nIf building an application for our marketplace, our API is accessible via. OAuth2 as well.\n\n| Type  | Value |\n| ------------- |:-------------:|\n| Security scheme      | OAuth2                                   |\n| OAuth2 Flow          | accessCode                               |\n| Authorization URL    | https://api.samsara.com/oauth2/authorize |\n| Token URL            | https://api.samsara.com/oauth2/token     |\n\n\n\n## Common Patterns\n\nYou can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).\n",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "addresses",
            "item": [
                {
                    "name": "{id}",
                    "item": [
                        {
                            "name": "Delete an address",
                            "id": "d745d3fd-9c2a-4dca-8423-77fbd0aa36c6",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/addresses/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "cd707af8-0e7b-4475-9b36-b6779d35ca22",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`"
                                        }
                                    ]
                                },
                                "description": "Delete a specific address. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "98c51a89-3404-4461-8c7f-9cf69fb46b6c",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "3a113b41-5162-48cf-8ae9-811efeec196a",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve an address",
                            "id": "3be3868e-3844-45c6-b5bd-93a1216b46d5",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/addresses/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "4ba3a189-accf-4257-b285-2008b63d0a77",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`"
                                        }
                                    ]
                                },
                                "description": "Returns a specific address. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "30c3af16-da18-4889-9379-09403a73b6c5",
                                    "name": "An Address.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"formattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"geofence\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressTypes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"latitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"longitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "a8dd0f61-795e-4b25-8a73-0a74e4e50ab6",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update an address",
                            "id": "b17dda58-3fb5-4954-ae80-b4403408c974",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"addressTypes\": [\n        \"yard\",\n        \"yard\"\n    ],\n    \"contactIds\": [\n        \"22408\",\n        \"22408\"\n    ],\n    \"externalIds\": {\n        \"maintenanceId\": \"250020\",\n        \"payrollId\": \"ABFS18600\"\n    },\n    \"formattedAddress\": \"350 Rhode Island St, San Francisco, CA\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"latitude\": 37.765363,\n    \"longitude\": -122.4029238,\n    \"name\": \"Samsara HQ\",\n    \"notes\": \"Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side.\",\n    \"tagIds\": [\n        \"3914\",\n        \"3914\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/addresses/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "7e3ab8d6-2057-4708-8fea-348133a07e9e",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`"
                                        }
                                    ]
                                },
                                "description": "Update a specific address. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "fa6e338c-6808-49f2-96b1-4c3415eceb3f",
                                    "name": "Updated address object with ID.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"latitude\": \"<number>\",\n    \"longitude\": \"<number>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"formattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"geofence\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressTypes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"latitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"longitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "c2bca0df-d2b0-4308-969f-0755bc58a5a6",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"latitude\": \"<number>\",\n    \"longitude\": \"<number>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/addresses/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "addresses",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "3f1a50d4-c209-4cb0-9b3e-b4d099968c9a"
                },
                {
                    "name": "List all addresses",
                    "id": "4e5335ee-a68f-496c-a24b-1dee11403b8c",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/addresses?limit=446&after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&createdAfterTime=dolore consequat",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "addresses"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "446",
                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                },
                                {
                                    "key": "after",
                                    "value": "dolore consequat",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "minim et,et minim cillum",
                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "tagIds",
                                    "value": "minim et,et minim cillum",
                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "createdAfterTime",
                                    "value": "dolore consequat",
                                    "description": "A filter on data to have a created at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                }
                            ]
                        },
                        "description": "Returns a list of all addresses in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "0098a020-d025-4b9d-88bb-e5ca56ecb178",
                            "name": "List of all addresses in the organization",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/addresses?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&createdAfterTime=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "createdAfterTime",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "9f7daa90-f9ba-431f-9d79-41b651a412be",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/addresses?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&createdAfterTime=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "createdAfterTime",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create an address",
                    "id": "31580136-8b5c-45a4-9750-5c09b015c670",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"formattedAddress\": \"350 Rhode Island St, San Francisco, CA\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"name\": \"Samsara HQ\",\n    \"addressTypes\": [\n        \"yard\",\n        \"yard\"\n    ],\n    \"contactIds\": [\n        \"22408\",\n        \"22408\"\n    ],\n    \"externalIds\": {\n        \"maintenanceId\": \"250020\",\n        \"payrollId\": \"ABFS18600\"\n    },\n    \"latitude\": 37.765363,\n    \"longitude\": -122.4029238,\n    \"notes\": \"Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side.\",\n    \"tagIds\": [\n        \"3914\",\n        \"3914\"\n    ]\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/addresses",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "addresses"
                            ]
                        },
                        "description": "Creates a new address in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "5e10d696-7edf-4031-873d-c313ef1dea00",
                            "name": "Newly created address object with ID.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"name\": \"<string>\",\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"latitude\": \"<number>\",\n    \"longitude\": \"<number>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/addresses",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"formattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"geofence\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressTypes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"latitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"longitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "2aec7f9f-23c5-4ebd-975f-4dd461c5eb56",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"formattedAddress\": \"<string>\",\n    \"geofence\": {\n        \"circle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"polygon\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"name\": \"<string>\",\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"externalIds\": \"<object>\",\n    \"latitude\": \"<number>\",\n    \"longitude\": \"<number>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/addresses",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "addresses"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "5ca0ff41-622c-4719-9cd2-e5f13e3c690c"
        },
        {
            "name": "beta",
            "item": [
                {
                    "name": "attributes",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "[beta] Deleting an attribute",
                                    "id": "b4ed0505-4e67-45ea-b609-d88759009d83",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes/:id?entityType=asset",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes",
                                                ":id"
                                            ],
                                            "query": [
                                                {
                                                    "key": "entityType",
                                                    "value": "asset",
                                                    "description": "(Required) Denotes the type of entity, driver or asset."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "a4c77ec6-1516-45f7-8fb2-f63277048345",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) Samsara-provided UUID of the attribute."
                                                }
                                            ]
                                        },
                                        "description": "Delete an attribute by id, including all of its applications. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "731e8459-d466-4925-87b0-ce770bd90957",
                                            "name": "A successful DELETE response is a 204 with no content.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "entityType",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        },
                                        {
                                            "id": "d073994a-71a9-4d1d-bbd0-2ecf1b138c87",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "entityType",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Retrieve an attribute",
                                    "id": "b2f51fa3-0b9b-40a5-806e-bd9108b5b45a",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes/:id?entityType=asset",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes",
                                                ":id"
                                            ],
                                            "query": [
                                                {
                                                    "key": "entityType",
                                                    "value": "asset",
                                                    "description": "(Required) Denotes the type of entity, driver or asset."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "79637ff7-942a-404e-9fd8-01ad2deb15eb",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) Samsara-provided UUID of the attribute."
                                                }
                                            ]
                                        },
                                        "description": "Fetch an attribute by id, including all of its applications. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "79e62848-f531-4f0e-8818-0f3272dded7b",
                                            "name": "The attribute corresponding to request id.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "entityType",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                        },
                                        {
                                            "id": "7f867ed4-a673-4b76-99ef-1ef2dee3344e",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id?entityType=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "entityType",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Update an attribute",
                                    "id": "f8e4df3f-ac7b-490a-ba83-2a48590e4bdf",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"entityType\": \"asset\",\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"License Certifications\",\n    \"numberValues\": [\n        55555288.477849394,\n        24900856.577210233\n    ],\n    \"stringValues\": [\n        \"elit occaecat sunt fugiat\",\n        \"et ex\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "1f78bc10-ce57-4f53-9fd9-8ede780dd8a4",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) Samsara-provided UUID of the attribute."
                                                }
                                            ]
                                        },
                                        "description": "Updates an attribute in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "551134c8-fe12-46c1-a5a7-7ef012b2351e",
                                            "name": "Newly created attribute object with ID.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"entityType\": \"<string>\",\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"numberValues\": [\n        \"<number>\",\n        \"<number>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                        },
                                        {
                                            "id": "055dec98-2cce-4c30-8a43-6fd97b79302a",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"entityType\": \"<string>\",\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"numberValues\": [\n        \"<number>\",\n        \"<number>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/attributes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "attributes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "3fc0d7a9-3c8d-4992-af81-126d0c05f5d7"
                        },
                        {
                            "name": "[beta] List all attributes by entity type",
                            "id": "8032239b-e449-4917-8de8-7a89dd0e47b8",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/attributes?entityType=asset&limit=446&after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "attributes"
                                    ],
                                    "query": [
                                        {
                                            "key": "entityType",
                                            "value": "asset",
                                            "description": "(Required) Denotes the type of entity, driver or asset."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Fetch all attributes in an organization associated with either drivers or assets. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "c4fcbf72-7c08-4db2-aa40-aae0286ccd91",
                                    "name": "All attributes in an organization for an entity type",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes?entityType=<string>&limit=<integer>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "entityType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "aa036fcf-7e28-4206-a19a-affc4d610d19",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes?entityType=<string>&limit=<integer>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "entityType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Create an attribute",
                            "id": "9127857f-77d0-400a-86eb-862526c1a943",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entityType\": \"asset\",\n    \"name\": \"License Certifications\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"numberValues\": [\n        71258122.06438589,\n        -51090917.31889519\n    ],\n    \"stringValues\": [\n        \"deserunt tempor\",\n        \"commodo dolore\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/attributes",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "attributes"
                                    ]
                                },
                                "description": "Creates a new attribute in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "9e059d10-f5f5-4df9-911f-e78c1970e3f7",
                                    "name": "Newly created attribute object with ID.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entityType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"numberValues\": [\n        \"<number>\",\n        \"<number>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                },
                                {
                                    "id": "ab95cec6-e37c-43d4-8317-fe4bcb523ab7",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributeType\": \"string\",\n    \"attributeValueQuantity\": \"multi\",\n    \"entityType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"entities\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"numberValues\": [\n        \"<number>\",\n        \"<number>\"\n    ],\n    \"stringValues\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/attributes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "attributes"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "5edf4dec-2556-41e3-8f40-f15053780d9f"
                },
                {
                    "name": "fleet",
                    "item": [
                        {
                            "name": "hos",
                            "item": [
                                {
                                    "name": "[beta] Get driver HOS ELD events",
                                    "id": "73dd9e44-605a-4bc0-a727-0036c0c1e449",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=dolore consequat&endTime=dolore consequat&driverIds=minim et,et minim cillum&tagIds=dolore consequat&parentTagIds=dolore consequat&driverActivationStatus=active&after=dolore consequat&limit=25",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "hos",
                                                "drivers",
                                                "eld-events"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "dolore consequat",
                                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "dolore consequat",
                                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active",
                                                    "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "25",
                                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 25 objects."
                                                }
                                            ]
                                        },
                                        "description": "Get all HOS ELD events in a time range, grouped by driver. Attributes will be populated depending on which ELD Event Type is being returned.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "559ab88d-d2d6-499a-ade9-dbb7495b11ee",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "c98b1cc5-ba48-446c-98e5-33bac6eaa3d4",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "094241de-366a-4c2e-b8e5-26eaa5264dbd",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "166307d5-60e9-4fa1-b90d-ad10ee81591f",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0d90d5b8-4e3c-4f31-a1fe-0ea0118464b9",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "26af28d9-f5e4-4cb3-beda-23620d6e5912",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c72d2e7e-abd5-4a24-8bff-f9451417afd0",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "9a1b6fd7-35cb-4437-a030-5a053fa96622",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "e72ebd54-37ea-4d43-9fb6-b662a22eb33e",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f134ed13-5d18-470f-8bed-1721a75029c5",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "56a84d0f-0fb9-4892-8196-917f8428d64f",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/drivers/eld-events?startTime=<string>&endTime=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&limit=25",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "drivers",
                                                        "eld-events"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "driverActivationStatus",
                                                            "value": "active"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "25"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Get all driver HOS violations",
                                    "id": "898ee669-ef9f-4b3e-8de3-826aee570861",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=minim et,et minim cillum&startTime=dolore consequat&endTime=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&types=minim et,et minim cillum&after=dolore consequat",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "hos",
                                                "violations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "dolore consequat",
                                                    "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "dolore consequat",
                                                    "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "dolore consequat",
                                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "dolore consequat",
                                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on violations data based on the violation type enum. Supported types: `NONE, californiaMealbreakMissed, cycleHoursOn, cycleOffHoursAfterOnDutyHours, dailyDrivingHours, dailyOffDutyDeferralAddToDay2Consecutive, dailyOffDutyDeferralNotPartMandatory, dailyOffDutyDeferralTwoDayDrivingLimit, dailyOffDutyDeferralTwoDayOffDuty, dailyOffDutyNonResetHours, dailyOffDutyTotalHours, dailyOnDutyHours, mandatory24HoursOffDuty, restbreakMissed, shiftDrivingHours, shiftHours, shiftOnDutyHours, unsubmittedLogs`"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                }
                                            ]
                                        },
                                        "description": "Get active Hours of Service violations for the specified drivers.\n\nThe day object time range for a violation is defined by the `driver`'s `eldDayStartHour`. This value is configurable per driver.\n\nThe `startTime` and `endTime` parameters indicate the datetime range you'd like to retrieve violations for. A violation will be returned if its `violationStartTime` falls within this datetime range (inclusive of `startTime` and `endTime`).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "eead357e-2113-45e3-8554-c1c039da0671",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "d8b1743d-ad06-4136-b71b-2b8c0e267753",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a50a3606-ee82-4fbf-9223-172dc446b807",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8ba3339f-3135-4356-a75b-28749018c3bf",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "cb994484-84e3-4d89-8c90-54ca20d9c8d9",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "32698a17-5f20-4105-a5fe-8dd8d497dcad",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6d273063-102b-4a2f-ba9a-7dd8e37ee971",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7db17a45-ada0-4bee-8dd4-c67bffca4eb1",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c9bc27ab-f56a-4b91-ad22-b6a55d1b5819",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f8b80737-7ed6-4d90-953f-402f749c4c98",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "236c0362-bff8-4e13-8770-796ebc606705",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/hos/violations?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&types=<string>,<string>&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "hos",
                                                        "violations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "driverIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "0ca54439-6e23-4190-a05c-74a7b19411da"
                        },
                        {
                            "name": "trailers",
                            "item": [
                                {
                                    "name": "stats",
                                    "item": [
                                        {
                                            "name": "[beta] Get trailer stats",
                                            "id": "1ea8d570-f21b-4226-971d-1a6d70c05082",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&after=dolore consequat&trailerIds=dolore consequat&time=dolore consequat",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "types",
                                                            "value": "dolore consequat",
                                                            "description": "(Required) The stat types you want this endpoint to return information on.\n\nYou may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "dolore consequat",
                                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                        },
                                                        {
                                                            "key": "trailerIds",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 Format. Millisecond precision and timezones are supported."
                                                        }
                                                    ]
                                                },
                                                "description": "Returns the last known stats of all trailers at the given `time`. If no `time` is specified, the current time is used.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "2c55848a-7f7c-4e58-8218-57549fac3a41",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "1af9442c-32b0-4ce4-9500-bcb58b5fcb69",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "8ae11783-ceef-4a04-9180-15217a303d9c",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "17f38552-61d1-4a68-bb77-1c541782e16c",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "0d7818b4-be76-4d1d-a22f-edc1c12c4183",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "8a6ba775-8323-403b-a127-8e66eb58f229",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "e9b61dc3-2913-4168-8fa0-fe79d3c83540",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "81875d63-8f33-463a-a443-5e5591464295",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "0d2a5360-49d5-424a-8d44-20631a1bd572",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "ed796b94-2880-4524-a86e-7d8b12b57226",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "1a533ea5-0634-4e3f-9568-6e488cd2fc67",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&time=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "time",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "[beta] Get trailer stats feed",
                                            "id": "d4dac6cd-ca72-401d-935c-5e92d954ea02",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&after=dolore consequat&trailerIds=dolore consequat&decorations=dolore consequat",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "types",
                                                            "value": "dolore consequat",
                                                            "description": "(Required) The stat types you want this endpoint to return information on.\n\nYou may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "dolore consequat",
                                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                        },
                                                        {
                                                            "key": "trailerIds",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "dolore consequat",
                                                            "description": "Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters&decorations=gps`.\n\nYou may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters&decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.\n\nNote that decorations may significantly increase the response payload size.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        }
                                                    ]
                                                },
                                                "description": "Follow a feed of trailer stats.\n\nThe first call to this endpoint will provide the most recent stats for each trailer and an `endCursor`.\n\nProviding the `endCursor` value to the `after` query parameter will fetch all updates since the previous API call.\n\nIf `hasNextPage` is false, no new data is immediately available. Please wait a minimum of 5 seconds before making a subsequent request.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "03f5524e-b467-41bb-8cea-d3c313606493",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "52a07055-3cc5-41ec-a722-f8b2a0165575",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "12a522c0-6d9a-4339-bcd0-ceea64ed0588",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "db7af4dd-63b1-4034-bfde-e46f336fb21e",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "6d8b15ce-48fc-4fee-bf9d-84396199da5f",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "96a798ff-fe0a-42f7-8840-fdca571183f6",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "04b739b5-cb48-4a16-b72b-316e4f5d0e7c",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "12965cb3-0933-4afa-bf4a-50480288cf5f",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "e865c34b-3bc9-4557-ac07-fd9f52abf63a",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "631459ec-1a47-4cdb-9fe7-1c31beafd251",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "b2b39274-b33c-4fba-8d30-5988aa19d431",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/feed?types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "feed"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "[beta] Get trailer stats history",
                                            "id": "a8d472e7-e42e-486e-91a7-6b7511fb3fdb",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=dolore consequat&endTime=dolore consequat&types=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&after=dolore consequat&trailerIds=dolore consequat&decorations=dolore consequat",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "dolore consequat",
                                                            "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "dolore consequat",
                                                            "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "dolore consequat",
                                                            "description": "(Required) The stat types you want this endpoint to return information on.\n\nYou may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "dolore consequat",
                                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                        },
                                                        {
                                                            "key": "trailerIds",
                                                            "value": "dolore consequat",
                                                            "description": " A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "dolore consequat",
                                                            "description": "Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters&decorations=gps`.\n\nYou may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters&decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.\n\nNote that decorations may significantly increase the response payload size.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions."
                                                        }
                                                    ]
                                                },
                                                "description": "Returns trailer stats during the given time range for all trailers. This can be optionally filtered by tags or specific trailer IDs.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "127bc7c3-370c-4254-bda4-d2af5370ee60",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "63fde67e-aeb4-4822-8596-8ce7afb0c4fd",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "c1f5b908-d612-4e2f-a7dc-30458f83ced4",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "f787bc76-e33c-4624-9cfe-21be49f5771a",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "786e5360-4e89-464d-9d37-5daac4855bd7",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "97893602-7e7a-45a3-aefa-2a1e95f867b1",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "d0564196-a574-4a91-8611-d9586e9659cf",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "42246ec5-6734-4f3f-bca6-c78b7b3b8911",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "9ca5ef2b-05eb-4e6b-b636-3afafd918607",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "2c805f6a-3e57-4b0d-8f7b-e15e86fe331b",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "9772708e-4e8b-4fe8-bbcf-9ed2da443d71",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/stats/history?startTime=<string>&endTime=<string>&types=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>&trailerIds=<string>&decorations=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                "stats",
                                                                "history"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "endTime",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "types",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "tagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "parentTagIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "after",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "trailerIds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "decorations",
                                                                    "value": "<string>"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        }
                                    ],
                                    "id": "ab32858c-b6a5-420b-8ce1-21996401bb8d"
                                },
                                {
                                    "name": "{id}",
                                    "item": [
                                        {
                                            "name": "[beta] Delete a trailer",
                                            "id": "607e3fef-64c6-441a-84b8-74446b8d94a6",
                                            "request": {
                                                "method": "DELETE",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "1a03d70d-be27-455d-9834-b07f58de4f53",
                                                            "key": "id",
                                                            "value": "dolore consequat",
                                                            "description": "(Required) Unique identifier for the trailer to delete."
                                                        }
                                                    ]
                                                },
                                                "description": "Delete a trailer with the given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "a62603d6-a4fe-4b67-a718-45ca673d1bf2",
                                                    "name": "No Content response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "_postman_previewlanguage": "text",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": ""
                                                },
                                                {
                                                    "id": "5b239680-59db-48d6-9184-74db8dead2f5",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "c9d36b85-9079-4f79-8898-e0f2a8647cfe",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "6d3adebc-fdf5-4eb1-9367-0b8ad3a535d6",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "2698c108-8a4d-461f-a196-57b6fb7948ef",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "c4fc7f71-6bd5-4a83-8413-7482f6fb06ed",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "331bfc2a-c87b-49bb-af93-72b159aa2828",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "6f180ebb-e018-416a-a55c-1e8057dcccbd",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "13bbccd5-57af-4555-844e-b2cb8c307771",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "ab2cf633-2114-4c3a-8922-5b13ce99f16f",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "5071e7d4-061d-4e31-98f4-03c46dbb842c",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "DELETE",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "[beta] Retrieve a trailer",
                                            "id": "801a443b-ca34-468a-9810-39a5872c6b75",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "fe96453b-42d4-4099-ab83-7bcc0c7a3dd0",
                                                            "key": "id",
                                                            "value": "dolore consequat",
                                                            "description": "(Required) ID of the trailer. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: \"key:value\". For example, \"maintenanceId:250020\"."
                                                        }
                                                    ]
                                                },
                                                "description": "Retrieve a trailer with given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "f16fdc6d-cdcc-4e0b-beef-5e5d5d52ebd7",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enabledForMobile\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSerialNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "0d4b6166-8551-48c1-9b4a-5863d71c45d3",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "07b1b4a9-9749-470f-8977-0b46fdcfa81c",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "6f35b872-0b57-458b-ba02-ff373861c23c",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "8d1508a5-268c-485b-aec7-4010d376eb5d",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "cade100f-7a7e-4a4e-9647-39f7d26888a6",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "584dceb4-d5ce-4ca0-acef-239af39b5fbe",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "2d563fa9-30e6-4b5c-9a9c-00225398306a",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "dee2e2ed-7541-46c7-89fd-74c31bb71e96",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "1abbd344-f1df-4a6d-8166-60daff62a3ce",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "e084328a-a249-4d4a-affe-68559d0de600",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "[beta] Update a trailer",
                                            "id": "a2f8dc9d-b974-42cf-9dff-050141972430",
                                            "request": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": true,\n    \"externalIds\": {},\n    \"licensePlate\": \"7TYP290\",\n    \"name\": \"Trailer-123\",\n    \"notes\": \"These are my trailer notes\",\n    \"odometerMeters\": 1234,\n    \"tagIds\": [\n        \"Amet asperiores.\",\n        \"Aperiam fugit adipisci et velit quis eum.\"\n    ],\n    \"trailerSerialNumber\": \"8V8WD530FLN016251\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "e1cf93e3-71cc-44d8-85f5-8dc5a3580d40",
                                                            "key": "id",
                                                            "value": "dolore consequat",
                                                            "description": "(Required) Unique identifier for the trailer to update."
                                                        }
                                                    ]
                                                },
                                                "description": "Update a trailer.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "10e1d329-f445-4d0c-b30b-0fa13f748b8c",
                                                    "name": "OK response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enabledForMobile\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSerialNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "de7da1d4-a5c3-4758-b4a5-4636327ec277",
                                                    "name": "Unauthorized response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Unauthorized",
                                                    "code": 401,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "c86cf318-a8e9-41e3-afed-3594419a29ae",
                                                    "name": "Not Found response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "c3db2ced-1d8e-4350-961d-528a143220d5",
                                                    "name": "Method Not Allowed response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Method Not Allowed",
                                                    "code": 405,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "4d5b3141-f022-494c-93d1-d352de246c55",
                                                    "name": "Too Many Requests response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Too Many Requests",
                                                    "code": 429,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "5fe5ecdb-d89a-4e0a-8727-ec8d4805db9d",
                                                    "name": "Internal Server Error response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "629960f5-9b94-4f5a-87bd-64a68f062782",
                                                    "name": "Not Implemented response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Not Implemented",
                                                    "code": 501,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "c922e1e8-9819-4cb7-8bb7-08603810441b",
                                                    "name": "Bad Gateway response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Bad Gateway",
                                                    "code": 502,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "b307f769-7784-4a57-88cb-0015e66e52a0",
                                                    "name": "Service Unavailable response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Service Unavailable",
                                                    "code": 503,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "62130535-f82f-4d88-bc97-28de74752079",
                                                    "name": "Gateway Timeout response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Gateway Timeout",
                                                    "code": 504,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                },
                                                {
                                                    "id": "1802aad5-a193-4b3f-8723-6d2aaf6adee7",
                                                    "name": "Bad Request response.",
                                                    "originalRequest": {
                                                        "method": "PATCH",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                        },
                                                        "url": {
                                                            "raw": "{{baseUrl}}/beta/fleet/trailers/:id",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "beta",
                                                                "fleet",
                                                                "trailers",
                                                                ":id"
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                                }
                                            ]
                                        }
                                    ],
                                    "id": "48a452ad-64f6-47bd-a66d-7b44b086a702"
                                },
                                {
                                    "name": "[beta] List all trailers",
                                    "id": "0e60cfc5-efb5-4a7f-952e-fabe5450938d",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=dolore consequat&parentTagIds=dolore consequat&limit=512&after=dolore consequat",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "trailers"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "dolore consequat",
                                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "dolore consequat",
                                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512",
                                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                }
                                            ]
                                        },
                                        "description": "List all trailers.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "552a6463-7e29-4291-a292-13912a9d025e",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "e1100ff5-6c40-477d-a209-24896c9dac75",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "3b3a3335-2d8e-4f21-afb0-99fc7c7545ec",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "fee4c2b4-656f-4c5e-9764-91938c5ba79d",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "89e3a5c5-4049-41ac-bd70-06c377e43520",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "86032f4c-61f5-48df-a411-97036f908bbf",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8cb0557f-5e31-4a39-903d-dacdcea2e714",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "10e34f32-8992-4089-bc83-fbd56ff0c107",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "06c205cc-c7d3-4bc2-9ed5-66ae7027d2b0",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c16b9c63-0875-4e85-b195-e9de686220a4",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "cc3f85a1-2224-451c-adef-36a481b58d93",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers?tagIds=<string>&parentTagIds=<string>&limit=512&after=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "512"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Creates a new trailer asset",
                                    "id": "826dc523-8b4b-432d-a182-353ce21481c2",
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"Trailer-123\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": true,\n    \"externalIds\": {},\n    \"licensePlate\": \"7TYP290\",\n    \"notes\": \"These are my trailer notes\",\n    \"tagIds\": [\n        \"Dolorum ut.\",\n        \"Et qui ad et et non qui.\"\n    ],\n    \"trailerSerialNumber\": \"8V8WD530FLN016251\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/trailers",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "trailers"
                                            ]
                                        },
                                        "description": "Creates a new trailer asset.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "ee075800-4bd9-4471-b553-89a3b441e628",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enabledForMobile\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSerialNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "10826685-c381-489e-8fac-3e69c12540cd",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "46aef908-96f9-45bd-956e-68acdf09e005",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "46c82e10-6cfd-468d-b445-84a9b176ca94",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2ad009f2-b9b0-4e18-9e4e-1f51858d120e",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "07869380-b42f-4b31-b775-6e6672b3f3fc",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "24d43043-3e2b-40e8-9669-16411903ac19",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "3f2d542a-697f-4def-a40d-7f33c448e25c",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "cbe0eb5b-c973-4206-9615-ec1e914869a9",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "65a455ba-068f-4336-a077-dd93f49c92b8",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "58613fe6-b9fb-48fa-aaa1-cad7bc20227d",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"name\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"enabledForMobile\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licensePlate\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerSerialNumber\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/fleet/trailers",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "fleet",
                                                        "trailers"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "c5e1e941-0266-4819-b87e-0bc94ef750df"
                        },
                        {
                            "name": "[beta] List driver efficiency",
                            "id": "b97499d7-1153-44c2-81bd-c9969425bcc4",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/fleet/drivers/efficiency?driverActivationStatus=active&driverIds=minim et,et minim cillum&after=dolore consequat&driverTagIds=minim et,et minim cillum&driverParentTagIds=minim et,et minim cillum&startTime=1956-10-21T03:45:13.342Z&endTime=1956-10-21T03:45:13.342Z",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "fleet",
                                        "drivers",
                                        "efficiency"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverActivationStatus",
                                            "value": "active",
                                            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers)."
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Cannot be used with tag filtering or driver status. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "driverTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "Filters summary to drivers based on this comma-separated list of tag IDs. Data from all the drivers' respective vehicles will be included in the summary, regardless of which tag the vehicle is associated with. Should not be provided in addition to `driverIds`. Example: driverTagIds=1234,5678"
                                        },
                                        {
                                            "key": "driverParentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "Filters like `driverTagIds` but includes descendants of all the given parent tags. Should not be provided in addition to `driverIds`. Example: `driverParentTagIds=1234,5678`"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "1956-10-21T03:45:13.342Z",
                                            "description": "A start time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `startTime` is 2020-03-17T12:06:19Z then the results will include data starting from 2020-03-17T12:00:00Z. The provided start time cannot be in the future. Start time can be at most 31 days before the end time. If the start time is within the last hour, the results will be empty. Default: 24 hours prior to endTime."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "1956-10-21T03:45:13.342Z",
                                            "description": "An end time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `endTime` is 2020-03-17T12:06:19Z then the results will include data up until 2020-03-17T12:00:00Z. The provided end time cannot be in the future. End time can be at most 31 days after the start time.   Default: The current time truncated to the hour mark."
                                        }
                                    ]
                                },
                                "description": "Get all drivers' efficiencies. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "66db5acc-deca-4145-989b-3f0f75071a70",
                                    "name": "List of all drivers' efficiencies",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/drivers/efficiency?driverActivationStatus=<string>&driverIds=<string>,<string>&after=<string>&driverTagIds=<string>,<string>&driverParentTagIds=<string>,<string>&startTime=<dateTime>&endTime=<dateTime>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "drivers",
                                                "efficiency"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverParentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<dateTime>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<dateTime>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"driverSummaries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"summaryEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"summaryStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "62ebf96d-77e4-4df5-9609-23298647a336",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/drivers/efficiency?driverActivationStatus=<string>&driverIds=<string>,<string>&after=<string>&driverTagIds=<string>,<string>&driverParentTagIds=<string>,<string>&startTime=<dateTime>&endTime=<dateTime>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "drivers",
                                                "efficiency"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverParentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<dateTime>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<dateTime>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Update an equipment",
                            "id": "d1888ced-8f91-4a1f-954d-3c5f3894f2fe",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": 1234,\n    \"equipmentSerialNumber\": \"8V8WD530FLN016251\",\n    \"externalIds\": {},\n    \"id\": \"494123\",\n    \"name\": \"Equipment-123\",\n    \"notes\": \"These are my equipment notes\",\n    \"odometerMeters\": 1234,\n    \"tagIds\": [\n        \"Aut sequi accusantium vitae nulla quisquam.\",\n        \"Molestias quod quasi necessitatibus.\",\n        \"Molestiae laborum dicta nulla recusandae quia.\",\n        \"Unde odit.\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "d3257cc0-be3e-4d50-8def-022963934c4f",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed."
                                        }
                                    ]
                                },
                                "description": "Update an equipment.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "650ee131-6abe-473b-98b0-f5e13b1ea757",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"equipmentSerialNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "e9a0f156-e90e-4ca1-ba51-6733ac490b98",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2d0297d0-26f5-4f6f-9e9b-aae10d009e33",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "882e8776-e853-4b02-b43a-f7c106e4648a",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "272b5107-c904-4f46-a5b6-f553b86874b5",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2cf0181d-5bdb-4af8-a3e0-acefd6cad1f4",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cd2faf2c-e308-47ca-b68a-1ab602d84dd2",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cbeffe37-7ae6-4c3f-a7d9-c1e074800001",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "96ae4803-0de7-4f2a-a720-02cecbafc7a5",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0cd7d191-c3a7-4895-a952-cdac8ede369a",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c2996f13-5462-46e8-85f3-14330888e9c8",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"engineHours\": \"<integer>\",\n    \"equipmentSerialNumber\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Fetches safety activity event feed",
                            "id": "adea2ccf-8554-4726-a2f5-b3d3101f6ad9",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "fleet",
                                        "safety-events",
                                        "audit-logs",
                                        "feed"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get continuous safety events. The safety activity event feed offers a change-log for safety events. Use this endpoint to subscribe to safety event changes. See documentation below for all supported change-log types.\n\n| ActivityType      | Description |\n| ----------- | ----------- |\n| CreateSafetyEvent      | a new safety event is processed by Samsara       |\n| BehaviorLabelActivityType   | a label is added or removed from a safety event        |\n| InboxActivityType   | a safety event inbox state is updated        |\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "e5341336-cfaa-4f8c-a627-6191026d644c",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "d54312e2-0bf6-4136-ac87-9d768f8f0bdf",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d326c5a5-3c13-4e07-81c3-4d8e54413883",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "aecf8f35-6e96-4e19-9f2d-aded3bec93fb",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "bd1b555c-fe5c-4fac-bf34-9f368cb63284",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ed6c85b6-0e67-4cc7-8a64-93793017b443",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8d5350e6-2447-4c2c-a495-0d617a3d5ae8",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "79d637d8-f02c-41bf-8ba8-8bf83c405df7",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6e616d05-8511-41cd-a8d5-ea0e7138f99c",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "07cfea4f-bc26-4536-972b-01ca0e31e02e",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7884bcf9-cdb2-4a55-8e56-f1d40b870d39",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/safety-events/audit-logs/feed?after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "safety-events",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Update engine immobilizer state of a vehicle.",
                            "id": "868bb059-32a7-4cd3-b8c4-072d06694adf",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"state\": \"ignition_disabled\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "fleet",
                                        "vehicles",
                                        ":id",
                                        "immobilizer"
                                    ],
                                    "variable": [
                                        {
                                            "id": "e595b4e0-0779-4681-8e91-c9d2e13ba1fc",
                                            "key": "id",
                                            "value": "51611335",
                                            "description": "(Required) Vehicle ID"
                                        }
                                    ]
                                },
                                "description": "Update the engine immobilizer state of a vehicle. This requires an engine immobilizer to be installed on the vehicle gateway. The desired engine immobilizer state will be set on the vehicle when the vehicle gateway is online, and the engine is not running.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "f9dd40ae-9d87-4b74-9c3a-9edcf9b805d8",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"id\": \"<long>\",\n \"state\": \"<string>\"\n}"
                                },
                                {
                                    "id": "565e09d6-6112-48de-99ea-2a5830244d03",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7a0026d6-d887-436e-8c3c-c526502f7959",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "14704d93-5981-4e85-a7f3-34b2af09f833",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e62f89d4-fe4b-4fc4-9839-69d9fecd4a08",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "84f1dbca-3712-40b3-bce9-5bf7df1e9050",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "202e8ed0-13e1-4010-b769-fb0390cc2c36",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cc9cbcfc-5218-4f4b-9d64-c3da58717299",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "43d380a3-d13d-4daa-b4a7-92c8e51ab9a3",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6136b088-5c5b-4e0c-b20f-c14b1243764c",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b1d5e009-3200-4819-b626-c82849d88c0f",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"state\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/fleet/vehicles/:id/immobilizer",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "fleet",
                                                "vehicles",
                                                ":id",
                                                "immobilizer"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "1c3c8113-0607-4995-a3e6-521738040842"
                },
                {
                    "name": "ifta-detail/csv",
                    "item": [
                        {
                            "name": "[beta] Create a job to generate csv files of IFTA mileage segments.",
                            "id": "bd0f9531-5101-4837-875b-1cf3fc331318",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"endHour\": \"2019-06-13T19:00:00Z\",\n    \"startHour\": \"2019-06-13T19:00:00Z\",\n    \"vehicleIds\": \"1234,5678,samsara.vin:1HGBH41JXMN109186\",\n    \"vehicleParentTagIds\": \"1234,5678\",\n    \"vehicleTagIds\": \"1234,5678\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "ifta-detail",
                                        "csv"
                                    ]
                                },
                                "description": "Create a job to generate csv files of IFTA mileage segments.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "58977d84-be43-41e6-9079-161c6a0cbbf2",
                                    "name": "Created response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"args\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requestedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"completedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"files\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "c67ee16a-819e-4d7b-abf3-32f65f7bab07",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "68431766-ec8e-4443-a556-74fa8a69a927",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b080b260-fa88-42e9-b55d-a481e7ca918b",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "86c6d38c-1486-48e7-8a5e-ef2213231f4f",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "26488bfa-df74-4758-8a3e-1ceadb5c6713",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f8d806f8-cd89-4cd9-9367-60418078933d",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "62dadafb-3d1b-48a0-a053-141d6d687b8e",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f1e771cd-58b4-4914-b2c5-d981f7afd920",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "fabcdc3c-bfd8-4e0b-be6f-585083508b15",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "31ce883a-8185-423a-a137-2915b6fa50f9",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endHour\": \"<string>\",\n    \"startHour\": \"<string>\",\n    \"vehicleIds\": \"<string>\",\n    \"vehicleParentTagIds\": \"<string>\",\n    \"vehicleTagIds\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Get information about an existing IFTA detail job.",
                            "id": "6910cd7b-12e5-4b43-a689-350b6517d75a",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "ifta-detail",
                                        "csv",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "fb02382a-1e4d-4254-ac58-6e632d9ec1e1",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the requested job."
                                        }
                                    ]
                                },
                                "description": "Get information about an existing IFTA detail job.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "a0977a91-7d50-4fba-8d79-71056e274790",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"args\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requestedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"completedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"files\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "1dda9925-afb2-4080-885f-7b5ee928e496",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d1891aa1-1286-412f-b7cf-502b537be396",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "50367de9-2675-4a6a-98f1-b50f8c48566d",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4c828f72-4f0e-45d4-b8e9-0c0f978e5066",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1eefe51a-6aa5-4575-ba9b-97abe8f8e7e7",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f2e56d74-fbbf-484b-bc4f-38f94fbd7014",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "adaa60ec-c96a-4ac2-906e-716b8954a499",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e0239dbe-aab5-4413-a80a-739e7ed23c5e",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "301d8728-ef0b-4713-ab3d-d8cf527a796e",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7175b82f-ecbb-45a0-a6c6-0261a0521f9d",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/ifta-detail/csv/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "ifta-detail",
                                                "csv",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "e3e8f1a4-1f90-4df2-b1e4-850506d93244"
                },
                {
                    "name": "industrial/jobs",
                    "item": [
                        {
                            "name": "[beta] Deletes an existing job",
                            "id": "f03e7681-d72b-4b74-bc14-5f90e1b5f957",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/industrial/jobs?id=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "industrial",
                                        "jobs"
                                    ],
                                    "query": [
                                        {
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`, `\"jobId:98765\"`)."
                                        }
                                    ]
                                },
                                "description": "Deletes an existing job\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "c7090786-46ac-4aa5-a488-f3b5920c224c",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"id\": \"<string>\",\n \"uuid\": \"<string>\"\n}"
                                },
                                {
                                    "id": "61fc2388-2277-4ddc-a907-35a161687b16",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1a500f95-c47d-4b1b-8b75-11987aba7691",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "430dba00-6b3c-4983-b638-02d51ca48b39",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "065f0c66-c2d7-44cc-aa48-cac5023352fd",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "60fe453f-a978-420f-bc80-a80266aa2928",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "96f8d7ea-b68a-41a6-99a1-21697bfb94fb",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c54f1f07-a567-41d1-9490-c026060de99e",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b690e5e5-d0ec-4bfb-8515-436a2b0e3c12",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "adc4ac4a-6ba0-4f86-86a6-7bee5bf6b489",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "53282b6d-1f67-435d-8efd-21b2eb9fe693",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Fetches all jobs",
                            "id": "7e631b9a-ca86-4636-97dd-6ee98b85be4a",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/industrial/jobs?id=dolore consequat&startDate=dolore consequat&endDate=dolore consequat&industrialAssetIds=minim et&industrialAssetIds=et minim cillum&fleetDeviceIds=-60751435&fleetDeviceIds=79116550&status=completed&customerName=dolore consequat&after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "industrial",
                                        "jobs"
                                    ],
                                    "query": [
                                        {
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`, `\"jobId:98765\"`)."
                                        },
                                        {
                                            "key": "startDate",
                                            "value": "dolore consequat",
                                            "description": " A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endDate",
                                            "value": "dolore consequat",
                                            "description": " An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "industrialAssetIds",
                                            "value": "minim et",
                                            "description": "IndustrialAssetId in STRING format. (Example: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`)."
                                        },
                                        {
                                            "key": "industrialAssetIds",
                                            "value": "et minim cillum",
                                            "description": "IndustrialAssetId in STRING format. (Example: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`)."
                                        },
                                        {
                                            "key": "fleetDeviceIds",
                                            "value": "-60751435",
                                            "description": "FleetDeviceId in INTEGER format. (Example: `123456`)."
                                        },
                                        {
                                            "key": "fleetDeviceIds",
                                            "value": "79116550",
                                            "description": "FleetDeviceId in INTEGER format. (Example: `123456`)."
                                        },
                                        {
                                            "key": "status",
                                            "value": "completed",
                                            "description": "A job status in STRING format. Job statuses can be one of three (ignores case): `\"active\", \"scheduled\", \"completed\"`  Valid values: `active`, `scheduled`, `completed`"
                                        },
                                        {
                                            "key": "customerName",
                                            "value": "dolore consequat",
                                            "description": "Customer name to filter by"
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Fetches jobs based on id/uuid or provided filters\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "b23a12c0-f8f0-43d3-9bb3-74cd9254272b",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"id\": \"<string>\",\n \"uuid\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2066c2bf-c12f-484d-868f-7de519035cd5",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2db486c4-9e15-47e7-bffb-8ae340d40385",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a8d5a1e8-85f8-405d-bcaf-0b55843775f2",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f4a8c8a8-7cf2-4b8a-9b5a-63d55632a7a3",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "02056907-4a4d-4bca-93dc-cf1fec4d001c",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "54c12e68-6b26-428b-829c-8b70a27c5130",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "582a95c3-7ed0-463a-ae5d-f6ebd35fca22",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "abebcccf-0ea1-4f8c-bec2-1f51375d22c1",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1dc7a88f-43e1-449a-9432-685826aaa746",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "9ac5de0a-9eb8-463b-911a-7bc1d1b2931c",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>&startDate=<string>&endDate=<string>&industrialAssetIds=<string>&industrialAssetIds=<string>&fleetDeviceIds=<integer>&fleetDeviceIds=<integer>&status=<string>&customerName=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "industrialAssetIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "fleetDeviceIds",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "status",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "customerName",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Patches a job",
                            "id": "fd1b7613-c85b-4e85-b7f4-86e145ce3166",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/industrial/jobs?id=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "industrial",
                                        "jobs"
                                    ],
                                    "query": [
                                        {
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\"`, `\"jobId:98765\"`)."
                                        }
                                    ]
                                },
                                "description": "Patches an existing job and returns it\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "0afbcbbf-6922-4280-ae96-bd26c652bd9c",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"address\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modifiedAt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"uuid\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fleetDevices\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"industrialAssets\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"id\": \"<string>\",\n \"uuid\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e2b3b6b7-d5db-4cc1-9b62-9712cf065c5c",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2f89212b-73ad-4e0e-b7f1-54639e5e75fc",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "dfcd1a55-4d33-46b2-ac00-4c573d05cf9e",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ba07ae15-aad3-4b48-809d-f99588f81523",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c52342ce-2fcd-45ea-bb2c-1404972e3f25",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b63799fc-e5c6-4260-a020-c639c404a255",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "9cd6dbbd-c4a9-47ce-972d-6141c17f8f74",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ac763ed7-3a83-4031-9fc9-d6066ab9c461",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c7be67f0-d74e-4b26-9154-7dd50a727aa1",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "25c5df43-b0ac-427a-bf80-1041fe3e9729",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"keepHistory\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs?id=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Create a job",
                            "id": "403bf6e6-96b1-4d86-93cb-cdd08f7e40f2",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/industrial/jobs",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "industrial",
                                        "jobs"
                                    ]
                                },
                                "description": "Creates a new job and returns it\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "9c7672f0-5a84-4a26-b233-90b1d8faea3d",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"address\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modifiedAt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"uuid\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fleetDevices\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"industrialAssets\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"id\": \"<string>\",\n \"uuid\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7cc0a2b0-805e-4c91-811c-061410b7acb2",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1c97c803-340f-4217-ab9f-b0a3fd2bdae7",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "17696df2-2341-4f5e-be5e-c8c8c6d8834d",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f2966a9d-1a45-4e6d-a89c-75857f4beb3f",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "677b17dd-7963-4e8f-9ca4-6bf25887aad2",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cb871fb6-ff75-4190-b737-c407ffdca967",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8b8f7447-2345-43cf-9840-c31f6e9bc39e",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ba30be8b-1f01-474b-9bbb-9664b5fc87ae",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1b9db8f9-540f-47aa-a4d8-d254c48ec52a",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ac553b77-1a72-4108-a07c-c9d63aa5bde5",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"job\": {\n        \"endDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startDate\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customerName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fleetDeviceIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"industrialAssetIds\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"notes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/industrial/jobs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "industrial",
                                                "jobs"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "6dad59d2-400f-4f85-ada8-98be480deb10"
                },
                {
                    "name": "webhooks",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "[beta] Delete a webhook with the given ID",
                                    "id": "7ece0b26-21dc-4365-a76c-86297b26a248",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "9cb08b8d-ba7d-40de-ba0d-8a4330959150",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) Unique identifier for the webhook to delete."
                                                }
                                            ]
                                        },
                                        "description": "Delete a webhook with the given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "01d9d83f-22e7-4ec8-aec6-40bceccbb8ae",
                                            "name": "No Content response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": ""
                                        },
                                        {
                                            "id": "001bd438-bb20-40a6-941d-c60271a413d0",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "d17a4b66-2671-4432-8e02-b2cacb00c5c1",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "1fb5488a-722a-4d6a-aac8-8c14bc19289b",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f9f9b5f4-ed45-4d9d-b44f-0754434b945b",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "de315a6b-96d0-45da-a485-8653fcd02332",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "d2791643-8eae-4283-b2b7-65056020fe5e",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b19e95cd-d82a-498b-bb8f-0b6bbbf4bb37",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "434beb27-9d2f-4cbc-8e02-a7dd008849e2",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "088660ad-7e10-4fc0-bcf8-400fd4b39e28",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6eed95a2-a07b-4869-98be-7694a54513cc",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Retrieve a webhook with given ID",
                                    "id": "653afe94-e036-40b1-bba7-3bc3f5efdd55",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "bca20497-b1f8-45bf-9f43-ec807facc750",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the webhook. This is the Samsara-specified ID."
                                                }
                                            ]
                                        },
                                        "description": "Retrieve a webhook with given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "7d83bfec-0a05-4aa9-8c0d-e34ce93bf2a2",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"id\": \"<string>\",\n \"name\": \"<string>\",\n \"secretKey\": \"<string>\",\n \"url\": \"<string>\",\n \"version\": \"<string>\",\n \"customHeaders\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "4da817b5-cd44-4750-ac85-8ba22ccc8fd1",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "06a3eb1d-e6cb-40e7-a2f8-a196b5a37321",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "291fde6d-9613-4074-a63c-22204102b2ee",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "e6d3046d-d25a-4706-b837-2f966da9014f",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7cd0f9eb-2dc0-4e93-a588-58443bb197c0",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "152cbb0e-5aee-4ab1-afb9-acadfacccb88",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2339afbb-ee15-4fb5-aa21-672ef865158c",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "dffa6156-a040-456b-82a3-112aa7d498b5",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "48242850-cb8a-4c65-9bdb-512da393d3e3",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4228d1d8-4a7a-4a11-8bcb-9f2ea9367e16",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "[beta] Update a specific webhook's information.",
                                    "id": "fe72608d-7f49-4090-b71a-09aaac278596",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"Webhook-123\",\n    \"url\": \"https://www.webhook-123.com/webhook/listener\",\n    \"version\": \"2018-01-01\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "0a4bf1bc-7d65-4ede-b59f-db0ee9680540",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) Unique identifier for the webhook to update."
                                                }
                                            ]
                                        },
                                        "description": "Update a specific webhook's information.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "9d6ec728-1766-46cf-a68e-f828286c11f0",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"id\": \"<string>\",\n \"name\": \"<string>\",\n \"secretKey\": \"<string>\",\n \"url\": \"<string>\",\n \"version\": \"<string>\",\n \"customHeaders\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "e36685fe-d767-4adf-8e2a-40964dd7be18",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ce16daad-daa2-44ee-b0c3-66bba8aa923e",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "1ac54d04-456b-44eb-a831-2697d76c165a",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "e21f88a8-cd65-4db0-bb6e-e785f295eede",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0e7ea96e-8f14-4f19-a9c1-a52fdb04e7a6",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "cf318bd8-7b54-428d-9b5d-474adb608ce8",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "464fdefd-702c-46a5-b03d-04dcabbeac3e",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4c424b4a-6e07-40a4-a301-d4cd187df8c9",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c4a9274e-225a-4ed5-842b-aaf1acb84fa0",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ea3c8f2c-b84b-4bee-9803-30df729be295",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"version\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/beta/webhooks/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "beta",
                                                        "webhooks",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "0a9b7f43-1d8d-4fed-b808-c35a120a9972"
                        },
                        {
                            "name": "[beta] List all webhooks belonging to a specific org.",
                            "id": "e5e0936f-d033-46ee-8b7d-0d64b4ada205",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/webhooks?ids=dolore consequat&limit=512&after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "webhooks"
                                    ],
                                    "query": [
                                        {
                                            "key": "ids",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of webhook IDs. Example: `ids=49412323223,49412329928`"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "512",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "List all webhooks belonging to a specific org.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "fa8e631d-f0e9-47a0-b814-9a4ff4e958c3",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "954f3d88-df6c-4070-9975-d7c48dcf1535",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ff83dd9a-29cc-4dfa-93ae-42150e2213bc",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "bdddf27c-f3d1-450c-ad8a-28f0a8eddc2c",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c3180a55-18d7-4b88-93af-ad0e7ebd053e",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "572af02f-eb8e-41cb-a9aa-9b1f1332ed53",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "287aae79-3018-4133-a6d1-38e67335c994",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "32141d3a-47be-4a9e-bd58-4f26d62ea451",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0f0d1728-ccdd-4a4f-8246-5c7c88cba756",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1a2149ac-9212-46c1-858e-2d29dff5bf71",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "15180d5a-a65f-4d4c-b6da-f9db7404a6a9",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks?ids=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "ids",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "[beta] Create a webhook",
                            "id": "9811d9c1-06d1-4273-8b88-7410b7cce321",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Webhook-123\",\n    \"url\": \"https://www.Webhook-123.com/webhook/listener\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"2021-06-09\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/beta/webhooks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "webhooks"
                                    ]
                                },
                                "description": "Create a webhook\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "4bd1bffd-303a-4c7f-83e2-bbca723e6395",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"id\": \"<string>\",\n \"name\": \"<string>\",\n \"secretKey\": \"<string>\",\n \"url\": \"<string>\",\n \"version\": \"<string>\",\n \"customHeaders\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "effe61ef-cbbd-4b90-b6be-aa07b16f998c",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "03407d2e-8520-45a6-9351-8fe6467af349",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "01973e18-41c2-4f89-acce-2dbec1000dc6",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6bca4a64-5b52-4ca9-8025-49e889c60a27",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "9cfd6f6e-63fe-4dc7-8b2b-cb882633f144",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ef321ffa-c673-46d8-93c5-48c6d8f28433",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4b1ad786-eeb5-48fc-ad63-23007b4cf7ef",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "536190e9-1ab7-467f-834a-d56d753788b4",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5961630a-84d9-41c5-8f43-9e76b0623fb0",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "cd15aa10-158c-4c44-a3b8-cbb25fd9841d",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"customHeaders\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"version\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/beta/webhooks",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "beta",
                                                "webhooks"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "070bdd92-5705-48ff-ad53-d0f797547670"
                },
                {
                    "name": "[beta] Get an AEMP equipment",
                    "id": "168da750-6d12-483e-acec-0f595e48987c",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "beta",
                                "aemp",
                                "fleet",
                                "equipment",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "id": "91cdc598-1aea-4d26-8670-a7598e9c4d32",
                                    "key": "id",
                                    "value": "dolore consequat",
                                    "description": "(Required) The Samsara equipment id or external id. This is automatically generated when the Equipment object is created. It cannot be changed."
                                }
                            ]
                        },
                        "description": "Get an equipment following the AEMP ISO 15143-3 standard.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "521c6802-7e10-4518-bed3-6a719855864f",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"Fleet\": {\n  \"Equipment\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "1bc338b8-92d9-496c-b32d-479c069d7a42",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "9e825335-22f9-472a-a8e2-d11930ed9178",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "4d4a1db4-37ed-484d-b9ce-c0f855d5d459",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "f0f2a7e5-21f2-435c-afbd-c8eac830768f",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "5bf9c1ce-f389-47eb-9dd9-21e3a5458fe0",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "2f90f81b-ce4f-415c-8c96-7b4b1505ae88",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "2123dec4-a69d-46a0-9be6-94765cb21fe6",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "8c0d7d4d-5b65-4c14-9e92-08f4a139ac27",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "7ee32d31-42c7-45c1-9f9e-9b8ea8d9b688",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "efffbd36-c12b-4f64-b171-7065f1a8ed3c",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/beta/aemp/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "beta",
                                        "aemp",
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "bd89e057-cddb-445a-b947-52c0b0998f27"
        },
        {
            "name": "contacts",
            "item": [
                {
                    "name": "{id}",
                    "item": [
                        {
                            "name": "Delete a contact",
                            "id": "c65af1bf-cdd0-4a89-a338-c97d42e9e604",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/contacts/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "c81ba119-22b7-4d4c-97f9-1fa220811b52",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) Unique identifier for the contact."
                                        }
                                    ]
                                },
                                "description": "Delete the given contact. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "c6022c5d-1a2f-42a8-895f-4e42c3412f02",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "e8f6bb70-9708-4fa5-a922-f7eb1f2f0888",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve a contact",
                            "id": "950de2dd-250e-4b20-8a05-5bad0d38b85c",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/contacts/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "20c49b17-1fe0-4621-9fe7-d49389da27a5",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) Unique identifier for the contact."
                                        }
                                    ]
                                },
                                "description": "Get a specific contact's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "36c827a2-cea4-4ccc-88e0-f8c6f5c86105",
                                    "name": "Returns the specified contact.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "7c827340-9c28-4d30-adb9-f2d6f1064e11",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a contact",
                            "id": "c0125474-d4b0-45be-86ee-de843a370148",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"jane.jones@yahoo.com\",\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Jones\",\n    \"phone\": \"111-222-3344\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/contacts/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "0e95d5c6-9d69-4e4f-b8a2-72135fd057ad",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) Unique identifier for the contact."
                                        }
                                    ]
                                },
                                "description": "Update a specific contact's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "1dd97b64-1030-45d1-ba1b-a34c7910e128",
                                    "name": "Updated contact object with given ID.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "c1a9dae0-2f12-446a-979a-17948cbf19bc",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/contacts/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "contacts",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "e117b4b7-8a87-443a-b24f-60bbbbbf6f86"
                },
                {
                    "name": "List all contacts",
                    "id": "0c14ca6a-9d5e-4cdc-854f-4d402fd93c35",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/contacts?limit=446&after=dolore consequat",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "contacts"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "446",
                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                },
                                {
                                    "key": "after",
                                    "value": "dolore consequat",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Returns a list of all contacts in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "6c67e1e1-e65e-4439-b4db-3663beda42ca",
                            "name": "List of all contacts",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/contacts?limit=<integer>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "d4e933e5-33b8-4af6-ac05-09d09a70885c",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/contacts?limit=<integer>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create a contact",
                    "id": "69ef3e70-6fe7-4683-aca9-c1bcfb0c4881",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"jane.jones@yahoo.com\",\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Jones\",\n    \"phone\": \"111-222-3344\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/contacts",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "contacts"
                            ]
                        },
                        "description": "Add a contact to the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "269f2209-3300-425a-a593-f09e661ca95d",
                            "name": "Contact was successfully added.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/contacts",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "5a36564e-61ca-4d2d-8e98-cbf8cbf90b63",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/contacts",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "contacts"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "86232949-8b10-45f6-b847-4b013e10d3c8"
        },
        {
            "name": "fleet",
            "item": [
                {
                    "name": "carrier-proposed-assignments",
                    "item": [
                        {
                            "name": "Retrieve assignments",
                            "id": "876a800b-96be-4289-9512-fb56c5474a62",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments?limit=446&after=dolore consequat&driverIds=minim et,et minim cillum&activeTime=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "carrier-proposed-assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "If specified, limits the results to those for these drivers. e.g. `driverIds=1,2,3`"
                                        },
                                        {
                                            "key": "activeTime",
                                            "value": "dolore consequat",
                                            "description": "If specified, shows assignments that will be active at this time. Defaults to now, which would show current active assignments. In RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        }
                                    ]
                                },
                                "description": "Show the assignments that are active for drivers and that would currently be visible to them in the driver app. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "462990a6-49a6-4226-a11e-784cd5c22132",
                                    "name": "Returns the assignments that drivers would see in the future, if any.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments?limit=<integer>&after=<string>&driverIds=<string>,<string>&activeTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "activeTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "5cca1170-8f2f-43fb-8551-5d05a99034fd",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments?limit=<integer>&after=<string>&driverIds=<string>,<string>&activeTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "activeTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create an assignment",
                            "id": "f0b6d927-1457-48f0-aa26-4cc895cd3861",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"driverId\": \"42\",\n    \"vehicleId\": \"123\",\n    \"activeTime\": \"2020-01-27T07:06:25Z\",\n    \"shippingDocs\": \"Delivery 123, chips and soda\",\n    \"trailerNames\": [\n        \"Trailer123\",\n        \"TrailerABC\"\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "carrier-proposed-assignments"
                                    ]
                                },
                                "description": "Creates a new assignment that a driver can later use. Each driver can only have one future assignment. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "9a1a539a-f28f-4333-b2ca-6e87183b0eeb",
                                    "name": "Return the created assignment",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverId\": \"<string>\",\n    \"vehicleId\": \"<string>\",\n    \"activeTime\": \"<string>\",\n    \"shippingDocs\": \"<string>\",\n    \"trailerNames\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"activeTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"acceptedTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstSeenTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"rejectedTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shippingDocs\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailers\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "5fa1a813-1b3b-4e3b-a7e7-d617102d1438",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverId\": \"<string>\",\n    \"vehicleId\": \"<string>\",\n    \"activeTime\": \"<string>\",\n    \"shippingDocs\": \"<string>\",\n    \"trailerNames\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Delete an assignment",
                            "id": "a0edbbab-b3a2-46da-8bf0-e32f2189941a",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "carrier-proposed-assignments",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "4506d3e0-9aee-48be-8bc0-2abe4981f21f",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the assignment."
                                        }
                                    ]
                                },
                                "description": "Permanently delete an assignment. You can only delete assignments that are not yet active. To override a currently active assignment, create a new empty one, instead. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "67652b7a-4905-4562-92ed-9a3675fea7d2",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "930e552b-3846-4f8e-bcfe-4068ea718bd3",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/carrier-proposed-assignments/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "carrier-proposed-assignments",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "7d7ad442-3197-4f1e-b5d0-82b47f227a2d"
                },
                {
                    "name": "defects",
                    "item": [
                        {
                            "name": "Get all defects",
                            "id": "07bf8175-0ff6-4512-9fb5-b725b6909799",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/defects/history?limit=446&after=dolore consequat&startTime=dolore consequat&endTime=dolore consequat&isResolved=false",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "defects",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). *The maximum time period you can query for is 30 days.*"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). *The maximum time period you can query for is 30 days.*"
                                        },
                                        {
                                            "key": "isResolved",
                                            "value": "false",
                                            "description": "A filter on the data based on resolution status. Example: `isResolved=true`"
                                        }
                                    ]
                                },
                                "description": "Returns a list of DVIR defects in an organization, filtered by creation time. The maximum time period you can query for is 30 days. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "8ca4d3cb-3838-4143-b98e-a4f0572e2946",
                                    "name": "List of all DVIR defects in the organization",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/defects/history?limit=<integer>&after=<string>&startTime=<string>&endTime=<string>&isResolved=<boolean>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "defects",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "isResolved",
                                                    "value": "<boolean>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "b14f0e5d-ab2e-4a1a-b551-a53b2c41bae3",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/defects/history?limit=<integer>&after=<string>&startTime=<string>&endTime=<string>&isResolved=<boolean>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "defects",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "isResolved",
                                                    "value": "<boolean>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a defect",
                            "id": "1fb5627d-872a-4673-8592-5e7e60f62ab8",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"isResolved\": true,\n    \"mechanicNotes\": \"Extremely large oddly shaped hole in passenger side window.\",\n    \"resolvedAtTime\": \"2020-01-27T07:06:25Z\",\n    \"resolvedBy\": {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/defects/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "defects",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "c1ca45cf-beca-43dd-832a-ef13411fc6e8",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the defect."
                                        }
                                    ]
                                },
                                "description": "Updates a given defect. Can be used to resolve a defect by marking its `isResolved` field to `true`. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "7b4deb19-8468-4113-a008-1b0bafd6c642",
                                    "name": "Return the modified defect entity",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"resolvedAtTime\": \"<string>\",\n    \"resolvedBy\": {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/defects/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "defects",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isResolved\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defectType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mechanicNotes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mechanicNotesUpdatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resolvedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resolvedBy\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailer\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "af815e10-3ff5-469a-92c3-6b637abe5004",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"resolvedAtTime\": \"<string>\",\n    \"resolvedBy\": {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/defects/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "defects",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "9eebc29a-f79f-4c7e-b61c-21aa065ee3e6"
                },
                {
                    "name": "documents",
                    "item": [
                        {
                            "name": "pdfs",
                            "item": [
                                {
                                    "name": "Create a document PDF",
                                    "id": "719e98b3-555b-4af8-a1f8-7faa2697c496",
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentId\": \"6c8c0c01-206a-41a4-9d21-15b9978d04cb\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents/pdfs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents",
                                                "pdfs"
                                            ]
                                        },
                                        "description": "Request creation of a document PDF. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "3437583c-64d5-44a8-b30e-e0c347676647",
                                            "name": "Newly created PDF generation job.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"documentId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/pdfs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        "pdfs"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"documentId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "8464529b-aaa6-4d05-b0b2-d785542a6f74",
                                            "name": "Error response.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"documentId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/pdfs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        "pdfs"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Query a document PDF",
                                    "id": "cd3e63c4-f696-4b26-840f-e0127c6d8604",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents/pdfs/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents",
                                                "pdfs",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "3293e4da-9afb-44fe-8f21-4cc23ac0f092",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the pdf."
                                                }
                                            ]
                                        },
                                        "description": "Returns generation job status and download URL for a PDF. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "398443c3-cef2-419a-a69a-000419ab8eb5",
                                            "name": "Document PDF job status and download URL.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/pdfs/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        "pdfs",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"completedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"documentId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"downloadDocumentPdfUrl\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requestedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "e47975e2-f899-4805-b4d3-43642c218654",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/pdfs/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        "pdfs",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "34a445f4-79f6-45e7-807c-87ef6b57864a"
                        },
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Delete document",
                                    "id": "4df7a82b-ca8e-4fcf-bdfd-b45eb5949d59",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "25751bb0-21e7-4cbe-90bd-38c792d98022",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the document to delete"
                                                }
                                            ]
                                        },
                                        "description": "Deletes a single document. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/deleteDriverDocumentByIdAndDriverId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "cdff58d1-b0e4-4cf5-8013-c6cfe4376734",
                                            "name": "No Content response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": ""
                                        },
                                        {
                                            "id": "8c205cae-fc47-4357-ba71-2c7c695bb0d1",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8a0b1a61-fbd2-4113-b0bc-dfee476b92e7",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "bfe15002-64f7-454e-a802-1dc701962d99",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4f6d548b-f0f3-4dfb-9c40-e5e0a95bb7f6",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "5deae953-188a-4cfc-87f1-4479c38876b6",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "54b46e83-832a-4b4d-bb5b-15e25705ab27",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "39c91f48-65d2-4d70-9182-96a9ec67b32c",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4daa0f50-c0f0-4171-8ca9-ba3b6a5647ff",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2801aef0-fe77-4554-b857-2fb3057d49c9",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "1f3eb8e8-af8c-4e06-bba2-c36ecb483a8d",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Fetch document",
                                    "id": "efcb14a1-ddfe-48c6-915b-9cc9260d4b4c",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "239c7044-6969-4a65-b806-1b68af060186",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the document"
                                                }
                                            ]
                                        },
                                        "description": "Returns a single document. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDriverDocumentByIdAndDriverId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "b9fa8663-da0a-4c75-8116-1ef2057708f2",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"documentType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fields\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"state\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conditionalFieldSections\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"routeStop\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "2b5caf77-4414-40de-8c80-761cdcfd8f7b",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "390e37f9-499a-48cd-862b-059a23a38320",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b0c0e485-1878-44b3-9880-2b51eb905331",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6e505cf8-a1a3-46aa-a5ca-6cffc0f631f3",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "67bf7a3e-ae76-4635-b6d4-fdab951a6ca3",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "48f9036c-b125-4849-93f5-e5c6d253b24d",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "77272cec-ebb3-4933-959a-d76449d0cc05",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a07c9a4c-e628-470a-a466-0050834a6fb1",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6e918c4e-c5eb-4333-aeb3-9037581c9c11",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "269d94ce-5a0b-458f-9561-21911b4b9b88",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/documents/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "documents",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "4dd7e5fa-a9f3-4af7-8180-b5f05cd4e886"
                        },
                        {
                            "name": "Fetch all documents",
                            "id": "4834caf3-2ecb-404a-bce0-d5d7325c3f2e",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/documents?startTime=dolore consequat&endTime=dolore consequat&after=dolore consequat&documentTypeId=dolore consequat&queryBy=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "documents"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "documentTypeId",
                                            "value": "dolore consequat",
                                            "description": "ID of the document template type."
                                        },
                                        {
                                            "key": "queryBy",
                                            "value": "dolore consequat",
                                            "description": "Query by document creation time (`created`) or updated time (`updated`). Defaults to `created`."
                                        }
                                    ]
                                },
                                "description": "Get all documents for the given time range. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDriverDocumentsByOrgId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "717cc242-00e5-4da7-aa0a-a1612940fcd5",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "c721c52e-ebbd-4feb-966d-8a11fe6da1f6",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "fe67029b-4df7-426c-ad64-07adff953941",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "77c4d252-01c9-4927-9662-59bc2ab54f65",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "dd8f3643-cbca-42bb-827b-d4858e4fc2e1",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d0ce8a74-c55e-4736-98f4-1cf8263082b0",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2bda369e-a25f-4661-b8b9-07d50bffac63",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0256492f-d22b-4ed0-8525-76816163379c",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c77e04cf-8b04-4c7b-9b6e-d673d0b238fa",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ba30aaf5-e430-47f5-a3c3-260c28c76e79",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "74d57d10-4a37-43c3-911c-5be3b0b4b7e6",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents?startTime=<string>&endTime=<string>&after=<string>&documentTypeId=<string>&queryBy=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "documentTypeId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "queryBy",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create document",
                            "id": "b45b3346-047b-40ef-b334-5d76d8a65fe2",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"documentTypeId\": \"9814a1fa-f0c6-408b-bf85-51dc3bc71ac7\",\n    \"driverId\": \"45646\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"Dropoff Slip 123\",\n    \"notes\": \"Missing a crate\",\n    \"routeStopId\": \"45646\",\n    \"state\": \"submitted\",\n    \"vehicleId\": \"45646\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/documents",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "documents"
                                    ]
                                },
                                "description": "Creates a single document. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDriverDocument).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "939d7857-40f0-4737-8a84-537005a1c85c",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"documentType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fields\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"state\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conditionalFieldSections\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"routeStop\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "214ee334-cd7f-4767-b9be-645200dc9058",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "df95eadb-0dc9-4c24-ad0a-61556e7f0d3a",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e2c8e30e-9cb1-4616-b34e-ebfa462c56f4",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "8071e85d-5a1a-4c44-bbe3-a4cbce73e20c",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "18fbeacf-5afc-493d-a989-2113e948fc8a",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d7a328c2-9ce9-47ef-9af9-d0bc2d8aa7b6",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "443c2157-fb21-4200-8511-01a20bca161e",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f01e34f7-fb28-47a1-b1a8-6d10be609d6d",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "07c02e85-02dd-43a1-a4d1-fdb8b60451e5",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4b969960-3897-4c61-bdd4-de6f3db1d6d8",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"documentTypeId\": \"<string>\",\n    \"driverId\": \"<string>\",\n    \"fields\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"routeStopId\": \"<string>\",\n    \"state\": \"required\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/documents",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "documents"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "8edea91d-44a5-4f35-a54f-4250c6632005"
                },
                {
                    "name": "drivers",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Retrieve a driver",
                                    "id": "e2b64c42-9a28-45d9-a757-f8f1dd9679ff",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "3811bbc0-0d8e-4134-9caa-ba8475b32ac8",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the driver. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                                }
                                            ]
                                        },
                                        "description": "Get information about a driver. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "a6d9e269-5374-4b07-b803-6e6e2bcec0d7",
                                            "name": "Returns the specified driver.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/drivers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "drivers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentIdCardCode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverActivationStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldAdverseWeatherExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldBigDayExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldDayStartHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExempt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExemptReason\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldPcEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldYmEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDeactivated\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseState\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locale\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedVehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tachographCardNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"usDriverRulesetOverride\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"username\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleGroupTag\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "101fc93b-8083-4fde-a94d-52303eac8213",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/drivers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "drivers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update a driver",
                                    "id": "792bbc52-dfb9-4b8d-9e4a-f7ab7ea58907",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"941767043\",\n    \"deactivatedAtTime\": \"2019-05-18T20:27:35Z\",\n    \"driverActivationStatus\": \"active\",\n    \"eldAdverseWeatherExemptionEnabled\": true,\n    \"eldBigDayExemptionEnabled\": true,\n    \"eldDayStartHour\": 72789204,\n    \"eldExempt\": true,\n    \"eldExemptReason\": \"Bad driver\",\n    \"eldPcEnabled\": true,\n    \"eldYmEnabled\": false,\n    \"externalIds\": {\n        \"maintenanceId\": \"250020\",\n        \"payrollId\": \"ABFS18600\"\n    },\n    \"licenseNumber\": \"E1234567\",\n    \"licenseState\": \"CA\",\n    \"locale\": \"ca\",\n    \"name\": \"Susan Jones\",\n    \"notes\": \"Also goes by the nickname Furious Fred.\",\n    \"password\": \"aSecurePassword1234\",\n    \"phone\": \"5558234327\",\n    \"staticAssignedVehicleId\": \"456\",\n    \"tachographCardNumber\": \"1000000492436002\",\n    \"tagIds\": [\n        \"147\",\n        \"147\"\n    ],\n    \"timezone\": \"America/Los_Angeles\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"username\": \"SusanJones\",\n    \"vehicleGroupTagId\": \"342417\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "3298f1b1-15bd-47af-84b4-35283f319754",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the driver. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                                }
                                            ]
                                        },
                                        "description": "Update a specific driver's information. This can also be used to activate or de-activate a given driver by setting the driverActivationStatus field. If the driverActivationStatus field is 'deactivated' then the user can also specify the deactivatedAtTime. The deactivatedAtTime cannot be more than 6 months in the past and must not come before the dirver's latest active HOS log. It will be considered an error if deactivatedAtTime is provided with a driverActivationStatus of active. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "5a451456-7146-496f-b287-5539d284b191",
                                            "name": "Updated driver object, with ID.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"deactivatedAtTime\": \"<string>\",\n    \"driverActivationStatus\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"username\": \"<string>\",\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/drivers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "drivers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentIdCardCode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverActivationStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldAdverseWeatherExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldBigDayExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldDayStartHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExempt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExemptReason\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldPcEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldYmEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDeactivated\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseState\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locale\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedVehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tachographCardNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"usDriverRulesetOverride\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"username\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleGroupTag\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "57ad4b72-fff2-4778-bdbf-c7bab9364c68",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"deactivatedAtTime\": \"<string>\",\n    \"driverActivationStatus\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"username\": \"<string>\",\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/drivers/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "drivers",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "bde43a77-5fa1-4c3d-9e43-7e4edcdec15b"
                        },
                        {
                            "name": "List all drivers",
                            "id": "75dba06e-2506-4f33-a3e3-9c5521ace3c3",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers?driverActivationStatus=active&limit=446&after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&updatedAfterTime=dolore consequat&createdAfterTime=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverActivationStatus",
                                            "value": "active",
                                            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers)."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "updatedAfterTime",
                                            "value": "dolore consequat",
                                            "description": "A filter on data to have an updated at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "createdAfterTime",
                                            "value": "dolore consequat",
                                            "description": "A filter on data to have a created at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        }
                                    ]
                                },
                                "description": "Get all drivers in organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "cc1498cb-270d-4e1a-ac4c-5bd56111780c",
                                    "name": "List of all driver objects.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers?driverActivationStatus=<string>&limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&updatedAfterTime=<string>&createdAfterTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "updatedAfterTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "createdAfterTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "b8d5b146-e5e7-4dee-970d-0871e0536fac",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers?driverActivationStatus=<string>&limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&updatedAfterTime=<string>&createdAfterTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "updatedAfterTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "createdAfterTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create a driver",
                            "id": "52360915-26ad-4f56-8cf3-c773ba0b3cf3",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Susan Jones\",\n    \"password\": \"aSecurePassword1234\",\n    \"username\": \"SusanJones\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"941767043\",\n    \"eldAdverseWeatherExemptionEnabled\": true,\n    \"eldBigDayExemptionEnabled\": false,\n    \"eldDayStartHour\": 75861572,\n    \"eldExempt\": false,\n    \"eldExemptReason\": \"Bad driver\",\n    \"eldPcEnabled\": true,\n    \"eldYmEnabled\": true,\n    \"externalIds\": {\n        \"maintenanceId\": \"250020\",\n        \"payrollId\": \"ABFS18600\"\n    },\n    \"licenseNumber\": \"E1234567\",\n    \"licenseState\": \"CA\",\n    \"locale\": \"pr\",\n    \"notes\": \"Also goes by the nickname Furious Fred.\",\n    \"phone\": \"5558234327\",\n    \"staticAssignedVehicleId\": \"456\",\n    \"tachographCardNumber\": \"1000000492436002\",\n    \"tagIds\": [\n        \"147\",\n        \"147\"\n    ],\n    \"timezone\": \"America/Los_Angeles\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleGroupTagId\": \"342417\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers"
                                    ]
                                },
                                "description": "Add a driver to the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "e98b5155-8c13-4d2a-b34e-c500cbfb3d8e",
                                    "name": "Newly created driver object, with Samsara-generated ID.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentIdCardCode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverActivationStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldAdverseWeatherExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldBigDayExemptionEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldDayStartHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExempt\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldExemptReason\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldPcEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eldYmEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDeactivated\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licenseState\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locale\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedVehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tachographCardNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updatedAtTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"usDriverRulesetOverride\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"username\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleGroupTag\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "8b5327bd-90a5-45fd-81c8-8e20bd75f98d",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\",\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"carrierSettings\": {\n        \"carrierName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dotNumber\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"homeTerminalName\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mainOfficeAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"currentIdCardCode\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tachographCardNumber\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"usDriverRulesetOverride\": {\n        \"cycle\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restart\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"restbreak\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usStateToOverride\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleGroupTagId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get driver tachograph activity",
                            "id": "15d632c6-789e-44d8-8f66-9691f21ad04d",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers/tachograph-activity/history?after=dolore consequat&startTime=dolore consequat&endTime=dolore consequat&driverIds=minim et,et minim cillum&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers",
                                        "tachograph-activity",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) An end time in RFC 3339 format. It can't be more than 30 days past startTime. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns all known tachograph activity for all specified drivers in the time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "5d7aecd9-1681-4ed6-8194-2140cabb6dd6",
                                    "name": "List of all driver tachograph activities in a specified time range.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/tachograph-activity/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "tachograph-activity",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "092700e4-403c-4941-b2dd-c3a2e79130be",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/tachograph-activity/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "tachograph-activity",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get tachograph driver files",
                            "id": "02db78f1-5bf5-4793-a3b7-7b930ca7306c",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers/tachograph-files/history?after=dolore consequat&startTime=dolore consequat&endTime=dolore consequat&driverIds=minim et,et minim cillum&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers",
                                        "tachograph-files",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns all known tachograph files for all specified drivers in the time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "c152e339-03a2-43af-8843-c8568e372e4c",
                                    "name": "List of all driver tachograph files in a specified time range.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "tachograph-files",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "1466fe59-9c4f-48f7-a0df-8c256847ae13",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&driverIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "tachograph-files",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all vehicles assigned to a set of drivers",
                            "id": "afaa633b-aa59-419f-810b-317e36345799",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=minim et,et minim cillum&startTime=dolore consequat&endTime=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&driverActivationStatus=active&after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "drivers",
                                        "vehicle-assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverIds",
                                            "value": "minim et,et minim cillum",
                                            "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of driver tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of driver parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "driverActivationStatus",
                                            "value": "active",
                                            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get all vehicle assignments for the requested drivers in the requested time range. The only type of assignment supported right now are assignments created through the driver app.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "8efc264b-f51d-4f9d-8e2c-011414d1f2e9",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "4de67bf7-706f-44be-8157-82d3260cef26",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "31def16e-eb57-4669-bd73-4bf8da398132",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b6f545e7-78e0-4e77-ae04-5852f78cd094",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "81fc94b4-ea6d-4392-b11b-6f128f957bd7",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "64e5fd90-1314-4846-8dc4-36b4aa30ac88",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1a2f55a4-3e93-48c2-8b80-f7e4e97cf502",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e40c7f31-f69f-443b-b9d4-84a5f12eb064",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c3357b7c-c250-4c0c-9b88-a40a4b862117",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "7a8230e1-b29f-4857-8d25-8e6b8d7610c6",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f2e2b1b3-e811-4e5d-9d11-f4174df85566",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/drivers/vehicle-assignments?driverIds=<string>,<string>&startTime=<string>&endTime=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "drivers",
                                                "vehicle-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "57e9c91c-a970-4514-b052-5d2e7e7173a9"
                },
                {
                    "name": "dvirs",
                    "item": [
                        {
                            "name": "Create a mechanic DVIR",
                            "id": "345c1cb0-1965-4b3f-9ebb-520730e9a5b5",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authorId\": \"11\",\n    \"safetyStatus\": \"safe\",\n    \"type\": \"mechanic\",\n    \"licensePlate\": \"XHK1234\",\n    \"location\": \"350 Rhode Island St Ste. 400S, San Francisco, CA 94103\",\n    \"mechanicNotes\": \"Replaced headlight on passenger side.\",\n    \"odometerMeters\": 14010293,\n    \"resolvedDefectIds\": [\n        \"commodo nisi\",\n        \"qui Excepteur veniam\"\n    ],\n    \"trailerId\": \"11\",\n    \"vehicleId\": \"10\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/dvirs",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "dvirs"
                                    ]
                                },
                                "description": "Creates a new mechanic DVIR in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "748912ba-6678-44ae-9a91-c02d6aa263b8",
                                    "name": "Newly created DVIR.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authorId\": \"<string>\",\n    \"safetyStatus\": \"<string>\",\n    \"type\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"location\": \"<string>\",\n    \"mechanicNotes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"resolvedDefectIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerId\": \"<string>\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"authorSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mechanicNotes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"odometerMeters\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"safetyStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"secondSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"thirdSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailer\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerDefects\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleDefects\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "bf5ab586-2f9f-4bd3-be2e-6ea5d52de815",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authorId\": \"<string>\",\n    \"safetyStatus\": \"<string>\",\n    \"type\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"location\": \"<string>\",\n    \"mechanicNotes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"resolvedDefectIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"trailerId\": \"<string>\",\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all DVIRs",
                            "id": "4d37372d-942d-49f1-b9ee-20c9e811749d",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/dvirs/history?limit=446&after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&startTime=dolore consequat&endTime=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "dvirs",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        }
                                    ]
                                },
                                "description": "Returns a list of all DVIRs in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "43ae36b7-56b6-4c5f-92a2-b83a474eff05",
                                    "name": "List of all DVIRs in the organization",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs/history?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&startTime=<string>&endTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"authorSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"endTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"licensePlate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"location\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"mechanicNotes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"odometerMeters\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"safetyStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"secondSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"startTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"thirdSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailerDefects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailerName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"vehicle\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"vehicleDefects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"authorSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"endTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"licensePlate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"location\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"mechanicNotes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"odometerMeters\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"safetyStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"secondSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"startTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"thirdSignature\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailerDefects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trailerName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"vehicle\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"vehicleDefects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "5f9b2f08-8551-4942-b3bf-7410c4f6d87f",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs/history?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&startTime=<string>&endTime=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Resolve a DVIR",
                            "id": "12ba2abd-bcf9-419f-b210-704613997b0e",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authorId\": \"11\",\n    \"isResolved\": true,\n    \"mechanicNotes\": \"Replaced headlight on passenger side.\",\n    \"signedAtTime\": \"2020-01-27T07:06:25Z\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/dvirs/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "dvirs",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "8c99aec4-6832-43f6-b0f7-39cb8bf65527",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the DVIR."
                                        }
                                    ]
                                },
                                "description": "Resolves a given DVIR by marking its `isResolved` field to `true`. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "6616b942-5318-4bbd-9942-304ce482aa84",
                                    "name": "Updated dvir object with ID.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authorId\": \"<string>\",\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"signedAtTime\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"authorSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mechanicNotes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"odometerMeters\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"safetyStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"secondSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"thirdSignature\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailer\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerDefects\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleDefects\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "50c8cdba-b253-421a-842c-f473996d1192",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authorId\": \"<string>\",\n    \"isResolved\": \"<boolean>\",\n    \"mechanicNotes\": \"<string>\",\n    \"signedAtTime\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/dvirs/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "dvirs",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "67285ae8-2a5b-4838-bf0b-4f00cadd8be4"
                },
                {
                    "name": "equipment",
                    "item": [
                        {
                            "name": "locations",
                            "item": [
                                {
                                    "name": "Get most recent locations for all equipment",
                                    "id": "daec8669-678f-4c15-a83a-21fcb472f38b",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/locations?after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&equipmentIds=minim et,et minim cillum",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "locations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "Returns last known locations for all equipment. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "9726b309-fa76-4f90-b12e-99f1915eb1f6",
                                            "name": "The most recent equipment locations and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "963a464f-d2ed-4936-822b-71814771afd6",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Follow feed of equipment locations",
                                    "id": "bad6ed75-d4d4-447e-86d2-0ce15720e393",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/locations/feed?after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&equipmentIds=minim et,et minim cillum",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "locations",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "Follow a continuous feed of all equipment locations from Samsara AG26s.\n\nYour first call to this endpoint will provide you with the most recent location for each unit of equipment and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment location updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. We'd suggest waiting a minimum of 5 seconds before requesting updates. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "abcf62ef-dc6c-40b3-b841-7d1feaa95e2e",
                                            "name": "The feed of equipment locations and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "1e013fdd-0e4c-48fb-a9d0-0f076b0efed8",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Get historical equipment locations",
                                    "id": "4e986524-ac80-4096-96a4-5d89727fd791",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/locations/history?after=dolore consequat&startTime=dolore consequat&endTime=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&equipmentIds=minim et,et minim cillum",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "locations",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "Returns historical equipment locations during the given time range. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "b36e9b27-ca71-4b56-b985-12a9fc94495d",
                                            "name": "Historical equipment locations and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "9e0900e7-5f2b-4214-869f-05eb4dae61fb",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "locations",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "e8f624a7-aa93-447f-9ff5-b2f0833af87c"
                        },
                        {
                            "name": "stats",
                            "item": [
                                {
                                    "name": "Get most recent stats for all equipment",
                                    "id": "5518ec3d-d21d-45b7-8f5b-a751642ac354",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/stats?after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&equipmentIds=minim et,et minim cillum&types=obdEngineSeconds,gatewayJ1939EngineSeconds",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "stats"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "obdEngineSeconds,gatewayJ1939EngineSeconds",
                                                    "description": "(Required) The types of equipment stats you want to query. Currently, you may submit up to 3 types.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG26 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG26 was activated, and a manual odometer offset provided in the Samsara cloud dashboard. Valid values: `Off`, `On`."
                                                }
                                            ]
                                        },
                                        "description": "Returns the last known stats for all equipment. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "0b95066a-1522-46ee-9beb-358da71d99ab",
                                            "name": "The most recent equipment stats and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "b1565771-899c-44ed-9afe-3f8d8d0c916f",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Follow a feed of equipment stats",
                                    "id": "9e84fffa-8c24-497f-996f-c601257fe17e",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/stats/feed?after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&equipmentIds=minim et,et minim cillum&types=obdEngineSeconds,gatewayJ1939EngineSeconds",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "stats",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "obdEngineSeconds,gatewayJ1939EngineSeconds",
                                                    "description": "(Required) The types of equipment stats you want to query. Currently, you may submit up to 3 types.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG26 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG26 was activated, and a manual odometer offset provided in the Samsara cloud dashboard. Valid values: `Off`, `On`."
                                                }
                                            ]
                                        },
                                        "description": "Follow a continuous feed of all equipment stats from Samsara AG26s.\n\nYour first call to this endpoint will provide you with the most recent stats for each unit of equipment and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment stats updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. Each stat type has a different refresh rate, but in general we'd suggest waiting a minimum of 5 seconds before requesting updates. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "a68d37d6-bffc-4386-aa6e-79b6e6ef7fde",
                                            "name": "The feed of equipment stats and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "e3bfdcb9-f822-4d87-aed2-65935392b71c",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Get historical equipment stats",
                                    "id": "d70da081-1529-40ba-bd78-21faf273bd1d",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/stats/history?after=dolore consequat&startTime=dolore consequat&endTime=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&equipmentIds=minim et,et minim cillum&types=obdEngineSeconds,gatewayJ1939EngineSeconds",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                "stats",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "equipmentIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "obdEngineSeconds,gatewayJ1939EngineSeconds",
                                                    "description": "(Required) The types of equipment stats you want to query. Currently, you may submit up to 3 types.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG26 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG26 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG26 was activated, and a manual odometer offset provided in the Samsara cloud dashboard. Valid values: `Off`, `On`."
                                                }
                                            ]
                                        },
                                        "description": "Returns historical equipment status during the given time range. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "24ac240d-f497-48fa-88c7-ecf28c3b32dc",
                                            "name": "Historical equipment stats and pagination information",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "6464dc24-4e82-4b98-bc19-974673a5562a",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/equipment/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&equipmentIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "equipment",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "equipmentIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "bdb3239d-74b6-486e-b04d-b4178c14959b"
                        },
                        {
                            "name": "List all equipment",
                            "id": "40181146-fa22-4568-9762-39ded0c33872",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/equipment?limit=446&after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "equipment"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns a list of all equipment in an organization. Equipment objects represent powered assets connected to a [Samsara AG26](https://www.samsara.com/products/models/ag26) via an APWR, CAT, or J1939 cable. They are automatically created with a unique Samsara Equipment ID whenever an AG26 is activated in your organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "7abcd8a1-39e7-40ca-b72c-a75b4c2e0899",
                                    "name": "List of all equipment objects, and pagination information",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "14dcc019-f4cf-4c45-bb87-d309a97c91a0",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve a unit of equipment",
                            "id": "61319758-9afd-4187-a528-6c8ad4377294",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/equipment/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "equipment",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "c4f2400e-82cc-47e6-82db-022757490013",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) Samsara ID of the Equipment."
                                        }
                                    ]
                                },
                                "description": "Retrieves the unit of equipment with the given Samsara ID. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "ba3bae24-0257-491b-9f05-761b2a006a72",
                                    "name": "The specified equipment object",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"assetSerial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installedGateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "91a4198f-6eab-4c6a-a13d-596e9f6597d6",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/equipment/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "equipment",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "2020d4c8-f1a6-4c04-9b75-d57021829577"
                },
                {
                    "name": "hos",
                    "item": [
                        {
                            "name": "Get HOS clocks",
                            "id": "6b43f523-9d77-4f9f-9798-95f1bd501e5b",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/hos/clocks?tagIds=minim et,et minim cillum&parentTagIds=minim et,et minim cillum&driverIds=minim et,et minim cillum&after=dolore consequat&limit=446",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "hos",
                                        "clocks"
                                    ],
                                    "query": [
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        }
                                    ]
                                },
                                "description": "Get the current HOS status for all drivers. Note that this includes inactive as well as active drivers. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogsSummary). \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "761cc75d-3217-4529-87f1-178dbec5cf76",
                                    "name": "List of current HOS clock information for the specified drivers.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/clocks?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&after=<string>&limit=<integer>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "clocks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "98dd068d-3d2a-4598-965d-8f188197aa32",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/clocks?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&after=<string>&limit=<integer>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "clocks"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all driver HOS daily logs",
                            "id": "2389b7d9-4b43-4461-ba4e-a6139d825ce2",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=minim et,et minim cillum&startDate=dolore consequat&endDate=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&driverActivationStatus=active&after=dolore consequat&expand=vehicle",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "hos",
                                        "daily-logs"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverIds",
                                            "value": "minim et,et minim cillum",
                                            "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                        },
                                        {
                                            "key": "startDate",
                                            "value": "dolore consequat",
                                            "description": " A start date in RFC 3339 format. This is a date only without an associated time. Example: `2019-06-13`"
                                        },
                                        {
                                            "key": "endDate",
                                            "value": "dolore consequat",
                                            "description": " An end date in RFC 3339 format. This is a date only without an associated time. Must be greater than or equal to the start date. Example: `2019-07-21`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "driverActivationStatus",
                                            "value": "active",
                                            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "expand",
                                            "value": "vehicle",
                                            "description": "Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.\n\nValid value: `vehicle`  Valid values: `vehicle`"
                                        }
                                    ]
                                },
                                "description": "Get summarized daily Hours of Service charts for the specified drivers.\n\nThe time range for a log is defined by the `driver`'s `eldDayStartHour`. This value is configurable per driver.\n\nThe `startDate` and `endDate` parameters indicate the date range you'd like to retrieve daily logs for. A daily log will be returned if its `startTime` is on any of the days within in this date range (inclusive of `startDate` and `endDate`).\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.\n\nIf you are using the legacy version of this endpoint and looking for its documentation, you can find it [here](https://www.samsara.com/api-legacy#operation/getFleetDriversHosDailyLogs).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "1eb8df81-d16b-44fd-a0a4-a1d7b4f5df29",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "d13c7021-f972-4c58-a3ee-4381266295b3",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "bb479efe-1e8d-41da-ad49-fcc9703e1938",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5ecd7ebd-eaeb-4263-a6a9-37ac2f7eb06f",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3b4cd581-da82-4725-9a11-1412b4d76025",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "626735cc-a260-43c2-8a00-ba86148020c0",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b326c83f-ec79-407b-a7f6-6548e7f3dda9",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e4a794a6-8c9a-4e2c-a5a3-332a1b86f458",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "4bc06671-e0e5-4d54-a77a-ce693c1a9654",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0e43c086-ec57-4c87-bbf4-9dee2c977858",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e9462033-962a-4086-95c9-9583ece58b8c",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/daily-logs?driverIds=<string>,<string>&startDate=<string>&endDate=<string>&tagIds=<string>&parentTagIds=<string>&driverActivationStatus=active&after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "daily-logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endDate",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "driverActivationStatus",
                                                    "value": "active"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get HOS logs",
                            "id": "d5746210-9ed3-4b18-8be7-3732b7702343",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/hos/logs?tagIds=minim et,et minim cillum&parentTagIds=minim et,et minim cillum&driverIds=minim et,et minim cillum&startTime=dolore consequat&endTime=dolore consequat&after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "hos",
                                        "logs"
                                    ],
                                    "query": [
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": "A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": "An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Returns HOS logs between a given `startTime` and `endTime`. The logs can be further filtered using tags or by providing a list of driver IDs (including external IDs). The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogs).\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "fcd6bce5-9f12-448a-88bf-63f3b72bc55b",
                                    "name": "List of the last known HOS log entries for the specified drivers.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/logs?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&startTime=<string>&endTime=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "cde9c964-50d4-48f7-ad97-166a040fff5a",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/hos/logs?tagIds=<string>,<string>&parentTagIds=<string>,<string>&driverIds=<string>,<string>&startTime=<string>&endTime=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "hos",
                                                "logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "driverIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "3ca064e5-a470-458b-997d-e64a3a061c95"
                },
                {
                    "name": "reports/ifta",
                    "item": [
                        {
                            "name": "Get IFTA jurisdiction reports.",
                            "id": "f33bf060-8c01-4b48-a3ec-4484fa1a8839",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=2045&month=August&quarter=Q1&jurisdictions=dolore consequat&fuelType=M85&vehicleIds=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "reports",
                                        "ifta",
                                        "jurisdiction"
                                    ],
                                    "query": [
                                        {
                                            "key": "year",
                                            "value": "2045",
                                            "description": "(Required)  The year of the requested IFTA report summary. Must be provided with a month or quarter param. Example: `year=2021`"
                                        },
                                        {
                                            "key": "month",
                                            "value": "August",
                                            "description": " The month of the requested IFTA report summary. Can not be provided with the quarter param. Example: `month=January`  Valid values: `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`"
                                        },
                                        {
                                            "key": "quarter",
                                            "value": "Q1",
                                            "description": " The quarter of the requested IFTA report summary. Can not be provided with the month param. Q1: January, February, March. Q2: April, May, June. Q3: July, August, September. Q4: October, November, December. Example: `quarter=Q1`  Valid values: `Q1`, `Q2`, `Q3`, `Q4`"
                                        },
                                        {
                                            "key": "jurisdictions",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of jurisdictions. Example: `jurisdictions=GA`"
                                        },
                                        {
                                            "key": "fuelType",
                                            "value": "M85",
                                            "description": " A filter on the data based on this comma-separated list of IFTA fuel types. Example: `fuelType=Diesel`  Valid values: `Unspecified`, `A55`, `Biodiesel`, `CompressedNaturalGas`, `Diesel`, `E85`, `Electricity`, `Ethanol`, `Gasohol`, `Gasoline`, `Hydrogen`, `LiquifiedNaturalGas`, `M85`, `Methanol`, `Propane`, `Other`"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        }
                                    ]
                                },
                                "description": "Get all jurisdiction IFTA reports for the requested time duration. Data is returned in your organization's defined timezone.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "01effe02-20ec-4fa8-ba78-0249e144680b",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"jurisdictionReports\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"year\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"month\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"quarter\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"troubleshooting\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "47f7523a-2d45-43c5-ae9c-a53b5672d08b",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a9078b65-fa08-4e9b-8d70-8e82c8239f0a",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3259aa15-2bac-43c0-8148-5e451ed52079",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a78a1dd4-1761-47ef-aaf4-0ee2556c0383",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f72f3273-4aba-4684-976c-f8358b7ab526",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "71ab02e4-0e79-4be0-8030-9b9cb36fc93e",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e074553f-b02c-4ca9-bbdf-7d4d614058c0",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "101d542b-1a92-4dd2-a58d-0824cec0c8df",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "feda8178-1f7f-4cd5-b874-2930e9aa6d76",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "238f0ccc-93a3-4e61-8624-26da5ee4abdf",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/jurisdiction?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "jurisdiction"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get IFTA vehicle reports.",
                            "id": "5c485037-fa45-408e-950f-f28d93128421",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=2045&month=August&quarter=Q1&jurisdictions=dolore consequat&fuelType=M85&vehicleIds=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "reports",
                                        "ifta",
                                        "vehicle"
                                    ],
                                    "query": [
                                        {
                                            "key": "year",
                                            "value": "2045",
                                            "description": "(Required)  The year of the requested IFTA report summary. Must be provided with a month or quarter param. Example: `year=2021`"
                                        },
                                        {
                                            "key": "month",
                                            "value": "August",
                                            "description": " The month of the requested IFTA report summary. Can not be provided with the quarter param. Example: `month=January`  Valid values: `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`"
                                        },
                                        {
                                            "key": "quarter",
                                            "value": "Q1",
                                            "description": " The quarter of the requested IFTA report summary. Can not be provided with the month param. Q1: January, February, March. Q2: April, May, June. Q3: July, August, September. Q4: October, November, December. Example: `quarter=Q1`  Valid values: `Q1`, `Q2`, `Q3`, `Q4`"
                                        },
                                        {
                                            "key": "jurisdictions",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of jurisdictions. Example: `jurisdictions=GA`"
                                        },
                                        {
                                            "key": "fuelType",
                                            "value": "M85",
                                            "description": " A filter on the data based on this comma-separated list of IFTA fuel types. Example: `fuelType=Diesel`  Valid values: `Unspecified`, `A55`, `Biodiesel`, `CompressedNaturalGas`, `Diesel`, `E85`, `Electricity`, `Ethanol`, `Gasohol`, `Gasoline`, `Hydrogen`, `LiquifiedNaturalGas`, `M85`, `Methanol`, `Propane`, `Other`"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get all vehicle IFTA reports for the requested time duration. Data is returned in your organization's defined timezone.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "e4dfc9e1-1ebe-43a3-a250-797d4bf812f1",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"vehicleReports\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"year\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"month\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"quarter\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"troubleshooting\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "e255f0a1-26f3-4ded-a46d-0cb2b62cd8e5",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "fb98caba-a952-4df6-a2fd-9f9fdeb12ef0",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c9645a67-4949-4598-896e-55b8707c0d75",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "23ea2e54-bbca-41c2-bb38-3cd115d2d6bf",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b23ad776-7a49-4611-b844-ce99706e844b",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5a15beec-6a2c-40f9-a833-8bc36c5a0195",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0f13a43d-57a1-4ab5-9c21-74482c91196e",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ca6b66c0-d10d-4c9e-9127-19c703822e07",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "d1a31207-9d42-41e0-9090-8c695066463b",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "127c2b73-0717-4a53-8577-1724b9c101b1",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/reports/ifta/vehicle?year=<integer>&month=<string>&quarter=<string>&jurisdictions=<string>&fuelType=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "reports",
                                                "ifta",
                                                "vehicle"
                                            ],
                                            "query": [
                                                {
                                                    "key": "year",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "month",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "quarter",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "jurisdictions",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fuelType",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "ceb3a3af-bebf-45c5-8e6e-2985cf029920"
                },
                {
                    "name": "routes",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Delete a route.",
                                    "id": "ae775a57-f62f-4751-a030-b56e00e8dfec",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "dae9ddc2-92ae-4629-8ffe-e76c40bdcffb",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                                }
                                            ]
                                        },
                                        "description": "Delete a dispatch route and its associated stops.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "88cf127f-f66f-4e5c-a231-ff190d681314",
                                            "name": "No Content response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": ""
                                        },
                                        {
                                            "id": "6f5f5346-8f8d-4ac7-8965-a11289d3b211",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "71f4705e-aa87-4190-bb29-3bb285455e16",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7b4cf388-58fa-44e4-be1e-9c475ea31559",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "08d704bd-9a32-4fb4-a66d-ae0dd426d173",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2aff8844-7982-4766-8f20-3ee618d444fd",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f7446b47-ba71-4563-bcdf-978c42f14f08",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "9cdd4cef-61c3-4f68-b75b-c083dfe2387b",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "41b2808a-7f20-4f04-9844-cbc0aa2f8cdd",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f9024e69-b084-4ca1-9409-dce34f951dea",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f1b910d1-ded2-4db1-9c6f-4f172dbb5ca0",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Fetch a route",
                                    "id": "1fc15785-1f80-46f7-866d-b4ee27f91739",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "10034af7-f59e-428e-874d-6b5be55ae927",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                                }
                                            ]
                                        },
                                        "description": "Returns a single route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDispatchRouteById).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "8fee00d4-d6a9-4bc6-89d7-1d8ef3dafed7",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"settings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stops\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "62fd5e17-ea43-4da1-98ec-8509830f466e",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "12ec46d9-7696-4604-a463-7c223db38e33",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ebb0fdc3-024c-4a6f-8a39-68552b65a21f",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0df67a2b-07d0-448e-a0c1-aa043e4f8b57",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b04cec77-badf-4243-a480-83ac7c79e3c7",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "041b2114-5e31-4052-9a59-ccffd5f737c4",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7fd295ee-52ca-40f6-b987-994f236bb7db",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b43e197a-365f-4706-82e6-0137cdc25182",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "06a7626d-8265-4a0c-b0a1-cc3607f7b302",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "3575e347-3bd8-4d0c-bc22-d80f1f692d70",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update a route",
                                    "id": "b756c7b6-fa2d-43a9-ae84-f6ecd917da8c",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverId\": \"1234\",\n    \"externalIds\": {},\n    \"name\": \"Bid 123\",\n    \"notes\": \"These are my notes\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"453546\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "26121786-cfdc-428f-9dea-518fd45aca31",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) id of the route to update"
                                                }
                                            ]
                                        },
                                        "description": "Update a route.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.\n\nThe legacy version of this endpoint (which uses PUT instead of PATCH) can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/updateDispatchRouteById).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "95d2a0f9-94ee-4c01-9369-0fc8dcd58bf7",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"settings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stops\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "3e73899f-2cb5-4c05-869d-30483b447d72",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "10aba62f-2db8-4951-8232-d01883d5d6ac",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "890172ea-828c-452a-995a-d3c287788c63",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6c6d568b-6292-4bb1-bbcf-e568ca646d42",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4d2a8f1b-40a2-41db-b884-430dcbbed81e",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ca2b0699-1db3-49dc-9824-5e6bcc839e65",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "43daa6e8-b2bf-4fbb-b22b-2ae56a71fcd3",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "06869a51-15f0-4f9d-a84e-713fe89a0386",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "a2f1e5a3-ee4a-4fa4-9990-5a17acb52526",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "d3691ee1-55c2-49c9-86ce-28bc3d023247",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicleId\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/routes/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "routes",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "13330907-8658-41b1-b8dd-301d59f8ad2a"
                        },
                        {
                            "name": "Fetch all routes",
                            "id": "b90d1f0e-5bdd-4a94-9038-7e04d1209299",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/routes?startTime=dolore consequat&endTime=dolore consequat&limit=512&after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "routes"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "512",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Returns multiple routes. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllDispatchRoutes).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "bc12c1a0-fdbf-41e4-80c9-fb0f7bdefcd1",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "08ef71e7-7262-48ff-8055-dfc17256a163",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "046ccf6e-dcf9-4ff5-94c6-25a3f6c5696e",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "478e46ee-6ef4-48d9-9ce0-c1b8d65671b3",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a15c620b-ff92-45b1-aea4-5fe23530874e",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "04ecf1d0-aaa8-459e-a789-3e0a9ed39ddf",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "54e3a4ae-16c1-4157-b4de-9c1c0d1c37e9",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "52e91450-d94d-4dee-a47d-64507a646e41",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "c8aa6753-dcdb-4703-8b20-3730ed396d19",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "177573db-0035-4d2c-9b14-169c8d238a91",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ab0b8e47-4559-4215-8b69-77dde11414af",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes?startTime=<string>&endTime=<string>&limit=512&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "512"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create a route",
                            "id": "cf8b4ba4-3a94-41c1-b3c4-dfd0d7224adf",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Bid 123\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"1234\",\n    \"externalIds\": {},\n    \"notes\": \"These are my notes\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"453546\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/routes",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "routes"
                                    ]
                                },
                                "description": "Create a route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDispatchRoute).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "99eaa7b4-83c3-4326-bfb1-d2ffdf2fabbd",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"actualRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduledRouteStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"settings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stops\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicle\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "24b294c8-e613-4baa-92a1-846aff93c087",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "6a8ee810-3c71-4166-adf5-fd1eb297e80b",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "5d9d2342-c33c-4860-af7a-d836e97d7f62",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "56c60781-efe9-4ff2-a221-f2dad60f63b2",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "e872e54b-84ff-47fa-b29b-4f74f507ff3f",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "46f95594-8dcc-4fe1-bd07-db40aaea23ea",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "45f8f93a-8bc2-4886-9851-72fb248130ab",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "201bcc09-e9c1-43fc-aae5-1a99381a1cec",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1b3422cc-c248-45b5-b1f1-9c805c9d9f2b",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "927250cd-7a05-4024-9e86-e41c7f2f506d",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"<string>\",\n    \"stops\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"driverId\": \"<string>\",\n    \"externalIds\": \"<object>\",\n    \"notes\": \"<string>\",\n    \"settings\": {\n        \"routeCompletionCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"routeStartingCondition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"vehicleId\": \"<string>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get route updates",
                            "id": "501a7e38-4c4a-4a77-a09a-6d539f624d4f",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=dolore consequat&expand=route",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "routes",
                                        "audit-logs",
                                        "feed"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "expand",
                                            "value": "route",
                                            "description": "Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.\n\nValid value: `route`  Valid values: `route`"
                                        }
                                    ]
                                },
                                "description": "Subscribes to a feed of immutable, append-only updates for routes. The initial request to this feed endpoint returns a cursor, which can be used on the next request to fetch updated routes that have had state changes since that request.\n\nThe legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllRouteJobUpdates).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "a1baa7f9-a22d-40e7-9e32-8d934d030d1a",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "f7c45a83-34fe-4fcd-af02-fa1998f418b2",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a8556fe4-46c8-4854-b450-d4be5f194e80",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f5eda694-3dcc-4522-b890-8527e3a30f35",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ecded950-cd7e-4f0e-b2aa-92c275888ecf",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "0a7f79a3-5dd8-4a48-80e6-293c2c02e53e",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3d327dce-b1e5-4275-9da0-681e9d8bdb2e",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "30cbf086-e149-4eb8-8e87-8ec25282b6db",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f50c2903-6f32-420a-bb72-1f05c3aacf54",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "b59e5934-01d8-4736-b680-ff3104035459",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "a2de943a-ed1e-4506-b69b-dc2645b18535",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/routes/audit-logs/feed?after=<string>&expand=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "routes",
                                                "audit-logs",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "expand",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "f6e62972-b128-4cf1-87fd-eb6fffd3fa1c"
                },
                {
                    "name": "settings",
                    "item": [
                        {
                            "name": "compliance",
                            "item": [
                                {
                                    "name": "Get compliance settings",
                                    "id": "52ae1c6a-7c81-47d0-a61b-d496f882ea7b",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/settings/compliance",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "settings",
                                                "compliance"
                                            ]
                                        },
                                        "description": "Get organization's compliance settings, including carrier name, office address, and DOT number\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "bcf37e64-41b5-449a-83f4-8798e75bef65",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"allowUnregulatedVehiclesEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canadaHosEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dotNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverAutoDutyEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"editCertifiedLogsEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"forceManualLocationForDutyStatusChangesEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"forceReviewUnassignedHosEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mainOfficeFormattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"persistentDutyStatusEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "49712afe-7513-4226-885e-8dcc35e8333c",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "c377a2ae-a347-4834-81fe-9179d7fb8db6",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "edc2f64e-4d4c-48a7-ba2a-5e8dcf5c0557",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "dc28b11e-7bea-4ae9-a3a3-14e25ef30674",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ec49eb82-89fe-4d9f-9654-8ebbfd7c3a01",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2b021f8f-c3e2-4067-83c1-3ee9ebe76a8d",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "69e55edd-29d7-4e31-b137-4f8e4ac1a97f",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "043e8bcd-fbac-47d4-bdf9-a0648d01319f",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b9186757-8ccf-4aa2-949f-050134ddd2a7",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "725790a8-bbd3-4885-b194-fd3bf0c0028e",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update compliance settings",
                                    "id": "e2c05905-919c-4e06-8202-2c3eba77d329",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": false,\n    \"canadaHosEnabled\": false,\n    \"carrierName\": \"ABC Trucking\",\n    \"dotNumber\": 12345678,\n    \"driverAutoDutyEnabled\": false,\n    \"editCertifiedLogsEnabled\": true,\n    \"forceManualLocationForDutyStatusChangesEnabled\": false,\n    \"forceReviewUnassignedHosEnabled\": true,\n    \"mainOfficeFormattedAddress\": \"123 Main Street\",\n    \"persistentDutyStatusEnabled\": true\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/settings/compliance",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "settings",
                                                "compliance"
                                            ]
                                        },
                                        "description": "Update organization's compliance settings, including carrier name, office address, and DOT number\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "9d1bdf7f-2f28-4a53-8083-f9c204681e5e",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"allowUnregulatedVehiclesEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canadaHosEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"carrierName\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dotNumber\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"driverAutoDutyEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"editCertifiedLogsEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"forceManualLocationForDutyStatusChangesEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"forceReviewUnassignedHosEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mainOfficeFormattedAddress\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"persistentDutyStatusEnabled\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "309bbaa9-102c-41eb-8be9-d3e7e8fd67c8",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "1f68e26d-3eba-412f-aff2-b60a24a0b08e",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "bf3e0f88-7413-476b-974a-9155b5322035",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8e3456f7-3be4-48f2-9a50-687be5f26ed8",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f7f675a4-35a4-4688-8633-37fe83964ff8",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "cec22f68-de8f-4fd1-a2c6-509e6f750d7f",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "6521f5be-8348-48e4-9497-8ece37b656f1",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "12003824-0b93-4014-8253-94093989735c",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "593838f2-2996-49af-af02-2971622df502",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "8c0b8bf8-97e5-45eb-b9c3-6deed1099950",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"allowUnregulatedVehiclesEnabled\": \"<boolean>\",\n    \"canadaHosEnabled\": \"<boolean>\",\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<integer>\",\n    \"driverAutoDutyEnabled\": \"<boolean>\",\n    \"editCertifiedLogsEnabled\": \"<boolean>\",\n    \"forceManualLocationForDutyStatusChangesEnabled\": \"<boolean>\",\n    \"forceReviewUnassignedHosEnabled\": \"<boolean>\",\n    \"mainOfficeFormattedAddress\": \"<string>\",\n    \"persistentDutyStatusEnabled\": \"<boolean>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/compliance",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "compliance"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "5b3bbf9f-207a-4c10-b7b3-48b5c2ad7401"
                        },
                        {
                            "name": "driver-app",
                            "item": [
                                {
                                    "name": "Get driver app settings",
                                    "id": "2531852a-63dd-4dc2-bd19-e91fa10c1294",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "settings",
                                                "driver-app"
                                            ]
                                        },
                                        "description": "Get driver app settings.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "0b1d7339-5789-4805-940f-d8196c7c2575",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"driverFleetId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gamification\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gamificationConfig\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"orgVehicleSearch\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSelection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSelectionConfig\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "fb21e1ac-0f5b-43ca-95f0-5a1bf64f2e51",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "62958345-c731-46e5-9b18-65037de4756d",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2c7e5994-f744-440d-b8d5-13d4a8196040",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b26eec4e-d021-481f-a7b0-ce2c63fae530",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "73e93733-9eb6-47a0-9211-8d948a715111",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "04ac7eb8-e650-4cbb-9652-457f8bdd375f",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "d1c25c9e-8f46-4b1e-bba0-48908bfc6d69",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "f4c50602-0a28-4855-9ed6-00aab9e9464c",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "e7330a22-3a5f-48ba-84b0-42b6459b6950",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "d9cf0337-88b6-4df7-86b4-cda3907badfb",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update driver app settings",
                                    "id": "3343cd71-b9ef-4a47-be94-f08efdab675f",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverFleetId\": \"abc-trucking-co\",\n    \"gamification\": true,\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": false,\n    \"trailerSelection\": true,\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "settings",
                                                "driver-app"
                                            ]
                                        },
                                        "description": "Update driver app settings.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "fcae5186-1e74-4cfd-a504-9858b592e5f7",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"driverFleetId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gamification\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gamificationConfig\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"orgVehicleSearch\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSelection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trailerSelectionConfig\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "0dea9850-8250-45f6-bac5-a78dbbceb32a",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "57767cb6-9c8d-40ac-aeb5-f108f57dae92",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0b33f99e-5db1-42b0-8db0-04ce316ac0ea",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b008d8aa-335f-42cf-911c-cb557cd8a45f",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ba90d2a0-5ccb-4d36-9897-c16afb7d49d7",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "54c28472-25d2-4a20-bacb-3079669fa8fb",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "3e1c628d-b904-4882-b21b-969ff4bea9b1",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "b12a4723-55d5-4d03-9045-6662b2764374",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ec7a234b-bb87-47e8-bf35-f4d43d3148a1",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0225b613-c4fb-4155-ba64-4b0e218da77c",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverFleetId\": \"<string>\",\n    \"gamification\": \"<boolean>\",\n    \"gamificationConfig\": {\n        \"anonymizeDriverNames\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"orgVehicleSearch\": \"<boolean>\",\n    \"trailerSelection\": \"<boolean>\",\n    \"trailerSelectionConfig\": {\n        \"driverTrailerCreationEnabled\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"maxNumOfTrailersSelected\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"orgTrailerSearch\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/settings/driver-app",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "settings",
                                                        "driver-app"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "e9382d5a-c1d0-4021-aee1-da8809941fc1"
                        }
                    ],
                    "id": "0a784c5a-69b3-45ba-a5c3-9cdf6c7917b6"
                },
                {
                    "name": "vehicles",
                    "item": [
                        {
                            "name": "locations",
                            "item": [
                                {
                                    "name": "Locations snapshot",
                                    "id": "3f3702e8-ac45-42af-aed8-c1a1c787fbb2",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/locations?after=dolore consequat&time=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&vehicleIds=minim et,et minim cillum",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "locations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "time",
                                                    "value": "dolore consequat",
                                                    "description": "A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported. (Example: `2020-01-27T07:06:25Z`)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestats) instead.***\n\nReturns the last known location of all vehicles at the given `time`. If no `time` is specified, the current time is used. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: <a href=\"/docs/vehicle-locations-1\" target=\"_blank\">Vehicle Locations</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "9992e05c-f102-4d79-ab4b-5042f5bdbb8e",
                                            "name": "List of the most recent locations for the specified vehicles.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "45232fa7-c1c9-4dcb-9c45-ead8d4a58312",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Locations feed",
                                    "id": "5bbb51bf-7e06-40d0-925b-8ee24aa242d1",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/locations/feed?after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&vehicleIds=minim et,et minim cillum",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "locations",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatsfeed) instead.***\n\nFollow a continuous feed of all vehicle locations from Samsara Vehicle Gateways.\n\nYour first call to this endpoint will provide you with the most recent location for each vehicle and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get location updates since that `endCursor`. \n\nIf `hasNextPage` is `false`, no updates are readily available yet. We'd suggest waiting a minimum of 5 seconds before requesting updates.\n\nRelated guide: <a href=\"/docs/vehicle-locations-1\" target=\"_blank\">Vehicle Locations</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "a466b0a9-fe5e-4754-83aa-d4bf7183ad54",
                                            "name": "List of locations events for the specified vehicles.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "75f84071-a2e6-4fc2-ae71-51e726d14fb6",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Historical locations",
                                    "id": "def65096-0c66-4d59-abf1-c095d13b5f4e",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/locations/history?after=dolore consequat&startTime=dolore consequat&endTime=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&vehicleIds=minim et,et minim cillum",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "locations",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                }
                                            ]
                                        },
                                        "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatshistory) instead.***\n\nReturns all known vehicle locations during the given time range. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: <a href=\"/docs/vehicle-locations-1\" target=\"_blank\">Vehicle Locations</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "ae6e7151-13fe-48b1-a13c-1fca4ad82c23",
                                            "name": "List of all locations for the specified vehicles and time range.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "34675bd7-7a1d-4659-b027-a474b7ce37b7",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/locations/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "locations",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "37a2f1bc-ffc2-4e57-83fe-ccbe11c15d4b"
                        },
                        {
                            "name": "stats",
                            "item": [
                                {
                                    "name": "Stats snapshot",
                                    "id": "24052d27-54c8-4982-815c-362a5effaeda",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/stats?after=dolore consequat&time=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&vehicleIds=minim et,et minim cillum&types=auxInput12,auxInput9",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "stats"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "time",
                                                    "value": "dolore consequat",
                                                    "description": "A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported. (Example: `2020-01-27T07:06:25Z`)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "auxInput12,auxInput9",
                                                    "description": "(Required) The stat types you want this endpoint to return information on. See also the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the <a href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\">cloud dasbhoard</a>. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle."
                                                }
                                            ]
                                        },
                                        "description": "Returns the last known stats of all vehicles at the given `time`. If no `time` is specified, the current time is used.\n\nRelated guide: <a href=\"/docs/telematics\" target=\"_blank\">Telematics</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "9159dad1-36ed-4671-9913-0a0fdab4dad0",
                                            "name": "Vehicle stats snapshot",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "16b402ad-9efb-4571-8e25-88c4b97d308a",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats?after=<string>&time=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "time",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Stats feed",
                                    "id": "c4994e0b-7033-4dba-8f95-d867383754ba",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/stats/feed?after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&vehicleIds=minim et,et minim cillum&types=auxInput12,auxInput9&decorations=obdEngineSeconds,engineRpm",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "stats",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "auxInput12,auxInput9",
                                                    "description": "(Required) The stat types you want this endpoint to return information on. See also the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the <a href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\">cloud dasbhoard</a>. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle."
                                                },
                                                {
                                                    "key": "decorations",
                                                    "value": "obdEngineSeconds,engineRpm",
                                                    "description": "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates&decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes&decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  "
                                                }
                                            ]
                                        },
                                        "description": "Follow a feed of vehicle stats. \n\nYour first call to this endpoint will provide you with the most recent stats for each vehicle and an `endCursor`.\n\nYou can the provide the `endCursor` value to the `after` query parameter to get all updates since the last call you made.\n\nIf `hasNextPage` is `false`, no new data is immediately available. You should wait a minimum of 5 seconds making a subsequent request.\n\nRelated guide: <a href=\"/docs/telematics\" target=\"_blank\">Telematics</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "1d0860ee-9e40-43f4-9ed7-9ba50829da36",
                                            "name": "List of stat events for the specified vehicles and stat types.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "892db465-f167-4375-ab51-cd6170fe7526",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Historical stats",
                                    "id": "b6ef4244-b49e-4b1f-b7cc-25ec68d2655e",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/stats/history?after=dolore consequat&startTime=dolore consequat&endTime=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&vehicleIds=minim et,et minim cillum&types=auxInput12,auxInput9&decorations=obdEngineSeconds,engineRpm",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "stats",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                                },
                                                {
                                                    "key": "types",
                                                    "value": "auxInput12,auxInput9",
                                                    "description": "(Required) The stat types you want this endpoint to return information on. See also the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the <a href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\">cloud dasbhoard</a>. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle."
                                                },
                                                {
                                                    "key": "decorations",
                                                    "value": "obdEngineSeconds,engineRpm",
                                                    "description": "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates&decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes&decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the <a href=\"/docs/telematics#query-parameters\" target=\"_blank\">Telematics</a> guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput13`: Stat events from the <a href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\">auxiliary inputs</a> for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer -  Valid values: `ignition_disabled`, `ignition_enabled`.\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  "
                                                }
                                            ]
                                        },
                                        "description": "Returns vehicle stats during the given time range for all vehicles. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: <a href=\"/docs/telematics\" target=\"_blank\">Telematics</a>. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "abc79983-1d33-4246-ab21-a8dd4cd51469",
                                            "name": "List of vehicle stats for the specified vehicles, stat type, and time range.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "9d614233-1400-424e-99c4-34bc84ebc212",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/stats/history?after=<string>&startTime=<string>&endTime=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>,<string>&decorations=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        "stats",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "vehicleIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "types",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "decorations",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "c027c305-9b6a-4014-ac2d-c7e698b3c2ab"
                        },
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Retrieve a vehicle",
                                    "id": "d04ddd4e-b934-41ce-af82-fa25ef1a3106",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "9919f6fd-59c2-4d7f-806b-6d264313cb66",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the vehicle. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource, or automatically populated by fields on the vehicle. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `maintenanceId:250020`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.vin:1HGBH41JXMN109186`."
                                                }
                                            ]
                                        },
                                        "description": "Get information about a specific vehicle. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "0b6382e5-cbff-4fb8-89e5-76bb86f8be6c",
                                            "name": "Returns the specified vehicle object.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType1\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType10\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType11\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType12\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType13\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType2\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType3\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType4\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType5\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType6\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType7\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType8\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType9\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cameraSerial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"harshAccelerationSettingType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"make\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"model\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedDriver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleRegulationMode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vin\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"year\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "9030acb0-72fa-421c-8e30-ecba4b7b749d",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update a vehicle",
                                    "id": "2d9ea8f8-58c6-4356-bd39-85df10facdd9",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"auxInputType1\": \"boom\",\n    \"auxInputType10\": \"boom\",\n    \"auxInputType11\": \"boom\",\n    \"auxInputType12\": \"boom\",\n    \"auxInputType13\": \"boom\",\n    \"auxInputType2\": \"boom\",\n    \"auxInputType3\": \"boom\",\n    \"auxInputType4\": \"boom\",\n    \"auxInputType5\": \"boom\",\n    \"auxInputType6\": \"boom\",\n    \"auxInputType7\": \"boom\",\n    \"auxInputType8\": \"boom\",\n    \"auxInputType9\": \"boom\",\n    \"engineHours\": 10943,\n    \"externalIds\": {\n        \"maintenanceId\": \"250020\",\n        \"payrollId\": \"ABFS18600\"\n    },\n    \"gatewaySerial\": \"ABCD-123-XYZ\",\n    \"harshAccelerationSettingType\": \"off\",\n    \"licensePlate\": \"XHK1234\",\n    \"name\": \"Truck A7\",\n    \"notes\": \"These are notes about this given vehicle.\",\n    \"odometerMeters\": 9182,\n    \"staticAssignedDriverId\": \"123\",\n    \"tagIds\": [\n        \"321\",\n        \"321\"\n    ],\n    \"vehicleRegulationMode\": \"regulated\",\n    \"vin\": \"1FUJA6BD31LJ09646\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "7766aac9-3ca3-4ff1-a5cb-4b2e94f2f282",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) ID of the vehicle. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource, or automatically populated by fields on the vehicle. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `maintenanceId:250020`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.vin:1HGBH41JXMN109186`."
                                                }
                                            ]
                                        },
                                        "description": "Updates the given Vehicle object.\n\n**Note:** Vehicle objects are automatically created when Samsara Vehicle Gateways are installed. You cannot create a Vehicle object via API.\n\nYou are able to *update* many of the fields of a Vehicle.\n\n**Note**: There are no required fields in the request body, and you only need to provide the fields you wish to update. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "027e7c22-57c1-4260-869f-3fd1f7f34634",
                                            "name": "Returns the specified vehicle object.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"auxInputType1\": \"<string>\",\n    \"auxInputType10\": \"<string>\",\n    \"auxInputType11\": \"<string>\",\n    \"auxInputType12\": \"<string>\",\n    \"auxInputType13\": \"<string>\",\n    \"auxInputType2\": \"<string>\",\n    \"auxInputType3\": \"<string>\",\n    \"auxInputType4\": \"<string>\",\n    \"auxInputType5\": \"<string>\",\n    \"auxInputType6\": \"<string>\",\n    \"auxInputType7\": \"<string>\",\n    \"auxInputType8\": \"<string>\",\n    \"auxInputType9\": \"<string>\",\n    \"engineHours\": \"<integer>\",\n    \"externalIds\": \"<object>\",\n    \"gatewaySerial\": \"Excepteur\",\n    \"harshAccelerationSettingType\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"staticAssignedDriverId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleRegulationMode\": \"regulated\",\n    \"vin\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attributes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType1\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType10\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType11\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType12\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType13\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType2\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType3\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType4\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType5\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType6\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType7\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType8\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auxInputType9\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cameraSerial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"externalIds\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"gateway\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"harshAccelerationSettingType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"licensePlate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"make\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"model\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"staticAssignedDriver\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleRegulationMode\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vin\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"year\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "997fc7b0-8b80-41ce-9ccf-e82f98576bcc",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"attributes\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"auxInputType1\": \"<string>\",\n    \"auxInputType10\": \"<string>\",\n    \"auxInputType11\": \"<string>\",\n    \"auxInputType12\": \"<string>\",\n    \"auxInputType13\": \"<string>\",\n    \"auxInputType2\": \"<string>\",\n    \"auxInputType3\": \"<string>\",\n    \"auxInputType4\": \"<string>\",\n    \"auxInputType5\": \"<string>\",\n    \"auxInputType6\": \"<string>\",\n    \"auxInputType7\": \"<string>\",\n    \"auxInputType8\": \"<string>\",\n    \"auxInputType9\": \"<string>\",\n    \"engineHours\": \"<integer>\",\n    \"externalIds\": \"<object>\",\n    \"gatewaySerial\": \"Excepteur\",\n    \"harshAccelerationSettingType\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"staticAssignedDriverId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleRegulationMode\": \"regulated\",\n    \"vin\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/fleet/vehicles/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "fleet",
                                                        "vehicles",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "37149e9d-acb4-40bb-828d-7e3fbce40936"
                        },
                        {
                            "name": "List all vehicles",
                            "id": "03792ba7-6d74-45a2-bd3a-84206e944c17",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/vehicles?limit=446&after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "vehicles"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns a list of all vehicles. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "f9489d2a-e43f-462d-bdc2-cdc78bd66c2c",
                                    "name": "List of all vehicle objects, and pagination parameters.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "12951555-b56b-4d4e-802c-341c1875b3dd",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all camera media",
                            "id": "7f83caa4-6ad4-416e-a29f-297d311c3481",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=dolore consequat&endTime=dolore consequat&vehicleIds=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "vehicles",
                                        "cameras",
                                        "media",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get all camera media.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "119c234b-8dbf-4426-b34d-9aa969dfc480",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "c5747521-bc97-4c4b-9b78-f9fed93ba112",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "96d2a11f-700c-43d6-b116-a288cf0c1061",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "350de80a-027d-4b5a-b14b-d302a8bac70a",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "31144641-fa14-49f4-911b-45272f5814d9",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "fcabaee8-7ab1-4742-b2ae-3b470b5e7e82",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "dadb1897-c5df-4d6f-bbab-6fe0792fc261",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "fac108ce-5332-4991-a642-5a0d833652fc",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f70cc2fe-1ea0-4c6a-b508-fa4c101ded1f",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f79bdeac-91a9-4c08-9359-52994171ca22",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3ebdafcd-f7bf-4912-a952-919d39c4fa24",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/cameras/media/history?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "cameras",
                                                "media",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get all drivers assigned to a set of vehicles",
                            "id": "ef5a944e-7b5c-4c65-bceb-ee2fc6021b46",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=dolore consequat&endTime=dolore consequat&vehicleIds=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&after=dolore consequat",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "vehicles",
                                        "driver-assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "dolore consequat",
                                            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        }
                                    ]
                                },
                                "description": "Get all driver assignments for the requested vehicles in the requested time range. The only type of assignment supported right now are assignments created through the driver app.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "82f29216-eb0a-439a-87a9-a51e9b42a5ea",
                                    "name": "OK response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "ceeed39e-581f-4b3a-84bd-7f3f8800b030",
                                    "name": "Unauthorized response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "efe6ecfb-cf5e-4e6d-9acc-94216b2ae350",
                                    "name": "Not Found response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "ed100d2a-2a3c-4f8e-981b-eab165bdc248",
                                    "name": "Method Not Allowed response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Method Not Allowed",
                                    "code": 405,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "456604e2-e6fd-4d4a-89a7-f1deca8fafeb",
                                    "name": "Too Many Requests response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Too Many Requests",
                                    "code": 429,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "f3b59fc9-2723-4649-859a-b6c50bd12f05",
                                    "name": "Internal Server Error response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "3c905ec9-8816-40aa-84da-9fa832ae1462",
                                    "name": "Not Implemented response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Implemented",
                                    "code": 501,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "85686f24-4ead-4248-b350-63100e46f42d",
                                    "name": "Bad Gateway response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Gateway",
                                    "code": 502,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "1d58fa04-a2c6-4d5c-9745-489a10cdbe42",
                                    "name": "Service Unavailable response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "dfe9b274-e582-4532-8e09-8223c615f460",
                                    "name": "Gateway Timeout response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Gateway Timeout",
                                    "code": 504,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                },
                                {
                                    "id": "2b566a58-4362-409e-a3ee-da768407ad4c",
                                    "name": "Bad Request response.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/driver-assignments?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "driver-assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Get tachograph vehicle files",
                            "id": "61f70222-63d5-43cd-b168-e810f2d55e31",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/vehicles/tachograph-files/history?after=dolore consequat&startTime=dolore consequat&endTime=dolore consequat&vehicleIds=minim et,et minim cillum&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "vehicles",
                                        "tachograph-files",
                                        "history"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "dolore consequat",
                                            "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        }
                                    ]
                                },
                                "description": "Returns all known tachograph files for all specified vehicles in the time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "302f2d1b-21e4-4848-9e95-0ff6e4ed596b",
                                    "name": "List of all vehicle tachograph files in a specified time range.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&vehicleIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "tachograph-files",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "05396ff9-0ce2-4a86-8d98-ed682fa7a91a",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/fleet/vehicles/tachograph-files/history?after=<string>&startTime=<string>&endTime=<string>&vehicleIds=<string>,<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "fleet",
                                                "vehicles",
                                                "tachograph-files",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "startTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "vehicleIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "8c17d1f3-20ee-4dec-807f-9df57bedab51"
                },
                {
                    "name": "Fetch document types",
                    "id": "e3733d8a-20d1-4fd9-956a-aacd6e875532",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/fleet/document-types?after=dolore consequat",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "fleet",
                                "document-types"
                            ],
                            "query": [
                                {
                                    "key": "after",
                                    "value": "dolore consequat",
                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Returns a list of the organization document types. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDriverDocumentTypesByOrgId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "d9e1a362-a6fc-4955-9428-749fd5019bf3",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "db04573e-c644-490c-adab-e97f1953012e",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "02dbe6c8-61a1-4f37-a779-61a8fa0d3cef",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "abb14f6b-8b9c-4a64-adef-889e9e712200",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "d0cf6e71-9208-48db-9fa3-69127ab65ced",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "a40281c7-39ec-4788-bd3f-e3041edf5574",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "cbccf6a3-ab87-452f-ae02-10212e96bdc3",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "dd9e3554-f61c-424f-9a50-cf47c56b699f",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "f0a543bb-c6aa-4ca4-93d6-07923100692d",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "4137ff72-84f4-42b6-86f1-41f547f298d8",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "ee0d0b01-3581-4425-9d3a-d3b93d1911f0",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/document-types?after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "document-types"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "List all safety events.",
                    "id": "cd311210-25aa-4a00-9d51-64f38d99844a",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/fleet/safety-events?after=dolore consequat&startTime=dolore consequat&endTime=dolore consequat&tagIds=minim et,et minim cillum&parentTagIds=minim et,et minim cillum&vehicleIds=minim et,et minim cillum",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "fleet",
                                "safety-events"
                            ],
                            "query": [
                                {
                                    "key": "after",
                                    "value": "dolore consequat",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                },
                                {
                                    "key": "startTime",
                                    "value": "dolore consequat",
                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                },
                                {
                                    "key": "endTime",
                                    "value": "dolore consequat",
                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                },
                                {
                                    "key": "tagIds",
                                    "value": "minim et,et minim cillum",
                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "minim et,et minim cillum",
                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "vehicleIds",
                                    "value": "minim et,et minim cillum",
                                    "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
                                }
                            ]
                        },
                        "description": "Fetch safety events for the organization in a given time period. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "a9e8076a-7a65-40c4-8e4e-0103de4b0263",
                            "name": "List of safety events from given time period.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/safety-events?after=<string>&startTime=<string>&endTime=<string>&tagIds=<string>,<string>&parentTagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "safety-events"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>,<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "bccbc856-a1bc-469d-9699-b7b131dad1c6",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/fleet/safety-events?after=<string>&startTime=<string>&endTime=<string>&tagIds=<string>,<string>&parentTagIds=<string>,<string>&vehicleIds=<string>,<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "fleet",
                                        "safety-events"
                                    ],
                                    "query": [
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>,<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "ce7f3b0d-58d8-4ee0-bded-289475b06536"
        },
        {
            "name": "gateways",
            "item": [
                {
                    "name": "List all gateways",
                    "id": "31c955c6-1db5-41b5-903a-4072dece996a",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/gateways?models=minim et,et minim cillum&after=dolore consequat",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "gateways"
                            ],
                            "query": [
                                {
                                    "key": "models",
                                    "value": "minim et,et minim cillum",
                                    "description": "Filter by a comma separated list of gateway models."
                                },
                                {
                                    "key": "after",
                                    "value": "dolore consequat",
                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "List all gateways\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "a4d12823-0997-4494-8ff7-125fee702abb",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "2c060291-06cf-422a-bbe5-09c6b25699fd",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "42e81d5b-9e6d-4c52-823a-dbc46aa8b51f",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "622250ee-f135-4613-be75-a3bc9b15795b",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "98dd894c-47f3-4e9a-a0f6-82cc8a08a4a6",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "e99ea139-5c2c-44d7-8614-dcee57dc7a30",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "eb8c52e8-0653-45b1-8357-56ce2823c595",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "745596fc-a6da-4536-a677-11d645740385",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "d1ca5eaf-cdfa-4678-ac8c-383848341fa6",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "16b5001a-f3d9-4cc3-b4b0-9f74c2f84f4a",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "8e043dfa-957e-43a8-b050-9c4dc73b7e96",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways?models=<string>,<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ],
                                    "query": [
                                        {
                                            "key": "models",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Activate a new gateway",
                    "id": "fa425108-2033-4620-91ce-06c8f0f406f3",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"serial\": \"GFRV-43N-VGX\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/gateways",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "gateways"
                            ]
                        },
                        "description": "Activate a new gateway. To activate a device and associate it with your organization, enter its serial number. Each device's serial number can also be found on its label or packaging, or from your order confirmation email. A Not Found error could mean that the serial was not found or it has already been activated\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "99eb491c-eae6-40b6-8560-fd83b7c33fd2",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"model\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"accessoryDevices\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"asset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"connectionStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dataUsageLast30Days\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "3f4fdd69-a166-427a-8abe-f30ee64e40b8",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "de3fab1a-11c5-4482-a933-bfb96a5b8aed",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "43881eeb-89d9-4464-9bfc-5e5e14ac105c",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "64ef7cfe-c464-40ee-a9c6-83700c2169e6",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "4cbea747-9253-4e76-be82-416dd2e974fd",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "c75aaa0e-6784-4ab9-a4d8-86f39513f28e",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "73104e8e-8763-49f8-95e3-8536b4f2f88a",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "0c4adfee-6ed6-47fc-bfbf-4da48b806935",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "cf2e2a22-3ea2-437e-bb05-e3e47c1c0f41",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "9f137bc0-b009-4a4f-afb7-8450bd1d0c0f",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"serial\": \"<string>\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/gateways",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Deactivate a gateway",
                    "id": "77ae528c-b85d-4529-a03d-cd9fafb31d1a",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/gateways/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "gateways",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "id": "86e15b55-b544-4fd1-9077-12d896e47f5c",
                                    "key": "id",
                                    "value": "l8XN-l6s-Kxy",
                                    "description": "(Required) Gateway serial number"
                                }
                            ]
                        },
                        "description": "Deactivate a gateway\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "2a5b3a39-2af1-42d0-a3ab-7783fa49876a",
                            "name": "No Content response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "03a93575-82f2-4ab7-9661-3625e93256a0",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "30b7f4a1-e0d6-4018-8012-28d2532c3943",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "87cc8e0b-3c03-43dc-acb3-3b3b95f6bb6e",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "8fde5de4-9924-4f36-b2c0-67d1d92eafed",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "8afda73e-e91e-4a58-88fd-30c3e264037d",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "9cf37a8d-5f25-4014-b407-3dd013eba38e",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "cec53975-2d46-4e62-a129-4ade637f1f14",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "ebf3cd5e-860b-4b5c-b9df-ed0622dbb6be",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "048bb154-f371-4133-ae1b-003bfb10b828",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "dec4ce18-2c5a-4e6a-a622-66b3f06708e2",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/gateways/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "gateways",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "6e8e1f56-7b5c-452f-992e-4416366d1798"
        },
        {
            "name": "industrial",
            "item": [
                {
                    "name": "assets",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "Delete an existing asset",
                                    "id": "70236541-f4a2-4693-b22e-dd71aa5ce170",
                                    "request": {
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "9d5460da-3335-48b1-b893-31a08a7fcbbb",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) Id of the asset to be deleted."
                                                }
                                            ]
                                        },
                                        "description": "Delete asset. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "d884e5de-67bc-46b4-98d9-8eecfb47b7e5",
                                            "name": "A successful DELETE response is a 204 with no content.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        },
                                        {
                                            "id": "5ba61e82-974c-489d-b37f-bee18af8a6b2",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Update an asset",
                                    "id": "81c3dd52-c158-4979-8bb8-07d67712fc09",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"customMetadata\": {\n        \"manufacturer\": \"Samsara\",\n        \"serialNumber\": \"123ABC\"\n    },\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"12345\",\n    \"locationType\": \"point\",\n    \"name\": \"incididunt laborum Lorem aliquip\",\n    \"parentId\": \"\",\n    \"runningStatusDataInputId\": \"67890\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "3b470120-91db-4b21-8545-f8375f5d8355",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) Id of the asset to be updated"
                                                }
                                            ]
                                        },
                                        "description": "Update an existing asset. Only the provided fields will be updated. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "2d047c72-d140-4f9d-aa3a-7114b626b609",
                                            "name": "The updated asset",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customMetadata\": {},\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"address\",\n    \"name\": \"Duis culpa laboris irure\",\n    \"parentId\": \"<string>\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRunning\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customMetadata\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dataOutputs\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationDataInput\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parentAsset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"runningStatusDataInput\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "0e167227-f6b3-44a1-9bdd-0d33fa584f4b",
                                            "name": "Error response",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"customMetadata\": {},\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"address\",\n    \"name\": \"Duis culpa laboris irure\",\n    \"parentId\": \"<string>\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Writes to data outputs on an asset",
                                    "id": "65b344c9-a576-4b89-8d49-72155a7002b1",
                                    "request": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"values\": {}\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets",
                                                ":id",
                                                "data-outputs"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "d43023a3-237d-4207-8909-915737323f9c",
                                                    "key": "id",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) Asset ID"
                                                }
                                            ]
                                        },
                                        "description": "Writes values to multiple data outputs on an asset simultaneously. Only the provided data outputs will be updated.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "f15237a9-4844-47e0-a583-e01b44be3fb0",
                                            "name": "OK response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "4b7bdb97-1dd0-4806-9f74-b3765d77abfe",
                                            "name": "Unauthorized response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "cba193df-46c6-48f2-be91-1ba2e6a94b0f",
                                            "name": "Not Found response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "74fcc2ad-cee2-4332-b465-b08c59efa56b",
                                            "name": "Method Not Allowed response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Method Not Allowed",
                                            "code": 405,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7b986f7e-640b-4a25-b111-ae3fa15e7ea7",
                                            "name": "Too Many Requests response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Too Many Requests",
                                            "code": 429,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "0172e72f-cb4b-4309-b9d3-7c75ed28bab9",
                                            "name": "Internal Server Error response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "22ccac66-950a-433d-acea-d994fa0f2926",
                                            "name": "Not Implemented response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Implemented",
                                            "code": 501,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "2fcda07f-bc0c-4415-9063-76ac43d0e4d8",
                                            "name": "Bad Gateway response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Gateway",
                                            "code": 502,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "7fda2347-0d97-44c3-aa13-cabe8201dfd1",
                                            "name": "Service Unavailable response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "4b5631d0-29c0-42bb-8514-69132c8c3967",
                                            "name": "Gateway Timeout response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Gateway Timeout",
                                            "code": 504,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        },
                                        {
                                            "id": "ad2369e2-5aac-4290-89f1-8febe6a14e06",
                                            "name": "Bad Request response.",
                                            "originalRequest": {
                                                "method": "PATCH",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"values\": \"<object>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/assets/:id/data-outputs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "assets",
                                                        ":id",
                                                        "data-outputs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "100f8135-01a9-44c9-aaee-60ccbfdde1a5"
                        },
                        {
                            "name": "List all assets",
                            "id": "77b2d1b2-1f30-439a-87dc-1c8f12290a67",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/industrial/assets?limit=446&after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&assetIds=minim et,et minim cillum",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "industrial",
                                        "assets"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "assetIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                        }
                                    ]
                                },
                                "description": "List all assets in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "b1c59573-f4ea-483a-aa83-a926ddcd931e",
                                    "name": "Assets in the organization.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "147333da-3266-4c4a-981c-e287cc7cd38f",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Create an asset",
                            "id": "fc037a2f-3d21-4cee-af7a-bec42bc8193e",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"ad aliqua\",\n    \"customMetadata\": {\n        \"manufacturer\": \"Samsara\",\n        \"serialNumber\": \"123ABC\"\n    },\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"12345\",\n    \"locationType\": \"dataInput\",\n    \"parentId\": \"123abcde-4567-8910-1112-fghi1314jklm\",\n    \"runningStatusDataInputId\": \"67890\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/industrial/assets",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "industrial",
                                        "assets"
                                    ]
                                },
                                "description": "Create an asset with optional configuration parameters. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "a3774905-4097-4438-a80c-5d3e9cae6e8d",
                                    "name": "Newly created asset object",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"esse eiusmod labore reprehenderit\",\n    \"customMetadata\": {},\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"point\",\n    \"parentId\": \"cill\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRunning\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customMetadata\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dataOutputs\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationDataInput\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parentAsset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"runningStatusDataInput\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tags\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "4b75e006-58dc-4742-b2c2-59555a8ca04e",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"name\": \"esse eiusmod labore reprehenderit\",\n    \"customMetadata\": {},\n    \"location\": {\n        \"formattedAddress\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"latitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"longitude\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    \"locationDataInputId\": \"<string>\",\n    \"locationType\": \"point\",\n    \"parentId\": \"cill\",\n    \"runningStatusDataInputId\": \"<string>\",\n    \"tagIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/assets",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "assets"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "8b29b11c-5efd-4d69-bd4f-1cd1e5d9d97a"
                },
                {
                    "name": "data-inputs",
                    "item": [
                        {
                            "name": "data-points",
                            "item": [
                                {
                                    "name": "List most recent data points for data inputs",
                                    "id": "9f07ad78-3f44-4400-b123-095fee5a769b",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs/data-points?after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&dataInputIds=minim et,et minim cillum&assetIds=minim et,et minim cillum",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs",
                                                "data-points"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "dataInputIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                                }
                                            ]
                                        },
                                        "description": "Returns last known data points for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "ec821469-8e02-4076-9db0-240efca6a519",
                                            "name": "List of last known data input data points and pagination parameters",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "4b0ebb7f-f5f3-4148-8b76-b6b0102e5e87",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "Follow a real-time feed of data points for data inputs",
                                    "id": "dc5c45b7-3b70-443f-84d7-7ad0a5748d73",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs/data-points/feed?after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&dataInputIds=minim et,et minim cillum&assetIds=minim et,et minim cillum",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs",
                                                "data-points",
                                                "feed"
                                            ],
                                            "query": [
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "dataInputIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                                }
                                            ]
                                        },
                                        "description": "Follow a continuous feed of all data input data points.\n\nYour first call to this endpoint will provide you with the most recent data points for each data input and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get data point updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. We suggest waiting a minimum of 5 seconds before requesting updates. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "b784d637-8786-4fac-b765-0a2ad08e90fd",
                                            "name": "List of all data points for specified data inputs",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "18ffb160-41b3-4832-b336-be7777e5fa57",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points/feed?after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points",
                                                        "feed"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "List historical data points for data inputs",
                                    "id": "074e8547-08e3-47d2-890e-bc72264be847",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs/data-points/history?startTime=dolore consequat&endTime=dolore consequat&after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&dataInputIds=minim et,et minim cillum&assetIds=minim et,et minim cillum",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs",
                                                "data-points",
                                                "history"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "endTime",
                                                    "value": "dolore consequat",
                                                    "description": "(Required) An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "dolore consequat",
                                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                                },
                                                {
                                                    "key": "dataInputIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "minim et,et minim cillum",
                                                    "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                                }
                                            ]
                                        },
                                        "description": "Returns all known data points during the given time range for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "62082728-2ab2-47e1-a01b-0ca539e91657",
                                            "name": "List of all data points for the specified data inputs and time range.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points/history?startTime=<string>&endTime=<string>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "cc07b827-3ba8-498e-a68c-ac826b542514",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/industrial/data-inputs/data-points/history?startTime=<string>&endTime=<string>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&dataInputIds=<string>,<string>&assetIds=<string>,<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "industrial",
                                                        "data-inputs",
                                                        "data-points",
                                                        "history"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endTime",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "after",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "parentTagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "tagIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "dataInputIds",
                                                            "value": "<string>,<string>"
                                                        },
                                                        {
                                                            "key": "assetIds",
                                                            "value": "<string>,<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                        }
                                    ]
                                }
                            ],
                            "id": "60839ccd-570a-4b49-b6d2-67a3ac5ca9ac"
                        },
                        {
                            "name": "List all data inputs",
                            "id": "91b995d7-e840-4610-8e6d-4179cda14704",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/industrial/data-inputs?limit=446&after=dolore consequat&parentTagIds=minim et,et minim cillum&tagIds=minim et,et minim cillum&assetIds=minim et,et minim cillum",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "industrial",
                                        "data-inputs"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "446",
                                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                        },
                                        {
                                            "key": "after",
                                            "value": "dolore consequat",
                                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                        },
                                        {
                                            "key": "assetIds",
                                            "value": "minim et,et minim cillum",
                                            "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`"
                                        }
                                    ]
                                },
                                "description": "Returns all data inputs, optionally filtered by tags or asset ids. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "e8fc26d8-31a1-4025-bd5a-0574c567a0f7",
                                    "name": "List of data inputs with names, ids, and other metadata.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "10fe9dba-360d-4726-960c-e6998ff72fac",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/industrial/data-inputs?limit=<integer>&after=<string>&parentTagIds=<string>,<string>&tagIds=<string>,<string>&assetIds=<string>,<string>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "industrial",
                                                "data-inputs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "after",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "parentTagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "tagIds",
                                                    "value": "<string>,<string>"
                                                },
                                                {
                                                    "key": "assetIds",
                                                    "value": "<string>,<string>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "3551730f-7516-4614-9dd5-0a20e4730ac4"
                }
            ],
            "id": "a1ca3592-23aa-4272-adf1-d1bc7dbd54f8"
        },
        {
            "name": "preview/fleet/reports",
            "item": [
                {
                    "name": "[preview] Get fuel and energy efficiency driver reports.",
                    "id": "fc6e979a-1565-47c4-8b8a-e18a4c4ba42c",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=dolore consequat&endHour=dolore consequat&driverIds=minim et,et minim cillum&tagIds=dolore consequat&parentTagIds=dolore consequat&after=dolore consequat",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "preview",
                                "fleet",
                                "reports",
                                "drivers",
                                "fuel-energy"
                            ],
                            "query": [
                                {
                                    "key": "startHour",
                                    "value": "dolore consequat",
                                    "description": "(Required) A start time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Timezone will default to your organization's defined timezone if none is provided. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00)."
                                },
                                {
                                    "key": "endHour",
                                    "value": "dolore consequat",
                                    "description": "(Required) An end time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Timezone will default to your organization's defined timezone if none is provided. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00)."
                                },
                                {
                                    "key": "driverIds",
                                    "value": "minim et,et minim cillum",
                                    "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"
                                },
                                {
                                    "key": "tagIds",
                                    "value": "dolore consequat",
                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "dolore consequat",
                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "after",
                                    "value": "dolore consequat",
                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Get fuel and energy efficiency driver reports for the requested time range.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "d5fdf523-5d56-4944-b95e-2b13d1f17cc4",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"driverReports\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "e8e4496e-917b-48a9-9c94-1d34586ad329",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "921c7740-6958-4c02-ae7f-b297bdb52872",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "e8613837-06e9-485d-9531-42a99fb679c4",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "350f4741-6ae0-4148-b65c-aee19b789527",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "8fd47f58-701d-4040-8ad9-4b72d93be645",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "1dda11d0-b6e3-4c8d-98c1-946d8f0aedf9",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "a05c3a33-9897-412e-990c-12a3c5311774",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "0e13d01a-46c4-4acd-aaf7-15ada20ab859",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "41a618c7-eb11-4c42-bc7c-9489c6bf5612",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "83eb5a67-1f88-4192-8ce5-c4928c7e554c",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/drivers/fuel-energy?startHour=<string>&endHour=<string>&driverIds=<string>,<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "drivers",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "driverIds",
                                            "value": "<string>,<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "[preview] Get vehicle idling reports.",
                    "id": "4caf6109-912d-4f18-a29d-7ebccd03c5e8",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=dolore consequat&endTime=dolore consequat&vehicleIds=dolore consequat&tagIds=dolore consequat&parentTagIds=dolore consequat&ptoStatus=Active&minIdlingDurationMinutes=97681300",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "preview",
                                "fleet",
                                "reports",
                                "vehicle",
                                "idling"
                            ],
                            "query": [
                                {
                                    "key": "startTime",
                                    "value": "dolore consequat",
                                    "description": "(Required)  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                },
                                {
                                    "key": "endTime",
                                    "value": "dolore consequat",
                                    "description": "(Required)  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
                                },
                                {
                                    "key": "vehicleIds",
                                    "value": "dolore consequat",
                                    "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                },
                                {
                                    "key": "tagIds",
                                    "value": "dolore consequat",
                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "dolore consequat",
                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "ptoStatus",
                                    "value": "Active",
                                    "description": "A filter on the data based on power take-off being active or inactive.  Valid values: `Active`, `Inactive`"
                                },
                                {
                                    "key": "minIdlingDurationMinutes",
                                    "value": "97681300",
                                    "description": "A filter on the data based on a minimum idling duration."
                                }
                            ]
                        },
                        "description": "Get all vehicle idling reports for the requested time duration.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "9e248dc0-3088-49f2-beec-13e2699e0b5c",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"requestEndTime\": \"<string>\",\n \"requestStartTime\": \"<string>\"\n}"
                        },
                        {
                            "id": "08d7d11d-73f4-4fb7-b64c-6ac0b9ea6961",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "12c800b6-4eb7-4751-ba8f-5d18f0e20d4c",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "8ba87a5e-f4e7-4c2c-90f2-96ea98f6a229",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "e4dcdaba-7e65-4571-9ab9-2a258ea87a2a",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "ac856954-6ee3-4b9f-bcbe-2fa9ddd66520",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "ab78c6a9-2058-4542-842a-8028ecc0fa1d",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "f625d383-bc83-411f-90c2-e27f284174cc",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "89d134fa-cf6d-4a68-b53f-5e75ac17113b",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "464c53c4-23b3-4bea-aaba-d248987f86c3",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "e9a34600-2375-48ab-8c65-897fcfa355e0",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicle/idling?startTime=<string>&endTime=<string>&vehicleIds=<string>&tagIds=<string>&parentTagIds=<string>&ptoStatus=<string>&minIdlingDurationMinutes=<integer>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicle",
                                        "idling"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endTime",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "ptoStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "minIdlingDurationMinutes",
                                            "value": "<integer>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "[preview] Get fuel and energy efficiency vehicle reports.",
                    "id": "65af91a9-6009-4a5f-bb39-fc52c0c0c05d",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=dolore consequat&endHour=dolore consequat&vehicleIds=dolore consequat&energyType=fuel&tagIds=dolore consequat&parentTagIds=dolore consequat&after=dolore consequat",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "preview",
                                "fleet",
                                "reports",
                                "vehicles",
                                "fuel-energy"
                            ],
                            "query": [
                                {
                                    "key": "startHour",
                                    "value": "dolore consequat",
                                    "description": "(Required) A start time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Timezone will default to your organization's defined timezone if none is provided. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00)."
                                },
                                {
                                    "key": "endHour",
                                    "value": "dolore consequat",
                                    "description": "(Required) An end time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Timezone will default to your organization's defined timezone if none is provided. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00)."
                                },
                                {
                                    "key": "vehicleIds",
                                    "value": "dolore consequat",
                                    "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`"
                                },
                                {
                                    "key": "energyType",
                                    "value": "fuel",
                                    "description": "The type of energy used by the vehicle.  Valid values: `fuel`, `hybrid`, `electric`"
                                },
                                {
                                    "key": "tagIds",
                                    "value": "dolore consequat",
                                    "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
                                },
                                {
                                    "key": "parentTagIds",
                                    "value": "dolore consequat",
                                    "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"
                                },
                                {
                                    "key": "after",
                                    "value": "dolore consequat",
                                    "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Get fuel and energy efficiency vehicle reports for the requested time range.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "655be758-fd40-454f-8c48-01ff9ad78d2f",
                            "name": "OK response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"endHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startHour\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"vehicleReports\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "9a23f897-03fb-4bf8-a279-61c1507212be",
                            "name": "Unauthorized response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "015a928c-3ec3-4148-90f4-06c641e29d9f",
                            "name": "Not Found response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "216659ad-4e9e-41e3-bc19-aac7e338b9b9",
                            "name": "Method Not Allowed response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "cc40a72b-3c28-4fee-9daa-adc6715f9287",
                            "name": "Too Many Requests response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "236dd66d-35f6-41a8-a279-1c2d63f1b949",
                            "name": "Internal Server Error response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "152bb078-e1b3-4a8f-bfdf-8586727fc291",
                            "name": "Not Implemented response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "49c24a6e-e75a-4c5a-a8f4-868deb2bd4cf",
                            "name": "Bad Gateway response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Gateway",
                            "code": 502,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "6805b12d-936e-49c2-b152-527ba7a8bd66",
                            "name": "Service Unavailable response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "a0c4c1c9-e0fa-4332-89a1-a37d7a253e49",
                            "name": "Gateway Timeout response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Gateway Timeout",
                            "code": 504,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        },
                        {
                            "id": "25c83a80-e684-4469-9174-7e8c4bd602d2",
                            "name": "Bad Request response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/preview/fleet/reports/vehicles/fuel-energy?startHour=<string>&endHour=<string>&vehicleIds=<string>&energyType=<string>&tagIds=<string>&parentTagIds=<string>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "preview",
                                        "fleet",
                                        "reports",
                                        "vehicles",
                                        "fuel-energy"
                                    ],
                                    "query": [
                                        {
                                            "key": "startHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "endHour",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "vehicleIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "energyType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "parentTagIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "51a316b2-df6b-41bd-8496-cb158545ba00"
        },
        {
            "name": "tags",
            "item": [
                {
                    "name": "{id}",
                    "item": [
                        {
                            "name": "Delete a tag",
                            "id": "7a6b4dec-5ec4-405f-af62-b0f9862bd02d",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/tags/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "5258884f-b1a1-4f19-b504-eeb0b3278670",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`."
                                        }
                                    ]
                                },
                                "description": "Permanently deletes a tag. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "6e639237-69fa-4bf0-8467-17959e6b4723",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "27a1f6cd-1718-46ba-8161-c41063f57796",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve a tag",
                            "id": "2fb9a4d1-d3df-4d1f-b665-5b55deb145eb",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/tags/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "57c529e6-970e-4a7e-849d-3015e4210f19",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`."
                                        }
                                    ]
                                },
                                "description": "Fetch a tag by id. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "03e95f49-f972-4963-82c9-042f963cea23",
                                    "name": "The tag corresponding to request id.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                },
                                {
                                    "id": "ed5997ab-3dd1-4eae-9246-e9565a7d745c",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a tag",
                            "id": "a85a2391-ca1e-4529-8f34-af607f927bbd",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": {\n        \"maintenanceId\": \"250020\",\n        \"payrollId\": \"ABFS18600\"\n    },\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"California\",\n    \"parentTagId\": \"4815\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tags/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "7724531f-3de4-4a3e-9984-0d7a9ec47cff",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`."
                                        }
                                    ]
                                },
                                "description": "Update an existing tag. **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard. \n\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource. \n\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "4fd12dbc-d5f8-4e79-83e3-cf9b1727de62",
                                    "name": "Returns updated tag object.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                },
                                {
                                    "id": "0cbcf365-7447-4d72-941c-35de5403ca0d",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a tag",
                            "id": "e82cdcd9-65b4-43f0-99b5-0184040f58d2",
                            "request": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"California\",\n    \"parentTagId\": \"4815\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tags/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "cd4eec7e-eaa0-426b-ad5d-b54ca9ea08f0",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`."
                                        }
                                    ]
                                },
                                "description": "Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "c03afd2e-e769-4aaf-b8fd-0f6b521766ad",
                                    "name": "The updated tag data.",
                                    "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                },
                                {
                                    "id": "1ecc04d1-e74c-4b1c-b721-b567cf145022",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/tags/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "tags",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "024e14d7-34f3-41bb-abae-861d4e85a5e7"
                },
                {
                    "name": "List all tags",
                    "id": "c3359390-b047-45d7-85ab-c875b399c569",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tags?limit=446&after=dolore consequat",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tags"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "446",
                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                },
                                {
                                    "key": "after",
                                    "value": "dolore consequat",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Return all of the tags for an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "2757d5ba-4c85-45a1-8f5c-91732cee3d23",
                            "name": "List of tags.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tags?limit=<integer>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "c3b81a88-f2dd-4e32-994e-9771605522a3",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tags?limit=<integer>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create a tag",
                    "id": "55c9dda4-f312-42e6-b308-648cb48adaa3",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"California\",\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": {\n        \"maintenanceId\": \"250020\",\n        \"payrollId\": \"ABFS18600\"\n    },\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"parentTagId\": \"4815\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tags",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tags"
                            ]
                        },
                        "description": "Create a new tag for the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "4cd092f5-fd58-4a99-852d-902e522e99f6",
                            "name": "Newly created tag object, including the new tag ID.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tags",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                        },
                        {
                            "id": "60da5092-604e-4dad-abbf-d68a1fc24f7b",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"assets\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"drivers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"externalIds\": \"<object>\",\n    \"machines\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"vehicles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tags",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tags"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "14e895e4-e6ff-474b-9733-5e1f4a5de130"
        },
        {
            "name": "users",
            "item": [
                {
                    "name": "{id}",
                    "item": [
                        {
                            "name": "Delete a user",
                            "id": "cb7b7e01-9c64-45eb-a67c-490c63ebed9b",
                            "request": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "2332d740-272b-4253-b876-963663a6823a",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) Unique identifier for the user."
                                        }
                                    ]
                                },
                                "description": "Delete the given user. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "57943b38-b45d-45cf-9d46-0d97c0eea0b7",
                                    "name": "A successful DELETE response is a 204 with no content.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                },
                                {
                                    "id": "184e7fe1-6ce8-4d92-92c5-814058f364f9",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Retrieve a user",
                            "id": "8797a112-e19b-4b1d-b5d8-72cfb44ad329",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "aeb95534-e872-4f47-9b2a-aba34ba27259",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) Unique identifier for the user."
                                        }
                                    ]
                                },
                                "description": "Get a specific user's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "45dd1a87-0c25-453b-a9ce-b377ace45b3c",
                                    "name": "Returns the specified user.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"authType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"roles\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "35423c72-c629-43f0-bb74-6b765dedcb9c",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        },
                        {
                            "name": "Update a user",
                            "id": "a69b3952-a6e6-4d77-b782-5c3e744ac633",
                            "request": {
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authType\": \"default\",\n    \"name\": \"Bob Smith\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "d5e1bd25-c1a2-46bd-b0bf-be8a46d5fc0b",
                                            "key": "id",
                                            "value": "dolore consequat",
                                            "description": "(Required) Unique identifier for the user."
                                        }
                                    ]
                                },
                                "description": "Update a specific user's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "21f41582-1655-4237-b9b8-7957df9f60ab",
                                    "name": "Updated user object with ID.",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"data\": {\n  \"authType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"roles\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                },
                                {
                                    "id": "ad61dc57-61a6-49c1-84b1-d98f6d0cd7fa",
                                    "name": "Error response",
                                    "originalRequest": {
                                        "method": "PATCH",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"authType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/users/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                                }
                            ]
                        }
                    ],
                    "id": "0a3d23f3-5555-4d61-9ea6-f2023ecf04e7"
                },
                {
                    "name": "List all users",
                    "id": "a19eee5e-1007-42c3-a780-e695a79e0220",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users?limit=446&after=dolore consequat",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "446",
                                    "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                                },
                                {
                                    "key": "after",
                                    "value": "dolore consequat",
                                    "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                                }
                            ]
                        },
                        "description": "Returns a list of all users in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "b50ebded-01ef-4a15-bb64-7f61be1a9bcc",
                            "name": "List all users.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users?limit=<integer>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "59b98a7f-9aa6-4b35-8723-e08a0530313a",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users?limit=<integer>&after=<string>",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "<integer>"
                                        },
                                        {
                                            "key": "after",
                                            "value": "<string>"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create a user",
                    "id": "5cbd1ae0-777b-44e9-9dba-2eaa95e9231f",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"authType\": \"default\",\n    \"email\": \"user@company.com\",\n    \"name\": \"Bob Smith\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ]
                        },
                        "description": "Add a user to the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                    },
                    "response": [
                        {
                            "id": "2b81ca44-41b4-4e8c-bf96-62ccc35e17f2",
                            "name": "Newly created user object with ID.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authType\": \"<string>\",\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"data\": {\n  \"authType\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"roles\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "6b06df76-0619-4eda-be7d-fc119f130087",
                            "name": "Error response",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"authType\": \"<string>\",\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                        }
                    ]
                }
            ],
            "id": "fc48f5d2-eed8-495d-8a3c-b4d9a36f78c2"
        },
        {
            "name": "v1",
            "item": [
                {
                    "name": "fleet",
                    "item": [
                        {
                            "name": "assets",
                            "item": [
                                {
                                    "name": "{asset id}",
                                    "item": [
                                        {
                                            "name": "List historical locations for a given asset",
                                            "id": "f56296c0-048f-4d5b-a915-1f44830ccc04",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/locations?startMs=51611335&endMs=51611335",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        ":asset_id",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "51611335",
                                                            "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs."
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "51611335",
                                                            "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs."
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "1cba2034-af5d-4735-8fb0-42871f4900bf",
                                                            "key": "asset_id",
                                                            "value": "51611335",
                                                            "description": "(Required) ID of the asset. Must contain only digits 0-9."
                                                        }
                                                    ]
                                                },
                                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nList historical locations for a given asset. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "afa256c7-00b9-460a-8bf0-01c9abdc0c3c",
                                                    "name": "Asset location details.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/locations?startMs=<integer>&endMs=<integer>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "fleet",
                                                                "assets",
                                                                ":asset_id",
                                                                "locations"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startMs",
                                                                    "value": "<integer>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<integer>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "asset_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "[\n {\n  \"latitude\": \"<number>\",\n  \"location\": \"<string>\",\n  \"longitude\": \"<number>\",\n  \"speedMilesPerHour\": \"<number>\",\n  \"time\": \"<number>\"\n },\n {\n  \"latitude\": \"<number>\",\n  \"location\": \"<string>\",\n  \"longitude\": \"<number>\",\n  \"speedMilesPerHour\": \"<number>\",\n  \"time\": \"<number>\"\n }\n]"
                                                },
                                                {
                                                    "id": "a5a8e0ec-3625-4dee-b005-9fe1cc2ea18f",
                                                    "name": "Unexpected error.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/locations?startMs=<integer>&endMs=<integer>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "fleet",
                                                                "assets",
                                                                ":asset_id",
                                                                "locations"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startMs",
                                                                    "value": "<integer>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<integer>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "asset_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "\"<string>\""
                                                }
                                            ]
                                        },
                                        {
                                            "name": "List stats for a given reefer",
                                            "id": "0ee60fb6-1e80-4e35-8f04-85d0e6eddd71",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/reefer?startMs=51611335&endMs=51611335",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        ":asset_id",
                                                        "reefer"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "51611335",
                                                            "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs."
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "51611335",
                                                            "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs."
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "43f7ad6e-ca9e-49ac-abc5-8aaaa4557476",
                                                            "key": "asset_id",
                                                            "value": "51611335",
                                                            "description": "(Required) ID of the asset. Must contain only digits 0-9."
                                                        }
                                                    ]
                                                },
                                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the reefer-specific stats of an asset. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "d59f39c5-2a4d-4fb8-b64f-d36dbeaf694e",
                                                    "name": "Reefer-specific asset details.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/reefer?startMs=<integer>&endMs=<integer>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "fleet",
                                                                "assets",
                                                                ":asset_id",
                                                                "reefer"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startMs",
                                                                    "value": "<integer>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<integer>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "asset_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"assetType\": \"<string>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"reeferStats\": {\n  \"alarms\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"engineHours\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fuelPercentage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"powerStatus\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"returnAirTemp\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"setPoint\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                                },
                                                {
                                                    "id": "0b1beed9-de9c-4d56-bf08-5b1786f09f0c",
                                                    "name": "Unexpected error.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/fleet/assets/:asset_id/reefer?startMs=<integer>&endMs=<integer>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "fleet",
                                                                "assets",
                                                                ":asset_id",
                                                                "reefer"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "startMs",
                                                                    "value": "<integer>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<integer>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "asset_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "\"<string>\""
                                                }
                                            ]
                                        }
                                    ],
                                    "id": "0af32cfd-d6a0-451e-b0f3-5f5d6c968306"
                                },
                                {
                                    "name": "List all assets",
                                    "id": "f22baaac-dac5-4810-833f-b45765b4e378",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/assets",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "assets"
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all of the assets. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "b71704c8-581f-4339-bbf4-6f2860b933b9",
                                            "name": "List of assets.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"assets\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "db4e892d-c9d7-48b6-82d0-743abd60c4d4",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "List current location for all assets",
                                    "id": "c1f994a5-2197-4579-ba91-e59b39ab5a95",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/assets/locations?startingAfter=dolore consequat&endingBefore=dolore consequat&limit=-85683806.7659658",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "assets",
                                                "locations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startingAfter",
                                                    "value": "dolore consequat",
                                                    "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter."
                                                },
                                                {
                                                    "key": "endingBefore",
                                                    "value": "dolore consequat",
                                                    "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter."
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "-85683806.7659658",
                                                    "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch current locations of all assets. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "37a1fa77-b057-4edb-8f93-5517d7903c46",
                                            "name": "List of assets and their current locations.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/locations?startingAfter=<string>&endingBefore=<string>&limit=<number>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<number>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"assets\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasPrevPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "d7a3f643-7768-43e4-90e6-46666b5e8f94",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/locations?startingAfter=<string>&endingBefore=<string>&limit=<number>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        "locations"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<number>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "List stats for all reefers",
                                    "id": "d00b5974-6c59-4c45-b612-5376a7e79e87",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/assets/reefers?startMs=51611335&endMs=51611335&startingAfter=dolore consequat&endingBefore=dolore consequat&limit=-85683806.7659658",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "assets",
                                                "reefers"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "51611335",
                                                    "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "51611335",
                                                    "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs."
                                                },
                                                {
                                                    "key": "startingAfter",
                                                    "value": "dolore consequat",
                                                    "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter."
                                                },
                                                {
                                                    "key": "endingBefore",
                                                    "value": "dolore consequat",
                                                    "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter."
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "-85683806.7659658",
                                                    "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetches all reefers and reefer-specific stats. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "70a79d7f-8687-48c7-a63e-3e616738b2ed",
                                            "name": "All org reefers and reefer-specific details.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/reefers?startMs=<integer>&endMs=<integer>&startingAfter=<string>&endingBefore=<string>&limit=<number>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        "reefers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<number>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasPrevPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "27a16de5-b874-4c0b-8ab2-a3c15bd64c7a",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/assets/reefers?startMs=<integer>&endMs=<integer>&startingAfter=<string>&endingBefore=<string>&limit=<number>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "assets",
                                                        "reefers"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<number>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "21a9c1c9-1b27-44d3-8a62-d1d9f92de6c2"
                        },
                        {
                            "name": "drivers",
                            "item": [
                                {
                                    "name": "Fetch driver safety score",
                                    "id": "fea2c2a0-0c3a-4286-a3c5-a87a80e7645f",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/drivers/:driverId/safety/score?startMs=51611335&endMs=51611335",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "drivers",
                                                ":driverId",
                                                "safety",
                                                "score"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "51611335",
                                                    "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "51611335",
                                                    "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "07dcdb93-bf4d-4ded-aa95-bc358eb4eabd",
                                                    "key": "driverId",
                                                    "value": "51611335",
                                                    "description": "(Required) ID of the driver. Must contain only digits 0-9."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the safety score for the driver. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "c9979709-b5bc-4adf-9175-43d59f61a741",
                                            "name": "Safety score details.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/drivers/:driverId/safety/score?startMs=<integer>&endMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "drivers",
                                                        ":driverId",
                                                        "safety",
                                                        "score"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "driverId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"crashCount\": \"<integer>\",\n \"driverId\": \"<integer>\",\n \"harshAccelCount\": \"<integer>\",\n \"harshBrakingCount\": \"<integer>\",\n \"harshEvents\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"harshTurningCount\": \"<integer>\",\n \"safetyScore\": \"<integer>\",\n \"safetyScoreRank\": \"<string>\",\n \"timeOverSpeedLimitMs\": \"<integer>\",\n \"totalDistanceDrivenMeters\": \"<integer>\",\n \"totalHarshEventCount\": \"<integer>\",\n \"totalTimeDrivenMs\": \"<integer>\"\n}"
                                        },
                                        {
                                            "id": "e1257620-50e4-49f8-885f-77b1395136e3",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/drivers/:driverId/safety/score?startMs=<integer>&endMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "drivers",
                                                        ":driverId",
                                                        "safety",
                                                        "score"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "driverId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Set a duty status for a specific driver",
                                    "id": "cab7a7cd-0f74-4833-9000-52e4218a3ffa",
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"duty_status\": \"ON_DUTY\",\n    \"location\": \"Loading dock\",\n    \"remark\": \"Beginning On Duty Shift\",\n    \"status_change_at_ms\": 1580834793568,\n    \"vehicle_id\": 1234\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/drivers/:driver_id/hos/duty_status",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "drivers",
                                                ":driver_id",
                                                "hos",
                                                "duty_status"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "718eba1c-c660-4dd1-a83b-f299abb37b59",
                                                    "key": "driver_id",
                                                    "value": "51611335",
                                                    "description": "(Required) ID of the driver for whom the duty status is being set."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nSet an individual driver’s current duty status to 'On Duty' or 'Off Duty'.\n\n To ensure compliance with the ELD Mandate, only  authenticated drivers can make direct duty status changes on their own logbook. Any system external to the Samsara Driver App using this endpoint to trigger duty status changes must ensure that such changes are only triggered directly by the driver in question and that the driver has been properly authenticated. This endpoint should not be used to algorithmically trigger duty status changes nor should it be used by personnel besides the driver to trigger duty status changes on the driver’s behalf. Carriers and their drivers are ultimately responsible for maintaining accurate logs and should confirm that their use of the endpoint is compliant with the ELD Mandate. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "7d30d5d9-2c9b-44be-8582-7937d6e5ac1a",
                                            "name": "Successfully changed duty status. No response body is returned.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"duty_status\": \"<string>\",\n    \"location\": \"<string>\",\n    \"remark\": \"<string>\",\n    \"status_change_at_ms\": \"<int64>\",\n    \"vehicle_id\": \"<int64>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/drivers/:driver_id/hos/duty_status",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "drivers",
                                                        ":driver_id",
                                                        "hos",
                                                        "duty_status"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "driver_id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": ""
                                        },
                                        {
                                            "id": "5eb0bc2e-b2b8-46b5-a4b1-dc70fc85dc4e",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"duty_status\": \"<string>\",\n    \"location\": \"<string>\",\n    \"remark\": \"<string>\",\n    \"status_change_at_ms\": \"<int64>\",\n    \"vehicle_id\": \"<int64>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/drivers/:driver_id/hos/duty_status",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "drivers",
                                                        ":driver_id",
                                                        "hos",
                                                        "duty_status"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "driver_id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "5aec1b3e-b508-44ad-af4b-33ec5613702d"
                        },
                        {
                            "name": "messages",
                            "item": [
                                {
                                    "name": "Get all messages.",
                                    "id": "a231d65d-2dff-46a2-98de-79de6cbc5382",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/messages?endMs=51611335&durationMs=51611335",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "messages"
                                            ],
                                            "query": [
                                                {
                                                    "key": "endMs",
                                                    "value": "51611335",
                                                    "description": "Time in unix milliseconds that represents the end of time range of messages to return. Used in combination with durationMs. Defaults to now."
                                                },
                                                {
                                                    "key": "durationMs",
                                                    "value": "51611335",
                                                    "description": "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet all messages. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "5451cdbb-ad77-4329-a73f-eac04456f046",
                                            "name": "Returns the fetched messages from most recently sent to least recently sent.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/messages?endMs=<integer>&durationMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "messages"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "durationMs",
                                                            "value": "<integer>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "21d2bf66-9e6f-4459-95b6-a18e27bcefdb",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/messages?endMs=<integer>&durationMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "messages"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "durationMs",
                                                            "value": "<integer>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Send a message to a list of driver ids.",
                                    "id": "0a9ae15e-9aa9-45d7-a54c-25ea861088dc",
                                    "request": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"driverIds\": [\n        111,\n        222,\n        333\n    ],\n    \"text\": \"This is a message.\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/messages",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "messages"
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nSend a message to a list of driver ids. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "838c8bc1-f692-4290-b2a1-91ff6d4526d8",
                                            "name": "Returns the created messages.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverIds\": [\n        \"<int64>\",\n        \"<int64>\"\n    ],\n    \"text\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/messages",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "messages"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "db37f743-d6af-4c5f-85eb-50d53a9a2f11",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "POST",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n    \"driverIds\": [\n        \"<int64>\",\n        \"<int64>\"\n    ],\n    \"text\": \"<string>\"\n}"
                                                },
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/messages",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "messages"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "663def89-6afd-4fb0-86b1-b700c5d52363"
                        },
                        {
                            "name": "trailers",
                            "item": [
                                {
                                    "name": "List trailer assignments for all trailers",
                                    "id": "61d061b7-d613-4a95-9a2f-2d9d5bffec65",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/trailers/assignments?startMs=51611335&endMs=51611335&limit=-85683806.7659658&startingAfter=dolore consequat&endingBefore=dolore consequat",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "trailers",
                                                "assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "51611335",
                                                    "description": "Timestamp in Unix epoch miliseconds representing the start of the period to fetch. Omitting both startMs and endMs only returns current assignments."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "51611335",
                                                    "description": "Timestamp in Unix epoch miliseconds representing the end of the period to fetch. Omitting endMs sets endMs as the current time"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "-85683806.7659658",
                                                    "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'."
                                                },
                                                {
                                                    "key": "startingAfter",
                                                    "value": "dolore consequat",
                                                    "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter."
                                                },
                                                {
                                                    "key": "endingBefore",
                                                    "value": "dolore consequat",
                                                    "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch trailer assignment data for all trailers in your organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "fe747a5e-1d91-4e2b-bc71-77c82790e785",
                                            "name": "Returns trailer assignment data for all trailers in your organization",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/trailers/assignments?startMs=<integer>&endMs=<integer>&limit=<number>&startingAfter=<string>&endingBefore=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "trailers",
                                                        "assignments"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<number>"
                                                        },
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasPrevPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"trailers\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "f6958a2c-47f4-4407-929a-96280d39bf58",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/trailers/assignments?startMs=<integer>&endMs=<integer>&limit=<number>&startingAfter=<string>&endingBefore=<string>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "trailers",
                                                        "assignments"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "limit",
                                                            "value": "<number>"
                                                        },
                                                        {
                                                            "key": "startingAfter",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "endingBefore",
                                                            "value": "<string>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "List trailer assignments for a given trailer",
                                    "id": "086b29c2-177c-459c-9ef8-2a70aeee170c",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/trailers/:trailerId/assignments?startMs=51611335&endMs=51611335",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "trailers",
                                                ":trailerId",
                                                "assignments"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "51611335",
                                                    "description": "Timestamp in Unix epoch milliseconds representing the start of the period to fetch. Omitting both startMs and endMs only returns current assignments."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "51611335",
                                                    "description": "Timestamp in Unix epoch milliseconds representing the end of the period to fetch. Omitting endMs sets endMs as the current time"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "ed957e54-5ca5-4b52-9d87-ec984bb0488d",
                                                    "key": "trailerId",
                                                    "value": "51611335",
                                                    "description": "(Required) ID of trailer. Must contain only digits 0-9."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch trailer assignment data for a single trailer. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "883a5452-2bc6-4d6e-8917-418363546f8b",
                                            "name": "Returns trailer assignment data for a single trailer",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/trailers/:trailerId/assignments?startMs=<integer>&endMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "trailers",
                                                        ":trailerId",
                                                        "assignments"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "trailerId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"id\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"name\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"trailerAssignments\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n }\n}"
                                        },
                                        {
                                            "id": "bb80904e-d034-4102-92a8-6461443ff0c8",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/trailers/:trailerId/assignments?startMs=<integer>&endMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "trailers",
                                                        ":trailerId",
                                                        "assignments"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "trailerId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "72ebcc45-030a-4358-a70f-50e1bd49ec43"
                        },
                        {
                            "name": "vehicles/{vehicle Id}/safety",
                            "item": [
                                {
                                    "name": "Fetch harsh events",
                                    "id": "831c6579-9ac7-4191-ac11-cf3065802792",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/harsh_event?timestamp=51611335",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "vehicles",
                                                ":vehicleId",
                                                "safety",
                                                "harsh_event"
                                            ],
                                            "query": [
                                                {
                                                    "key": "timestamp",
                                                    "value": "51611335",
                                                    "description": "(Required) Timestamp in milliseconds representing the timestamp of a harsh event."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "2566f287-5fa6-4e9e-bce0-c52688b5461b",
                                                    "key": "vehicleId",
                                                    "value": "51611335",
                                                    "description": "(Required) ID of the vehicle. Must contain only digits 0-9."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch harsh event details for a vehicle. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "e35dc1a4-a7e5-4613-9044-c5b82e80a879",
                                            "name": "Harsh event details.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/harsh_event?timestamp=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "vehicles",
                                                        ":vehicleId",
                                                        "safety",
                                                        "harsh_event"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "timestamp",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "vehicleId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"harshEventType\": \"<string>\",\n \"incidentReportUrl\": \"<string>\",\n \"downloadForwardVideoUrl\": \"<string>\",\n \"downloadInwardVideoUrl\": \"<string>\",\n \"downloadTrackedInwardVideoUrl\": \"<string>\",\n \"isDistracted\": \"<boolean>\",\n \"location\": {\n  \"address\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"latitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"longitude\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                                        },
                                        {
                                            "id": "afa4d2e0-7bb8-413e-8276-50b247e85f5d",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/harsh_event?timestamp=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "vehicles",
                                                        ":vehicleId",
                                                        "safety",
                                                        "harsh_event"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "timestamp",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "vehicleId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Fetch vehicle safety scores",
                                    "id": "9f3bfb14-637f-4e33-8cb9-6636c7fb61ac",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/score?startMs=51611335&endMs=51611335",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "vehicles",
                                                ":vehicleId",
                                                "safety",
                                                "score"
                                            ],
                                            "query": [
                                                {
                                                    "key": "startMs",
                                                    "value": "51611335",
                                                    "description": "(Required) Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "51611335",
                                                    "description": "(Required) Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "id": "59fd04c1-df55-4b92-b50f-3a41c294a7d0",
                                                    "key": "vehicleId",
                                                    "value": "51611335",
                                                    "description": "(Required) ID of the vehicle. Must contain only digits 0-9."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the safety score for the vehicle. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "a10c0d8d-e956-46f9-8894-b1451de13975",
                                            "name": "Safety score details.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/score?startMs=<integer>&endMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "vehicles",
                                                        ":vehicleId",
                                                        "safety",
                                                        "score"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "vehicleId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"crashCount\": \"<integer>\",\n \"harshAccelCount\": \"<integer>\",\n \"harshBrakingCount\": \"<integer>\",\n \"harshEvents\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"harshTurningCount\": \"<integer>\",\n \"safetyScore\": \"<integer>\",\n \"safetyScoreRank\": \"<string>\",\n \"timeOverSpeedLimitMs\": \"<integer>\",\n \"totalDistanceDrivenMeters\": \"<integer>\",\n \"totalHarshEventCount\": \"<integer>\",\n \"totalTimeDrivenMs\": \"<integer>\",\n \"vehicleId\": \"<integer>\"\n}"
                                        },
                                        {
                                            "id": "a769190e-a198-4aea-834a-92359a692e7b",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/score?startMs=<integer>&endMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "fleet",
                                                        "vehicles",
                                                        ":vehicleId",
                                                        "safety",
                                                        "score"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "startMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "vehicleId"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "ccd50df3-b54f-4273-93d6-9c48aa5c0242"
                        },
                        {
                            "name": "Delete a route",
                            "id": "f84f4e0d-6ca8-4840-a956-b4e78afb1776",
                            "request": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"apply_to_future_routes\": true\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id_or_external_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "fleet",
                                        "dispatch",
                                        "routes",
                                        ":route_id_or_external_id"
                                    ],
                                    "variable": [
                                        {
                                            "id": "52ac1f54-5955-4d4d-b2be-930082de3859",
                                            "key": "route_id_or_external_id",
                                            "value": "dolore consequat",
                                            "description": "(Required) ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
                                        }
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nDelete a dispatch route and its associated jobs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "7d6c82da-0c9c-4cb4-ba7b-5df74795fceb",
                                    "name": "Successfully deleted the dispatch route. No response body is returned.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"apply_to_future_routes\": \"<boolean>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id_or_external_id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "dispatch",
                                                "routes",
                                                ":route_id_or_external_id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "route_id_or_external_id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": ""
                                },
                                {
                                    "id": "eaed5739-a6f2-4f77-9a75-736b0637f108",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "DELETE",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"apply_to_future_routes\": \"<boolean>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id_or_external_id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "dispatch",
                                                "routes",
                                                ":route_id_or_external_id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "route_id_or_external_id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get HOS signin and signout",
                            "id": "10c762e2-688a-435e-a050-44a4647bb5c2",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/fleet/hos_authentication_logs?driverId=51611335&startMs=51611335&endMs=51611335",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "fleet",
                                        "hos_authentication_logs"
                                    ],
                                    "query": [
                                        {
                                            "key": "driverId",
                                            "value": "51611335",
                                            "description": "(Required) Driver ID to query."
                                        },
                                        {
                                            "key": "startMs",
                                            "value": "51611335",
                                            "description": "(Required) Beginning of the time range, specified in milliseconds UNIX time."
                                        },
                                        {
                                            "key": "endMs",
                                            "value": "51611335",
                                            "description": "(Required) End of the time range, specified in milliseconds UNIX time."
                                        }
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet the HOS (hours of service) signin and signout logs for the specified driver. The response includes 4 fields that are now deprecated.\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "f87f7d37-adb6-4f37-acd6-42ffd2e2593a",
                                    "name": "HOS authentication logs for the specified driver.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/hos_authentication_logs?driverId=<integer>&startMs=<integer>&endMs=<integer>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "hos_authentication_logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverId",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "startMs",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<integer>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"authenticationLogs\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "6968cb9e-411e-40cd-b510-d025af7d2184",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/hos_authentication_logs?driverId=<integer>&startMs=<integer>&endMs=<integer>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "hos_authentication_logs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "driverId",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "startMs",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<integer>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get vehicles with engine faults or check lights",
                            "id": "71c0f8e7-31bf-4eb6-8961-7618c7c30225",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/fleet/maintenance/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "fleet",
                                        "maintenance",
                                        "list"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet list of the vehicles with any engine faults or check light data. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "d2fa5c3a-4ece-4c0a-9145-b3748005e5bd",
                                    "name": "List of vehicles and maintenance information about each.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/maintenance/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "maintenance",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"vehicles\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "b30344c2-9ee5-400b-9f5d-6c22ae74768b",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/maintenance/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "maintenance",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get vehicle trips",
                            "id": "40e0c411-b042-44ab-9639-12b9152ad6db",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/fleet/trips?vehicleId=51611335&startMs=51611335&endMs=51611335",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "fleet",
                                        "trips"
                                    ],
                                    "query": [
                                        {
                                            "key": "vehicleId",
                                            "value": "51611335",
                                            "description": "(Required) Vehicle ID to query."
                                        },
                                        {
                                            "key": "startMs",
                                            "value": "51611335",
                                            "description": "(Required) Beginning of the time range, specified in milliseconds UNIX time. Limited to a 90 day window with respect to startMs and endMs"
                                        },
                                        {
                                            "key": "endMs",
                                            "value": "51611335",
                                            "description": "(Required) End of the time range, specified in milliseconds UNIX time."
                                        }
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical trips data for specified vehicle. This method returns a set of historical trips data for the specified vehicle in the specified time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "57345b29-23d8-4c39-a404-df3755ff9dc3",
                                    "name": "List of trips taken by the requested vehicle within the specified timeframe. Ongoing trips will be returned with 9223372036854775807 as their endMs.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/trips?vehicleId=<integer>&startMs=<integer>&endMs=<integer>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "trips"
                                            ],
                                            "query": [
                                                {
                                                    "key": "vehicleId",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "startMs",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<integer>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"trips\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "27c3a774-ef3e-4adb-9cd5-3e3482d8d677",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/fleet/trips?vehicleId=<integer>&startMs=<integer>&endMs=<integer>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "fleet",
                                                "trips"
                                            ],
                                            "query": [
                                                {
                                                    "key": "vehicleId",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "startMs",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "<integer>"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        }
                    ],
                    "id": "0b44d06a-10fe-4378-a508-6eaf02b28543"
                },
                {
                    "name": "industrial/vision",
                    "item": [
                        {
                            "name": "cameras",
                            "item": [
                                {
                                    "name": "Fetch industrial cameras",
                                    "id": "18c5f514-bf3e-4ed7-9509-6d6412ef300f",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/cameras",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "cameras"
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all cameras. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "be4a891f-2514-4958-bc83-a5e95d77b03b",
                                            "name": "Returns details about a camera.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/cameras",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "cameras"
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "[\n {\n  \"cameraId\": \"<long>\",\n  \"cameraName\": \"<string>\",\n  \"ethernetIp\": \"<string>\",\n  \"wifiIp\": \"<string>\"\n },\n {\n  \"cameraId\": \"<long>\",\n  \"cameraName\": \"<string>\",\n  \"ethernetIp\": \"<string>\",\n  \"wifiIp\": \"<string>\"\n }\n]"
                                        },
                                        {
                                            "id": "6618a664-ddfd-4b76-8110-758a554b20fb",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/cameras",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "cameras"
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                },
                                {
                                    "name": "Fetch industrial camera programs",
                                    "id": "150fc1b5-983b-4a65-8332-7b8c7b1367e7",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/cameras/:camera_id/programs",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "cameras",
                                                ":camera_id",
                                                "programs"
                                            ],
                                            "variable": [
                                                {
                                                    "id": "6ee44722-bd65-46f0-81fc-e5a2c704e928",
                                                    "key": "camera_id",
                                                    "value": "51611335",
                                                    "description": "(Required) The camera_id should be valid for the given accessToken."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch configured programs on the camera. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "38ded2d6-b8d8-47f9-ad3a-2c9ffee60120",
                                            "name": "Returns programs configured on the camera.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/cameras/:camera_id/programs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "cameras",
                                                        ":camera_id",
                                                        "programs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "camera_id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "[\n {\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n },\n {\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n }\n]"
                                        },
                                        {
                                            "id": "ece42bf5-d71b-43e1-a026-2ad00e172b60",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/cameras/:camera_id/programs",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "cameras",
                                                        ":camera_id",
                                                        "programs"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "camera_id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "752a0f4b-5cc8-4f27-a9fa-94084edb389c"
                        },
                        {
                            "name": "runs",
                            "item": [
                                {
                                    "name": "{camera id}",
                                    "item": [
                                        {
                                            "name": "Fetch runs by camera",
                                            "id": "43412bef-07ce-447c-beda-d1927a8a3ba1",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id?durationMs=51611335&endMs=51611335",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "runs",
                                                        ":camera_id"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "durationMs",
                                                            "value": "51611335",
                                                            "description": "(Required) DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "51611335",
                                                            "description": "EndMs is an optional param. It will default to the current time."
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "e95f4e6f-fe6d-489e-aa21-b9968a7941e0",
                                                            "key": "camera_id",
                                                            "value": "51611335",
                                                            "description": "(Required) The camera_id should be valid for the given accessToken."
                                                        }
                                                    ]
                                                },
                                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs by camera. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "11391043-6697-4f7b-ae18-4e4825be80b6",
                                                    "name": "Return runs by cameraId.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id?durationMs=<integer>&endMs=<integer>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "industrial",
                                                                "vision",
                                                                "runs",
                                                                ":camera_id"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "durationMs",
                                                                    "value": "<integer>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<integer>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "camera_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "[\n {\n  \"deviceId\": \"<long>\",\n  \"endedAtMs\": \"<long>\",\n  \"program\": {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"reportMetadata\": {\n   \"itemsPerMinute\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"noReadCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"rejectCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"successCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"startedAtMs\": \"<long>\"\n },\n {\n  \"deviceId\": \"<long>\",\n  \"endedAtMs\": \"<long>\",\n  \"program\": {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"reportMetadata\": {\n   \"itemsPerMinute\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"noReadCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"rejectCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"successCount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"startedAtMs\": \"<long>\"\n }\n]"
                                                },
                                                {
                                                    "id": "5d39c7f8-a2ce-4ae6-a440-8d029e5e47c4",
                                                    "name": "Unexpected error.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id?durationMs=<integer>&endMs=<integer>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "industrial",
                                                                "vision",
                                                                "runs",
                                                                ":camera_id"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "durationMs",
                                                                    "value": "<integer>"
                                                                },
                                                                {
                                                                    "key": "endMs",
                                                                    "value": "<integer>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "camera_id"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "\"<string>\""
                                                }
                                            ]
                                        },
                                        {
                                            "name": "Fetch runs by camera and program",
                                            "id": "030f3c36-22fa-4a55-9d32-1a570488420a",
                                            "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id/:program_id/:started_at_ms?include=dolore consequat",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "runs",
                                                        ":camera_id",
                                                        ":program_id",
                                                        ":started_at_ms"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "include",
                                                            "value": "dolore consequat",
                                                            "description": "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'."
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "id": "6f86ea3c-17fd-4416-ae30-0e896be5ed4f",
                                                            "key": "camera_id",
                                                            "value": "51611335",
                                                            "description": "(Required) The camera_id should be valid for the given accessToken."
                                                        },
                                                        {
                                                            "id": "52fa0374-247c-4635-9099-9a9302b2cbda",
                                                            "key": "program_id",
                                                            "value": "51611335",
                                                            "description": "(Required) The configured program's ID on the camera."
                                                        },
                                                        {
                                                            "id": "58e01d9e-f119-47b0-be6b-b9528ecef32e",
                                                            "key": "started_at_ms",
                                                            "value": "51611335",
                                                            "description": "(Required) Started_at_ms is a required param. Indicates the start time of the run to be fetched."
                                                        }
                                                    ]
                                                },
                                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs by camera and program. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                            },
                                            "response": [
                                                {
                                                    "id": "b52a0c9b-f653-4bcf-8946-67737f3c6c09",
                                                    "name": "Return runs by camera ID and program ID.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id/:program_id/:started_at_ms?include=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "industrial",
                                                                "vision",
                                                                "runs",
                                                                ":camera_id",
                                                                ":program_id",
                                                                ":started_at_ms"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "include",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "camera_id"
                                                                },
                                                                {
                                                                    "key": "program_id"
                                                                },
                                                                {
                                                                    "key": "started_at_ms"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "{\n \"deviceId\": \"<long>\",\n \"endedAtMs\": \"<long>\",\n \"programId\": \"<long>\",\n \"reportMetadata\": {\n  \"itemsPerMinute\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"noReadCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"rejectCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"successCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"startedAtMs\": \"<long>\"\n}"
                                                },
                                                {
                                                    "id": "757b23d2-e36c-4767-bf44-72dde813bc99",
                                                    "name": "Unexpected error.",
                                                    "originalRequest": {
                                                        "method": "GET",
                                                        "header": [
                                                            {
                                                                "description": "Added as a part of security scheme: bearer",
                                                                "key": "Authorization",
                                                                "value": "Bearer <token>"
                                                            }
                                                        ],
                                                        "url": {
                                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id/:program_id/:started_at_ms?include=<string>",
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "path": [
                                                                "v1",
                                                                "industrial",
                                                                "vision",
                                                                "runs",
                                                                ":camera_id",
                                                                ":program_id",
                                                                ":started_at_ms"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "include",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "key": "camera_id"
                                                                },
                                                                {
                                                                    "key": "program_id"
                                                                },
                                                                {
                                                                    "key": "started_at_ms"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "status": "Internal Server Error",
                                                    "code": 500,
                                                    "_postman_previewlanguage": "json",
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "cookie": [],
                                                    "responseTime": null,
                                                    "body": "\"<string>\""
                                                }
                                            ]
                                        }
                                    ],
                                    "id": "dd389d45-cda4-4973-a243-a99dc54e57ad"
                                },
                                {
                                    "name": "Fetch runs",
                                    "id": "584664df-c4e5-4fcb-92d2-24123eb5c3ae",
                                    "request": {
                                        "method": "GET",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/runs?durationMs=51611335&endMs=51611335",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "runs"
                                            ],
                                            "query": [
                                                {
                                                    "key": "durationMs",
                                                    "value": "51611335",
                                                    "description": "(Required) DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"
                                                },
                                                {
                                                    "key": "endMs",
                                                    "value": "51611335",
                                                    "description": "EndMs is an optional param. It will default to the current time."
                                                }
                                            ]
                                        },
                                        "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                                    },
                                    "response": [
                                        {
                                            "id": "6aa1de1e-0bea-4976-a9db-7e9d1b1bd1d8",
                                            "name": "Return runs.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/runs?durationMs=<integer>&endMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "runs"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "durationMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "{\n \"visionRuns\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                        },
                                        {
                                            "id": "dd9feee6-fc4f-4e1a-be61-c1791fc31610",
                                            "name": "Unexpected error.",
                                            "originalRequest": {
                                                "method": "GET",
                                                "header": [
                                                    {
                                                        "description": "Added as a part of security scheme: bearer",
                                                        "key": "Authorization",
                                                        "value": "Bearer <token>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/v1/industrial/vision/runs?durationMs=<integer>&endMs=<integer>",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "v1",
                                                        "industrial",
                                                        "vision",
                                                        "runs"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "durationMs",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "endMs",
                                                            "value": "<integer>"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "responseTime": null,
                                            "body": "\"<string>\""
                                        }
                                    ]
                                }
                            ],
                            "id": "30d2199b-f649-46e8-b899-529e74a689fe"
                        },
                        {
                            "name": "Fetch the latest run for a camera or program",
                            "id": "02778527-7f57-41d1-8d4d-1f90c326f736",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/industrial/vision/run/camera/:camera_id?program_id=51611335&startedAtMs=51611335&include=dolore consequat&limit=51611335",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "industrial",
                                        "vision",
                                        "run",
                                        "camera",
                                        ":camera_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "program_id",
                                            "value": "51611335",
                                            "description": "The configured program's ID on the camera."
                                        },
                                        {
                                            "key": "startedAtMs",
                                            "value": "51611335",
                                            "description": "EndMs is an optional param. It will default to the current time."
                                        },
                                        {
                                            "key": "include",
                                            "value": "dolore consequat",
                                            "description": "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'."
                                        },
                                        {
                                            "key": "limit",
                                            "value": "51611335",
                                            "description": "Limit is an integer value from 1 to 1,000."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "id": "a262b1f6-c2ce-4080-98ac-ca41fa782978",
                                            "key": "camera_id",
                                            "value": "51611335",
                                            "description": "(Required) The camera_id should be valid for the given accessToken."
                                        }
                                    ]
                                },
                                "description": "Fetch the latest run for a camera or program by default. If startedAtMs is supplied, fetch the specific run that corresponds to that start time. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "2d2a262c-4897-409f-ad4b-8100d20f82c1",
                                    "name": "Returns the details for this run.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/run/camera/:camera_id?program_id=<integer>&startedAtMs=<integer>&include=<string>&limit=<integer>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "run",
                                                "camera",
                                                ":camera_id"
                                            ],
                                            "query": [
                                                {
                                                    "key": "program_id",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "startedAtMs",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "include",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "key": "camera_id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"cameraId\": \"<long>\",\n \"endedAtMs\": \"<long>\",\n \"inspectionResults\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"isOngoing\": \"<boolean>\",\n \"program\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"runSummary\": {\n  \"itemsPerMinute\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"noReadCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"rejectCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"successCount\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"startedAtMs\": \"<long>\"\n}"
                                },
                                {
                                    "id": "90123ec1-0084-4045-b4e3-b17d94c4302d",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/industrial/vision/run/camera/:camera_id?program_id=<integer>&startedAtMs=<integer>&include=<string>&limit=<integer>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "industrial",
                                                "vision",
                                                "run",
                                                "camera",
                                                ":camera_id"
                                            ],
                                            "query": [
                                                {
                                                    "key": "program_id",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "startedAtMs",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "key": "include",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "limit",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "key": "camera_id"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        }
                    ],
                    "id": "f731876a-085d-4c0c-83ab-909e65143e80"
                },
                {
                    "name": "machines",
                    "item": [
                        {
                            "name": "Get machine history",
                            "id": "5cc02807-db42-494b-bf33-6ac977d51515",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"endMs\": 1462881998034,\n    \"startMs\": 1462878398034\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/machines/history",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "machines",
                                        "history"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical data for machine objects. This method returns a set of historical data for all machines. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "dd0c1538-0a6d-4bc2-9996-d98d123da95e",
                                    "name": "List of machine results objects, each containing a time and a datapoint.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endMs\": \"<integer>\",\n    \"startMs\": \"<integer>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/machines/history",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "machines",
                                                "history"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"machines\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "276abfbe-51a5-4ece-b26c-998f67aa0a4c",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endMs\": \"<integer>\",\n    \"startMs\": \"<integer>\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/machines/history",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "machines",
                                                "history"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get machines",
                            "id": "0e541590-b292-4dbd-8354-e3bccf379c12",
                            "request": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/machines/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "machines",
                                        "list"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "82c34c6f-7bcc-4183-b1aa-99c00af1a28e",
                                    "name": "List of machine objects.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/machines/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "machines",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"machines\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "c1e6a1cd-097e-4160-89c0-1acdd0ca28ce",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/machines/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "machines",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        }
                    ],
                    "id": "6aa57a09-2e5f-4195-9ab0-8917b58b186f"
                },
                {
                    "name": "sensors",
                    "item": [
                        {
                            "name": "Get cargo status",
                            "id": "4dba1f1c-375b-4db3-ba01-bc7837974134",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"sensors\": [\n        122\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/cargo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "cargo"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet cargo monitor status (empty / full) for requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "112b60b7-19ab-4e7c-b2b0-434621f073b1",
                                    "name": "List of sensor objects containing the current cargo status reported by each sensor.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/cargo",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "cargo"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "c8b4ea42-f150-4571-83b3-b1633b71458c",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/cargo",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "cargo"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get door status",
                            "id": "10bc33ba-fda3-4b0e-bf74-1f585396d5ca",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"sensors\": [\n        122\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/door",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "door"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet door monitor status (closed / open) for requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "2dc0125e-ccfd-422a-9758-81319b70f073",
                                    "name": "List of sensor objects containing the current door status reported by each sensor.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/door",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "door"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "ce820524-080a-413b-94d4-b06325b7a68d",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/door",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "door"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get sensor history",
                            "id": "7846f110-0288-46b4-8ea8-c32fc21314ab",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"endMs\": 1462881998034,\n    \"series\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"startMs\": 1462878398034,\n    \"stepMs\": 3600000,\n    \"fillMissing\": \"withNull\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/history",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "history"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical data for specified sensors. This method returns a set of historical data for the specified sensors in the specified time range and at the specified time resolution. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "72a7957b-f3ad-4ebe-b802-46d63298a5de",
                                    "name": "List of results objects, each containing a time and a datapoint for each requested sensor/field pair.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endMs\": \"<integer>\",\n    \"series\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"startMs\": \"<integer>\",\n    \"stepMs\": \"<integer>\",\n    \"fillMissing\": \"withNull\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/history",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "history"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "949ea333-f294-44a6-b168-b0fe4825cf26",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"endMs\": \"<integer>\",\n    \"series\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"startMs\": \"<integer>\",\n    \"stepMs\": \"<integer>\",\n    \"fillMissing\": \"withNull\"\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/history",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "history"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get humidity",
                            "id": "043c9c78-35a7-4cd5-914d-1697c85fe52c",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"sensors\": [\n        122\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/humidity",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "humidity"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet humidity for requested sensors. This method returns the current relative humidity for the requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "269c8f27-967b-4ab9-a3c7-8f4cebb3ea33",
                                    "name": "List of sensor objects containing the current humidity reported by each sensor.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/humidity",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "humidity"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "ac7f658c-3e9e-441c-a7dd-7b255186734e",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/humidity",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "humidity"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get all sensors",
                            "id": "425d7f39-225f-40d4-a405-857036413485",
                            "request": {
                                "method": "POST",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "list"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet sensor objects. This method returns a list of the sensor objects in the Samsara Cloud and information about them. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "cb3ac28e-8715-48cb-8b34-dc0cede54c07",
                                    "name": "List of sensor objects.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "780cdc62-1d1b-4b25-aae4-e01c0cd40f97",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/list",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "list"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        },
                        {
                            "name": "Get temperature",
                            "id": "e50704cc-9e55-4a4d-9f62-36488bc26a4a",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"sensors\": [\n        122\n    ]\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/sensors/temperature",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "sensors",
                                        "temperature"
                                    ]
                                },
                                "description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet temperature for requested sensors. This method returns the current ambient temperature (and probe temperature if applicable) for the requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
                            },
                            "response": [
                                {
                                    "id": "a6af9231-24ff-4ac7-8bc4-cc299b14ebdf",
                                    "name": "List of sensor objects containing the current temperature reported by each sensor.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/temperature",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "temperature"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                                },
                                {
                                    "id": "e8dc44b4-cd24-4f0f-897c-10df796a1df8",
                                    "name": "Unexpected error.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: bearer",
                                                "key": "Authorization",
                                                "value": "Bearer <token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/v1/sensors/temperature",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "v1",
                                                "sensors",
                                                "temperature"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "\"<string>\""
                                }
                            ]
                        }
                    ],
                    "id": "072d23be-f0cb-4e85-9d69-a102725de930"
                }
            ],
            "id": "07006f30-037a-4c08-a0b6-7ff378541b1c"
        },
        {
            "name": "Get information about your organization",
            "id": "5cfec89b-4959-4019-b7a0-0c6e6aa341c1",
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{baseUrl}}/me",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "me"
                    ]
                },
                "description": "Get information about your organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
            },
            "response": [
                {
                    "id": "93b250d1-48dd-4f53-8a3a-9b1c8079079d",
                    "name": "Returns information about your organization.",
                    "originalRequest": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/me",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "me"
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n \"data\": {\n  \"carrierSettings\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                },
                {
                    "id": "fe5c3b28-6953-4a07-bdcc-7886913b08a2",
                    "name": "Error response",
                    "originalRequest": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/me",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "me"
                            ]
                        }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                }
            ]
        },
        {
            "name": "List all user roles",
            "id": "6b1b993e-bb54-4418-bebf-8611419504da",
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{baseUrl}}/user-roles?limit=446&after=dolore consequat",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "user-roles"
                    ],
                    "query": [
                        {
                            "key": "limit",
                            "value": "446",
                            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
                        },
                        {
                            "key": "after",
                            "value": "dolore consequat",
                            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
                        }
                    ]
                },
                "description": "Returns a list of all user roles in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\"https://www.samsara.com/help\" target=\"_blank\">submit a case</a> to our support team."
            },
            "response": [
                {
                    "id": "8e7e1ce9-828f-44ba-9da7-9531e5105b08",
                    "name": "List all user roles.",
                    "originalRequest": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/user-roles?limit=<integer>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user-roles"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "<integer>"
                                },
                                {
                                    "key": "after",
                                    "value": "<string>"
                                }
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n \"data\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"hasNextPage\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                },
                {
                    "id": "a46ccae1-b469-4991-9f82-035aa812b241",
                    "name": "Error response",
                    "originalRequest": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/user-roles?limit=<integer>&after=<string>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user-roles"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "<integer>"
                                },
                                {
                                    "key": "after",
                                    "value": "<string>"
                                }
                            ]
                        }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "<Bearer Token>",
                "type": "string"
            }
        ]
    },
    "variable": [
        {
            "id": "c92675ad-74fa-44df-935f-9fffad88f0bf",
            "key": "baseUrl",
            "value": "https://api.samsara.com/",
            "type": "string"
        }
    ]
}