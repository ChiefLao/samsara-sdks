# coding: utf-8

"""
    Samsara API

    This is the Samsara API.  # noqa: E501

    The version of the OpenAPI document: 2019-12-12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import samsara
from samsara.models.v1_vehicle_safety_score_response import V1VehicleSafetyScoreResponse  # noqa: E501
from samsara.rest import ApiException

class TestV1VehicleSafetyScoreResponse(unittest.TestCase):
    """V1VehicleSafetyScoreResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1VehicleSafetyScoreResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = samsara.models.v1_vehicle_safety_score_response.V1VehicleSafetyScoreResponse()  # noqa: E501
        if include_optional :
            return V1VehicleSafetyScoreResponse(
                crash_count = 0, 
                harsh_accel_count = 1, 
                harsh_braking_count = 2, 
                harsh_events = [
                    samsara.models.v1_safety_report_harsh_event.V1SafetyReportHarshEvent(
                        harsh_event_type = 'Harsh Braking', 
                        timestamp_ms = 1535590776000, 
                        vehicle_id = 212014918086169, )
                    ], 
                harsh_turning_count = 0, 
                safety_score = 97, 
                safety_score_rank = '26', 
                time_over_speed_limit_ms = 3769, 
                total_distance_driven_meters = 291836, 
                total_harsh_event_count = 3, 
                total_time_driven_ms = 19708293, 
                vehicle_id = 4321
            )
        else :
            return V1VehicleSafetyScoreResponse(
        )

    def testV1VehicleSafetyScoreResponse(self):
        """Test V1VehicleSafetyScoreResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
