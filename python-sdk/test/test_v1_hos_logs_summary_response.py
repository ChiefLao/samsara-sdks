# coding: utf-8

"""
    Samsara API

    This is the Samsara API.  # noqa: E501

    The version of the OpenAPI document: 2019-12-12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import samsara
from samsara.models.v1_hos_logs_summary_response import V1HosLogsSummaryResponse  # noqa: E501
from samsara.rest import ApiException

class TestV1HosLogsSummaryResponse(unittest.TestCase):
    """V1HosLogsSummaryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1HosLogsSummaryResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = samsara.models.v1_hos_logs_summary_response.V1HosLogsSummaryResponse()  # noqa: E501
        if include_optional :
            return V1HosLogsSummaryResponse(
                drivers = [
                    samsara.models.v1_hos_logs_summary_response_drivers.V1HosLogsSummaryResponse_drivers(
                        current_duty_status_code = 'OFF_DUTY', 
                        cycle_remaining = 252000000, 
                        cycle_tomorrow = 252000000, 
                        drive_ms_today = 2.52E+8, 
                        driver_id = 444, 
                        driver_name = 'Fred Jacobs', 
                        driving_in_violation_cycle = 50400000, 
                        driving_in_violation_today = 39600000, 
                        on_duty_ms_today = 2.52E+8, 
                        pending_drive_ms_today = 2.52E+8, 
                        pending_on_duty_ms_today = 2.52E+8, 
                        shift_drive_remaining = 39600000, 
                        shift_remaining = 50400000, 
                        time_in_current_status = 5000, 
                        time_until_break = 28800000, 
                        vehicle_name = 'Vehicle 1', )
                    ], 
                pagination = samsara.models.v1_hos_logs_summary_response_pagination.V1HosLogsSummaryResponse_pagination(
                    end_cursor = 'MTA1MDc5MB==', 
                    has_next_page = True, )
            )
        else :
            return V1HosLogsSummaryResponse(
        )

    def testV1HosLogsSummaryResponse(self):
        """Test V1HosLogsSummaryResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
