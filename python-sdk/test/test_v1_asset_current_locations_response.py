# coding: utf-8

"""
    Samsara API

    This is the Samsara API.  # noqa: E501

    The version of the OpenAPI document: 2019-12-12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import samsara
from samsara.models.v1_asset_current_locations_response import V1AssetCurrentLocationsResponse  # noqa: E501
from samsara.rest import ApiException

class TestV1AssetCurrentLocationsResponse(unittest.TestCase):
    """V1AssetCurrentLocationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1AssetCurrentLocationsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = samsara.models.v1_asset_current_locations_response.V1AssetCurrentLocationsResponse()  # noqa: E501
        if include_optional :
            return V1AssetCurrentLocationsResponse(
                asset_serial_number = '8dka2810', 
                cable = samsara.models.v1_asset_current_locations_response_cable.V1AssetCurrentLocationsResponse_cable(
                    asset_type = 'Reefer (Thermo King)', ), 
                engine_hours = 104, 
                id = 1, 
                location = [
                    samsara.models.v1_asset_current_location.V1AssetCurrentLocation(
                        latitude = 37.0, 
                        location = '525 York, San Francisco, CA', 
                        longitude = -122.7, 
                        speed_miles_per_hour = 35.0, 
                        time_ms = 12314151, )
                    ], 
                name = 'Trailer 123'
            )
        else :
            return V1AssetCurrentLocationsResponse(
                id = 1,
        )

    def testV1AssetCurrentLocationsResponse(self):
        """Test V1AssetCurrentLocationsResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
