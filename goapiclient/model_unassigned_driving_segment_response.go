/*
 * Samsara API
 *
 * <style type=\"text/css\"> n {     padding: 1em;     width: 100%;     display: block;     margin: 28px 0; } n.info {     background-color: rgba(0, 51, 160, 0.1); } n.warning {     background-color: #fdf6e3; } i:before {     margin-right: 6px; } nh {     font-size: 1.5rem;     font-weight: 700;     line-height: 1.1;     display: block; } nb {     margin-top: 10px;     padding-left: 22px;     display: block; } </style>  # Overview  <n class=\"info\"> <nh> <i class=\"fa fa-info-circle\"></i> Something new! </nh> <nb> Welcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br> <br> Want to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br> <br> *Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br> <br> Submit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)! </nb> </n>  Samsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.  The Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.  Visit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.  If you have any questions, reach out to us at [support@samsara.com](mailto:support@samsara.com).  ## Endpoints  All our APIs can be accessed through HTTP requests to URLs like:  ``` https://api.samsara.com/<endpoint> ```  For EU customers, this URL will be:  ``` https://api.eu.samsara.com/<endpoint> ```  <n class=\"warning\"> <nh> <i class=\"fa fa-exclamation-circle\"></i> Note </nh> <nb> Legacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>` </nb> </n>  ## Authentication  To authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.  Your API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.  Authentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:  ```curl Authorization: Bearer {access_token} ```  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.  ## Common Patterns  You can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).
 *
 * API version: 2019-12-12
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package goapiclient

import (
	"bytes"
	"encoding/json"
	"time"
)

// UnassignedDrivingSegmentResponse A driving segment with no associated driver(s) that may or may not be in a unassigned, pending, rejected, or assigned states.
type UnassignedDrivingSegmentResponse struct {
	// Annotation for the driving segment.
	Annotation *string `json:"annotation,omitempty"`
	// The time that the server created the driving segment, specified in RFC 3339 format.
	CreatedAtTime *time.Time          `json:"createdAtTime,omitempty"`
	Driver        *DriverTinyResponse `json:"driver,omitempty"`
	// End time of the driving segment, specified in RFC 3339 format.
	EndTime *time.Time `json:"endTime,omitempty"`
	// Unique identifier for the unassigned driving segment.
	Id *string `json:"id,omitempty"`
	// Start time of the driving segment, specified in RFC 3339 format.
	StartTime *time.Time `json:"startTime,omitempty"`
	// Status of assignment for this segment.
	Status  *string              `json:"status,omitempty"`
	Vehicle *VehicleTinyResponse `json:"vehicle,omitempty"`
}

// GetAnnotation returns the Annotation field value if set, zero value otherwise.
func (o *UnassignedDrivingSegmentResponse) GetAnnotation() string {
	if o == nil || o.Annotation == nil {
		var ret string
		return ret
	}
	return *o.Annotation
}

// GetAnnotationOk returns a tuple with the Annotation field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UnassignedDrivingSegmentResponse) GetAnnotationOk() (string, bool) {
	if o == nil || o.Annotation == nil {
		var ret string
		return ret, false
	}
	return *o.Annotation, true
}

// HasAnnotation returns a boolean if a field has been set.
func (o *UnassignedDrivingSegmentResponse) HasAnnotation() bool {
	if o != nil && o.Annotation != nil {
		return true
	}

	return false
}

// SetAnnotation gets a reference to the given string and assigns it to the Annotation field.
func (o *UnassignedDrivingSegmentResponse) SetAnnotation(v string) {
	o.Annotation = &v
}

// GetCreatedAtTime returns the CreatedAtTime field value if set, zero value otherwise.
func (o *UnassignedDrivingSegmentResponse) GetCreatedAtTime() time.Time {
	if o == nil || o.CreatedAtTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtTime
}

// GetCreatedAtTimeOk returns a tuple with the CreatedAtTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UnassignedDrivingSegmentResponse) GetCreatedAtTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedAtTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedAtTime, true
}

// HasCreatedAtTime returns a boolean if a field has been set.
func (o *UnassignedDrivingSegmentResponse) HasCreatedAtTime() bool {
	if o != nil && o.CreatedAtTime != nil {
		return true
	}

	return false
}

// SetCreatedAtTime gets a reference to the given time.Time and assigns it to the CreatedAtTime field.
func (o *UnassignedDrivingSegmentResponse) SetCreatedAtTime(v time.Time) {
	o.CreatedAtTime = &v
}

// GetDriver returns the Driver field value if set, zero value otherwise.
func (o *UnassignedDrivingSegmentResponse) GetDriver() DriverTinyResponse {
	if o == nil || o.Driver == nil {
		var ret DriverTinyResponse
		return ret
	}
	return *o.Driver
}

// GetDriverOk returns a tuple with the Driver field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UnassignedDrivingSegmentResponse) GetDriverOk() (DriverTinyResponse, bool) {
	if o == nil || o.Driver == nil {
		var ret DriverTinyResponse
		return ret, false
	}
	return *o.Driver, true
}

// HasDriver returns a boolean if a field has been set.
func (o *UnassignedDrivingSegmentResponse) HasDriver() bool {
	if o != nil && o.Driver != nil {
		return true
	}

	return false
}

// SetDriver gets a reference to the given DriverTinyResponse and assigns it to the Driver field.
func (o *UnassignedDrivingSegmentResponse) SetDriver(v DriverTinyResponse) {
	o.Driver = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *UnassignedDrivingSegmentResponse) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UnassignedDrivingSegmentResponse) GetEndTimeOk() (time.Time, bool) {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *UnassignedDrivingSegmentResponse) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *UnassignedDrivingSegmentResponse) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnassignedDrivingSegmentResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UnassignedDrivingSegmentResponse) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnassignedDrivingSegmentResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UnassignedDrivingSegmentResponse) SetId(v string) {
	o.Id = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *UnassignedDrivingSegmentResponse) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UnassignedDrivingSegmentResponse) GetStartTimeOk() (time.Time, bool) {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *UnassignedDrivingSegmentResponse) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *UnassignedDrivingSegmentResponse) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UnassignedDrivingSegmentResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UnassignedDrivingSegmentResponse) GetStatusOk() (string, bool) {
	if o == nil || o.Status == nil {
		var ret string
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UnassignedDrivingSegmentResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UnassignedDrivingSegmentResponse) SetStatus(v string) {
	o.Status = &v
}

// GetVehicle returns the Vehicle field value if set, zero value otherwise.
func (o *UnassignedDrivingSegmentResponse) GetVehicle() VehicleTinyResponse {
	if o == nil || o.Vehicle == nil {
		var ret VehicleTinyResponse
		return ret
	}
	return *o.Vehicle
}

// GetVehicleOk returns a tuple with the Vehicle field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UnassignedDrivingSegmentResponse) GetVehicleOk() (VehicleTinyResponse, bool) {
	if o == nil || o.Vehicle == nil {
		var ret VehicleTinyResponse
		return ret, false
	}
	return *o.Vehicle, true
}

// HasVehicle returns a boolean if a field has been set.
func (o *UnassignedDrivingSegmentResponse) HasVehicle() bool {
	if o != nil && o.Vehicle != nil {
		return true
	}

	return false
}

// SetVehicle gets a reference to the given VehicleTinyResponse and assigns it to the Vehicle field.
func (o *UnassignedDrivingSegmentResponse) SetVehicle(v VehicleTinyResponse) {
	o.Vehicle = &v
}

type NullableUnassignedDrivingSegmentResponse struct {
	Value        UnassignedDrivingSegmentResponse
	ExplicitNull bool
}

func (v NullableUnassignedDrivingSegmentResponse) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableUnassignedDrivingSegmentResponse) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
