/*
 * Samsara API
 *
 * <style type=\"text/css\"> n {     padding: 1em;     width: 100%;     display: block;     margin: 28px 0; } n.info {     background-color: rgba(0, 51, 160, 0.1); } n.warning {     background-color: #fdf6e3; } i:before {     margin-right: 6px; } nh {     font-size: 1.5rem;     font-weight: 700;     line-height: 1.1;     display: block; } nb {     margin-top: 10px;     padding-left: 22px;     display: block; } </style>  # Overview  <n class=\"info\"> <nh> <i class=\"fa fa-info-circle\"></i> Something new! </nh> <nb> Welcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br> <br> Want to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br> <br> *Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br> <br> Submit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)! </nb> </n>  Samsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.  The Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.  Visit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.  If you have any questions, reach out to us at [support@samsara.com](mailto:support@samsara.com).  ## Endpoints  All our APIs can be accessed through HTTP requests to URLs like:  ``` https://api.samsara.com/<endpoint> ```  For EU customers, this URL will be:  ``` https://api.eu.samsara.com/<endpoint> ```  <n class=\"warning\"> <nh> <i class=\"fa fa-exclamation-circle\"></i> Note </nh> <nb> Legacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>` </nb> </n>  ## Authentication  To authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.  Your API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.  Authentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:  ```curl Authorization: Bearer {access_token} ```  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.  ## Common Patterns  You can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).
 *
 * API version: 2019-12-12
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package goapiclient

import (
	"bytes"
	"encoding/json"
)

// V1HosLogsSummaryResponseDrivers struct for V1HosLogsSummaryResponseDrivers
type V1HosLogsSummaryResponseDrivers struct {
	// The Hours of Service status type.
	CurrentDutyStatusCode *string `json:"currentDutyStatusCode,omitempty"`
	// The amount of remaining cycle time (in ms).
	CycleRemaining *int64 `json:"cycleRemaining,omitempty"`
	// The amount of cycle time (in ms) available tomorrow.
	CycleTomorrow *int64 `json:"cycleTomorrow,omitempty"`
	// The amount of driving time today (in ms).
	DriveMsToday *float32 `json:"driveMsToday,omitempty"`
	// ID of the driver.
	DriverId *int64 `json:"driverId,omitempty"`
	// Name of the driver.
	DriverName *string `json:"driverName,omitempty"`
	// The amount of driving time in violation in this cycle (in ms).
	DrivingInViolationCycle *int64 `json:"drivingInViolationCycle,omitempty"`
	// The amount of driving time in violation today (in ms).
	DrivingInViolationToday *int64 `json:"drivingInViolationToday,omitempty"`
	// The amount of on duty time today (in ms).
	OnDutyMsToday *float32 `json:"onDutyMsToday,omitempty"`
	// The amount of driving time today for pending logs (in ms).
	PendingDriveMsToday *float32 `json:"pendingDriveMsToday,omitempty"`
	// The amount of on duty time today for pending logs (in ms).
	PendingOnDutyMsToday *float32 `json:"pendingOnDutyMsToday,omitempty"`
	// The amount of remaining shift drive time (in ms).
	ShiftDriveRemaining *int64 `json:"shiftDriveRemaining,omitempty"`
	// The amount of remaining shift time (in ms).
	ShiftRemaining *int64 `json:"shiftRemaining,omitempty"`
	// The amount of time (in ms) that the driver has been in the current `dutyStatus`.
	TimeInCurrentStatus *int64 `json:"timeInCurrentStatus,omitempty"`
	// The amount of time (in ms) remaining until the driver cannot drive without a rest break.
	TimeUntilBreak *int64 `json:"timeUntilBreak,omitempty"`
	// Name of the vehicle.
	VehicleName *string `json:"vehicleName,omitempty"`
}

// GetCurrentDutyStatusCode returns the CurrentDutyStatusCode field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetCurrentDutyStatusCode() string {
	if o == nil || o.CurrentDutyStatusCode == nil {
		var ret string
		return ret
	}
	return *o.CurrentDutyStatusCode
}

// GetCurrentDutyStatusCodeOk returns a tuple with the CurrentDutyStatusCode field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetCurrentDutyStatusCodeOk() (string, bool) {
	if o == nil || o.CurrentDutyStatusCode == nil {
		var ret string
		return ret, false
	}
	return *o.CurrentDutyStatusCode, true
}

// HasCurrentDutyStatusCode returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasCurrentDutyStatusCode() bool {
	if o != nil && o.CurrentDutyStatusCode != nil {
		return true
	}

	return false
}

// SetCurrentDutyStatusCode gets a reference to the given string and assigns it to the CurrentDutyStatusCode field.
func (o *V1HosLogsSummaryResponseDrivers) SetCurrentDutyStatusCode(v string) {
	o.CurrentDutyStatusCode = &v
}

// GetCycleRemaining returns the CycleRemaining field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetCycleRemaining() int64 {
	if o == nil || o.CycleRemaining == nil {
		var ret int64
		return ret
	}
	return *o.CycleRemaining
}

// GetCycleRemainingOk returns a tuple with the CycleRemaining field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetCycleRemainingOk() (int64, bool) {
	if o == nil || o.CycleRemaining == nil {
		var ret int64
		return ret, false
	}
	return *o.CycleRemaining, true
}

// HasCycleRemaining returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasCycleRemaining() bool {
	if o != nil && o.CycleRemaining != nil {
		return true
	}

	return false
}

// SetCycleRemaining gets a reference to the given int64 and assigns it to the CycleRemaining field.
func (o *V1HosLogsSummaryResponseDrivers) SetCycleRemaining(v int64) {
	o.CycleRemaining = &v
}

// GetCycleTomorrow returns the CycleTomorrow field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetCycleTomorrow() int64 {
	if o == nil || o.CycleTomorrow == nil {
		var ret int64
		return ret
	}
	return *o.CycleTomorrow
}

// GetCycleTomorrowOk returns a tuple with the CycleTomorrow field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetCycleTomorrowOk() (int64, bool) {
	if o == nil || o.CycleTomorrow == nil {
		var ret int64
		return ret, false
	}
	return *o.CycleTomorrow, true
}

// HasCycleTomorrow returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasCycleTomorrow() bool {
	if o != nil && o.CycleTomorrow != nil {
		return true
	}

	return false
}

// SetCycleTomorrow gets a reference to the given int64 and assigns it to the CycleTomorrow field.
func (o *V1HosLogsSummaryResponseDrivers) SetCycleTomorrow(v int64) {
	o.CycleTomorrow = &v
}

// GetDriveMsToday returns the DriveMsToday field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetDriveMsToday() float32 {
	if o == nil || o.DriveMsToday == nil {
		var ret float32
		return ret
	}
	return *o.DriveMsToday
}

// GetDriveMsTodayOk returns a tuple with the DriveMsToday field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetDriveMsTodayOk() (float32, bool) {
	if o == nil || o.DriveMsToday == nil {
		var ret float32
		return ret, false
	}
	return *o.DriveMsToday, true
}

// HasDriveMsToday returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasDriveMsToday() bool {
	if o != nil && o.DriveMsToday != nil {
		return true
	}

	return false
}

// SetDriveMsToday gets a reference to the given float32 and assigns it to the DriveMsToday field.
func (o *V1HosLogsSummaryResponseDrivers) SetDriveMsToday(v float32) {
	o.DriveMsToday = &v
}

// GetDriverId returns the DriverId field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetDriverId() int64 {
	if o == nil || o.DriverId == nil {
		var ret int64
		return ret
	}
	return *o.DriverId
}

// GetDriverIdOk returns a tuple with the DriverId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetDriverIdOk() (int64, bool) {
	if o == nil || o.DriverId == nil {
		var ret int64
		return ret, false
	}
	return *o.DriverId, true
}

// HasDriverId returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasDriverId() bool {
	if o != nil && o.DriverId != nil {
		return true
	}

	return false
}

// SetDriverId gets a reference to the given int64 and assigns it to the DriverId field.
func (o *V1HosLogsSummaryResponseDrivers) SetDriverId(v int64) {
	o.DriverId = &v
}

// GetDriverName returns the DriverName field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetDriverName() string {
	if o == nil || o.DriverName == nil {
		var ret string
		return ret
	}
	return *o.DriverName
}

// GetDriverNameOk returns a tuple with the DriverName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetDriverNameOk() (string, bool) {
	if o == nil || o.DriverName == nil {
		var ret string
		return ret, false
	}
	return *o.DriverName, true
}

// HasDriverName returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasDriverName() bool {
	if o != nil && o.DriverName != nil {
		return true
	}

	return false
}

// SetDriverName gets a reference to the given string and assigns it to the DriverName field.
func (o *V1HosLogsSummaryResponseDrivers) SetDriverName(v string) {
	o.DriverName = &v
}

// GetDrivingInViolationCycle returns the DrivingInViolationCycle field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetDrivingInViolationCycle() int64 {
	if o == nil || o.DrivingInViolationCycle == nil {
		var ret int64
		return ret
	}
	return *o.DrivingInViolationCycle
}

// GetDrivingInViolationCycleOk returns a tuple with the DrivingInViolationCycle field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetDrivingInViolationCycleOk() (int64, bool) {
	if o == nil || o.DrivingInViolationCycle == nil {
		var ret int64
		return ret, false
	}
	return *o.DrivingInViolationCycle, true
}

// HasDrivingInViolationCycle returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasDrivingInViolationCycle() bool {
	if o != nil && o.DrivingInViolationCycle != nil {
		return true
	}

	return false
}

// SetDrivingInViolationCycle gets a reference to the given int64 and assigns it to the DrivingInViolationCycle field.
func (o *V1HosLogsSummaryResponseDrivers) SetDrivingInViolationCycle(v int64) {
	o.DrivingInViolationCycle = &v
}

// GetDrivingInViolationToday returns the DrivingInViolationToday field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetDrivingInViolationToday() int64 {
	if o == nil || o.DrivingInViolationToday == nil {
		var ret int64
		return ret
	}
	return *o.DrivingInViolationToday
}

// GetDrivingInViolationTodayOk returns a tuple with the DrivingInViolationToday field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetDrivingInViolationTodayOk() (int64, bool) {
	if o == nil || o.DrivingInViolationToday == nil {
		var ret int64
		return ret, false
	}
	return *o.DrivingInViolationToday, true
}

// HasDrivingInViolationToday returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasDrivingInViolationToday() bool {
	if o != nil && o.DrivingInViolationToday != nil {
		return true
	}

	return false
}

// SetDrivingInViolationToday gets a reference to the given int64 and assigns it to the DrivingInViolationToday field.
func (o *V1HosLogsSummaryResponseDrivers) SetDrivingInViolationToday(v int64) {
	o.DrivingInViolationToday = &v
}

// GetOnDutyMsToday returns the OnDutyMsToday field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetOnDutyMsToday() float32 {
	if o == nil || o.OnDutyMsToday == nil {
		var ret float32
		return ret
	}
	return *o.OnDutyMsToday
}

// GetOnDutyMsTodayOk returns a tuple with the OnDutyMsToday field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetOnDutyMsTodayOk() (float32, bool) {
	if o == nil || o.OnDutyMsToday == nil {
		var ret float32
		return ret, false
	}
	return *o.OnDutyMsToday, true
}

// HasOnDutyMsToday returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasOnDutyMsToday() bool {
	if o != nil && o.OnDutyMsToday != nil {
		return true
	}

	return false
}

// SetOnDutyMsToday gets a reference to the given float32 and assigns it to the OnDutyMsToday field.
func (o *V1HosLogsSummaryResponseDrivers) SetOnDutyMsToday(v float32) {
	o.OnDutyMsToday = &v
}

// GetPendingDriveMsToday returns the PendingDriveMsToday field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetPendingDriveMsToday() float32 {
	if o == nil || o.PendingDriveMsToday == nil {
		var ret float32
		return ret
	}
	return *o.PendingDriveMsToday
}

// GetPendingDriveMsTodayOk returns a tuple with the PendingDriveMsToday field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetPendingDriveMsTodayOk() (float32, bool) {
	if o == nil || o.PendingDriveMsToday == nil {
		var ret float32
		return ret, false
	}
	return *o.PendingDriveMsToday, true
}

// HasPendingDriveMsToday returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasPendingDriveMsToday() bool {
	if o != nil && o.PendingDriveMsToday != nil {
		return true
	}

	return false
}

// SetPendingDriveMsToday gets a reference to the given float32 and assigns it to the PendingDriveMsToday field.
func (o *V1HosLogsSummaryResponseDrivers) SetPendingDriveMsToday(v float32) {
	o.PendingDriveMsToday = &v
}

// GetPendingOnDutyMsToday returns the PendingOnDutyMsToday field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetPendingOnDutyMsToday() float32 {
	if o == nil || o.PendingOnDutyMsToday == nil {
		var ret float32
		return ret
	}
	return *o.PendingOnDutyMsToday
}

// GetPendingOnDutyMsTodayOk returns a tuple with the PendingOnDutyMsToday field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetPendingOnDutyMsTodayOk() (float32, bool) {
	if o == nil || o.PendingOnDutyMsToday == nil {
		var ret float32
		return ret, false
	}
	return *o.PendingOnDutyMsToday, true
}

// HasPendingOnDutyMsToday returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasPendingOnDutyMsToday() bool {
	if o != nil && o.PendingOnDutyMsToday != nil {
		return true
	}

	return false
}

// SetPendingOnDutyMsToday gets a reference to the given float32 and assigns it to the PendingOnDutyMsToday field.
func (o *V1HosLogsSummaryResponseDrivers) SetPendingOnDutyMsToday(v float32) {
	o.PendingOnDutyMsToday = &v
}

// GetShiftDriveRemaining returns the ShiftDriveRemaining field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetShiftDriveRemaining() int64 {
	if o == nil || o.ShiftDriveRemaining == nil {
		var ret int64
		return ret
	}
	return *o.ShiftDriveRemaining
}

// GetShiftDriveRemainingOk returns a tuple with the ShiftDriveRemaining field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetShiftDriveRemainingOk() (int64, bool) {
	if o == nil || o.ShiftDriveRemaining == nil {
		var ret int64
		return ret, false
	}
	return *o.ShiftDriveRemaining, true
}

// HasShiftDriveRemaining returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasShiftDriveRemaining() bool {
	if o != nil && o.ShiftDriveRemaining != nil {
		return true
	}

	return false
}

// SetShiftDriveRemaining gets a reference to the given int64 and assigns it to the ShiftDriveRemaining field.
func (o *V1HosLogsSummaryResponseDrivers) SetShiftDriveRemaining(v int64) {
	o.ShiftDriveRemaining = &v
}

// GetShiftRemaining returns the ShiftRemaining field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetShiftRemaining() int64 {
	if o == nil || o.ShiftRemaining == nil {
		var ret int64
		return ret
	}
	return *o.ShiftRemaining
}

// GetShiftRemainingOk returns a tuple with the ShiftRemaining field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetShiftRemainingOk() (int64, bool) {
	if o == nil || o.ShiftRemaining == nil {
		var ret int64
		return ret, false
	}
	return *o.ShiftRemaining, true
}

// HasShiftRemaining returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasShiftRemaining() bool {
	if o != nil && o.ShiftRemaining != nil {
		return true
	}

	return false
}

// SetShiftRemaining gets a reference to the given int64 and assigns it to the ShiftRemaining field.
func (o *V1HosLogsSummaryResponseDrivers) SetShiftRemaining(v int64) {
	o.ShiftRemaining = &v
}

// GetTimeInCurrentStatus returns the TimeInCurrentStatus field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetTimeInCurrentStatus() int64 {
	if o == nil || o.TimeInCurrentStatus == nil {
		var ret int64
		return ret
	}
	return *o.TimeInCurrentStatus
}

// GetTimeInCurrentStatusOk returns a tuple with the TimeInCurrentStatus field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetTimeInCurrentStatusOk() (int64, bool) {
	if o == nil || o.TimeInCurrentStatus == nil {
		var ret int64
		return ret, false
	}
	return *o.TimeInCurrentStatus, true
}

// HasTimeInCurrentStatus returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasTimeInCurrentStatus() bool {
	if o != nil && o.TimeInCurrentStatus != nil {
		return true
	}

	return false
}

// SetTimeInCurrentStatus gets a reference to the given int64 and assigns it to the TimeInCurrentStatus field.
func (o *V1HosLogsSummaryResponseDrivers) SetTimeInCurrentStatus(v int64) {
	o.TimeInCurrentStatus = &v
}

// GetTimeUntilBreak returns the TimeUntilBreak field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetTimeUntilBreak() int64 {
	if o == nil || o.TimeUntilBreak == nil {
		var ret int64
		return ret
	}
	return *o.TimeUntilBreak
}

// GetTimeUntilBreakOk returns a tuple with the TimeUntilBreak field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetTimeUntilBreakOk() (int64, bool) {
	if o == nil || o.TimeUntilBreak == nil {
		var ret int64
		return ret, false
	}
	return *o.TimeUntilBreak, true
}

// HasTimeUntilBreak returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasTimeUntilBreak() bool {
	if o != nil && o.TimeUntilBreak != nil {
		return true
	}

	return false
}

// SetTimeUntilBreak gets a reference to the given int64 and assigns it to the TimeUntilBreak field.
func (o *V1HosLogsSummaryResponseDrivers) SetTimeUntilBreak(v int64) {
	o.TimeUntilBreak = &v
}

// GetVehicleName returns the VehicleName field value if set, zero value otherwise.
func (o *V1HosLogsSummaryResponseDrivers) GetVehicleName() string {
	if o == nil || o.VehicleName == nil {
		var ret string
		return ret
	}
	return *o.VehicleName
}

// GetVehicleNameOk returns a tuple with the VehicleName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1HosLogsSummaryResponseDrivers) GetVehicleNameOk() (string, bool) {
	if o == nil || o.VehicleName == nil {
		var ret string
		return ret, false
	}
	return *o.VehicleName, true
}

// HasVehicleName returns a boolean if a field has been set.
func (o *V1HosLogsSummaryResponseDrivers) HasVehicleName() bool {
	if o != nil && o.VehicleName != nil {
		return true
	}

	return false
}

// SetVehicleName gets a reference to the given string and assigns it to the VehicleName field.
func (o *V1HosLogsSummaryResponseDrivers) SetVehicleName(v string) {
	o.VehicleName = &v
}

type NullableV1HosLogsSummaryResponseDrivers struct {
	Value        V1HosLogsSummaryResponseDrivers
	ExplicitNull bool
}

func (v NullableV1HosLogsSummaryResponseDrivers) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableV1HosLogsSummaryResponseDrivers) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
