/*
 * Samsara API
 *
 * <style type=\"text/css\"> n {     padding: 1em;     width: 100%;     display: block;     margin: 28px 0; } n.info {     background-color: rgba(0, 51, 160, 0.1); } n.warning {     background-color: #fdf6e3; } i:before {     margin-right: 6px; } nh {     font-size: 1.5rem;     font-weight: 700;     line-height: 1.1;     display: block; } nb {     margin-top: 10px;     padding-left: 22px;     display: block; } </style>  # Overview  <n class=\"info\"> <nh> <i class=\"fa fa-info-circle\"></i> Something new! </nh> <nb> Welcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br> <br> Want to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br> <br> *Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br> <br> Submit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)! </nb> </n>  Samsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.  The Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.  Visit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.  If you have any questions, reach out to us at [support@samsara.com](mailto:support@samsara.com).  ## Endpoints  All our APIs can be accessed through HTTP requests to URLs like:  ``` https://api.samsara.com/<endpoint> ```  For EU customers, this URL will be:  ``` https://api.eu.samsara.com/<endpoint> ```  <n class=\"warning\"> <nh> <i class=\"fa fa-exclamation-circle\"></i> Note </nh> <nb> Legacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>` </nb> </n>  ## Authentication  To authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.  Your API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.  Authentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:  ```curl Authorization: Bearer {access_token} ```  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.  ## Common Patterns  You can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).
 *
 * API version: 2019-12-12
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package goapiclient

import (
	"bytes"
	"encoding/json"
)

// V1DispatchJobUpdate struct for V1DispatchJobUpdate
type V1DispatchJobUpdate struct {
	// ID of the Samsara dispatch job to update
	Id int64 `json:"id"`
	// The address of the job destination, as it would be recognized if provided to maps.google.com. Optional if a valid destination address ID is provided.
	DestinationAddress *string `json:"destination_address,omitempty"`
	// ID of the job destination associated with an address book entry. Optional if valid values are provided for destination address and latitude/longitude. If a valid destination address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the destination name is not provided.
	DestinationAddressId *int64 `json:"destination_address_id,omitempty"`
	// Latitude of the destination in decimal degrees. Optional if a valid destination address ID is provided.
	DestinationLat *float64 `json:"destination_lat,omitempty"`
	// Longitude of the destination in decimal degrees. Optional if a valid destination address ID is provided.
	DestinationLng *float64 `json:"destination_lng,omitempty"`
	// The name of the job destination. If provided, it will take precedence over the name of the address book entry.
	DestinationName *string `json:"destination_name,omitempty"`
	// Notes regarding the details of this job, maximum of 2000 characters; newline characters ('\\n')can be used for formatting.
	Notes *string `json:"notes,omitempty"`
	// The time at which the assigned driver is scheduled to arrive at the job destination.
	ScheduledArrivalTimeMs int64 `json:"scheduled_arrival_time_ms"`
	// The time at which the assigned driver is scheduled to depart from the job destination.
	ScheduledDepartureTimeMs *int64 `json:"scheduled_departure_time_ms,omitempty"`
}

// GetId returns the Id field value
func (o *V1DispatchJobUpdate) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *V1DispatchJobUpdate) SetId(v int64) {
	o.Id = v
}

// GetDestinationAddress returns the DestinationAddress field value if set, zero value otherwise.
func (o *V1DispatchJobUpdate) GetDestinationAddress() string {
	if o == nil || o.DestinationAddress == nil {
		var ret string
		return ret
	}
	return *o.DestinationAddress
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJobUpdate) GetDestinationAddressOk() (string, bool) {
	if o == nil || o.DestinationAddress == nil {
		var ret string
		return ret, false
	}
	return *o.DestinationAddress, true
}

// HasDestinationAddress returns a boolean if a field has been set.
func (o *V1DispatchJobUpdate) HasDestinationAddress() bool {
	if o != nil && o.DestinationAddress != nil {
		return true
	}

	return false
}

// SetDestinationAddress gets a reference to the given string and assigns it to the DestinationAddress field.
func (o *V1DispatchJobUpdate) SetDestinationAddress(v string) {
	o.DestinationAddress = &v
}

// GetDestinationAddressId returns the DestinationAddressId field value if set, zero value otherwise.
func (o *V1DispatchJobUpdate) GetDestinationAddressId() int64 {
	if o == nil || o.DestinationAddressId == nil {
		var ret int64
		return ret
	}
	return *o.DestinationAddressId
}

// GetDestinationAddressIdOk returns a tuple with the DestinationAddressId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJobUpdate) GetDestinationAddressIdOk() (int64, bool) {
	if o == nil || o.DestinationAddressId == nil {
		var ret int64
		return ret, false
	}
	return *o.DestinationAddressId, true
}

// HasDestinationAddressId returns a boolean if a field has been set.
func (o *V1DispatchJobUpdate) HasDestinationAddressId() bool {
	if o != nil && o.DestinationAddressId != nil {
		return true
	}

	return false
}

// SetDestinationAddressId gets a reference to the given int64 and assigns it to the DestinationAddressId field.
func (o *V1DispatchJobUpdate) SetDestinationAddressId(v int64) {
	o.DestinationAddressId = &v
}

// GetDestinationLat returns the DestinationLat field value if set, zero value otherwise.
func (o *V1DispatchJobUpdate) GetDestinationLat() float64 {
	if o == nil || o.DestinationLat == nil {
		var ret float64
		return ret
	}
	return *o.DestinationLat
}

// GetDestinationLatOk returns a tuple with the DestinationLat field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJobUpdate) GetDestinationLatOk() (float64, bool) {
	if o == nil || o.DestinationLat == nil {
		var ret float64
		return ret, false
	}
	return *o.DestinationLat, true
}

// HasDestinationLat returns a boolean if a field has been set.
func (o *V1DispatchJobUpdate) HasDestinationLat() bool {
	if o != nil && o.DestinationLat != nil {
		return true
	}

	return false
}

// SetDestinationLat gets a reference to the given float64 and assigns it to the DestinationLat field.
func (o *V1DispatchJobUpdate) SetDestinationLat(v float64) {
	o.DestinationLat = &v
}

// GetDestinationLng returns the DestinationLng field value if set, zero value otherwise.
func (o *V1DispatchJobUpdate) GetDestinationLng() float64 {
	if o == nil || o.DestinationLng == nil {
		var ret float64
		return ret
	}
	return *o.DestinationLng
}

// GetDestinationLngOk returns a tuple with the DestinationLng field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJobUpdate) GetDestinationLngOk() (float64, bool) {
	if o == nil || o.DestinationLng == nil {
		var ret float64
		return ret, false
	}
	return *o.DestinationLng, true
}

// HasDestinationLng returns a boolean if a field has been set.
func (o *V1DispatchJobUpdate) HasDestinationLng() bool {
	if o != nil && o.DestinationLng != nil {
		return true
	}

	return false
}

// SetDestinationLng gets a reference to the given float64 and assigns it to the DestinationLng field.
func (o *V1DispatchJobUpdate) SetDestinationLng(v float64) {
	o.DestinationLng = &v
}

// GetDestinationName returns the DestinationName field value if set, zero value otherwise.
func (o *V1DispatchJobUpdate) GetDestinationName() string {
	if o == nil || o.DestinationName == nil {
		var ret string
		return ret
	}
	return *o.DestinationName
}

// GetDestinationNameOk returns a tuple with the DestinationName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJobUpdate) GetDestinationNameOk() (string, bool) {
	if o == nil || o.DestinationName == nil {
		var ret string
		return ret, false
	}
	return *o.DestinationName, true
}

// HasDestinationName returns a boolean if a field has been set.
func (o *V1DispatchJobUpdate) HasDestinationName() bool {
	if o != nil && o.DestinationName != nil {
		return true
	}

	return false
}

// SetDestinationName gets a reference to the given string and assigns it to the DestinationName field.
func (o *V1DispatchJobUpdate) SetDestinationName(v string) {
	o.DestinationName = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *V1DispatchJobUpdate) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJobUpdate) GetNotesOk() (string, bool) {
	if o == nil || o.Notes == nil {
		var ret string
		return ret, false
	}
	return *o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *V1DispatchJobUpdate) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *V1DispatchJobUpdate) SetNotes(v string) {
	o.Notes = &v
}

// GetScheduledArrivalTimeMs returns the ScheduledArrivalTimeMs field value
func (o *V1DispatchJobUpdate) GetScheduledArrivalTimeMs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ScheduledArrivalTimeMs
}

// SetScheduledArrivalTimeMs sets field value
func (o *V1DispatchJobUpdate) SetScheduledArrivalTimeMs(v int64) {
	o.ScheduledArrivalTimeMs = v
}

// GetScheduledDepartureTimeMs returns the ScheduledDepartureTimeMs field value if set, zero value otherwise.
func (o *V1DispatchJobUpdate) GetScheduledDepartureTimeMs() int64 {
	if o == nil || o.ScheduledDepartureTimeMs == nil {
		var ret int64
		return ret
	}
	return *o.ScheduledDepartureTimeMs
}

// GetScheduledDepartureTimeMsOk returns a tuple with the ScheduledDepartureTimeMs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJobUpdate) GetScheduledDepartureTimeMsOk() (int64, bool) {
	if o == nil || o.ScheduledDepartureTimeMs == nil {
		var ret int64
		return ret, false
	}
	return *o.ScheduledDepartureTimeMs, true
}

// HasScheduledDepartureTimeMs returns a boolean if a field has been set.
func (o *V1DispatchJobUpdate) HasScheduledDepartureTimeMs() bool {
	if o != nil && o.ScheduledDepartureTimeMs != nil {
		return true
	}

	return false
}

// SetScheduledDepartureTimeMs gets a reference to the given int64 and assigns it to the ScheduledDepartureTimeMs field.
func (o *V1DispatchJobUpdate) SetScheduledDepartureTimeMs(v int64) {
	o.ScheduledDepartureTimeMs = &v
}

type NullableV1DispatchJobUpdate struct {
	Value        V1DispatchJobUpdate
	ExplicitNull bool
}

func (v NullableV1DispatchJobUpdate) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableV1DispatchJobUpdate) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
