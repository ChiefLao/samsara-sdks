/*
 * Samsara API
 *
 * <style type=\"text/css\"> n {     padding: 1em;     width: 100%;     display: block;     margin: 28px 0; } n.info {     background-color: rgba(0, 51, 160, 0.1); } n.warning {     background-color: #fdf6e3; } i:before {     margin-right: 6px; } nh {     font-size: 1.5rem;     font-weight: 700;     line-height: 1.1;     display: block; } nb {     margin-top: 10px;     padding-left: 22px;     display: block; } </style>  # Overview  <n class=\"info\"> <nh> <i class=\"fa fa-info-circle\"></i> Something new! </nh> <nb> Welcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br> <br> Want to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br> <br> *Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br> <br> Submit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)! </nb> </n>  Samsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.  The Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.  Visit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.  If you have any questions, reach out to us at [support@samsara.com](mailto:support@samsara.com).  ## Endpoints  All our APIs can be accessed through HTTP requests to URLs like:  ``` https://api.samsara.com/<endpoint> ```  For EU customers, this URL will be:  ``` https://api.eu.samsara.com/<endpoint> ```  <n class=\"warning\"> <nh> <i class=\"fa fa-exclamation-circle\"></i> Note </nh> <nb> Legacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>` </nb> </n>  ## Authentication  To authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.  Your API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.  Authentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:  ```curl Authorization: Bearer {access_token} ```  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.  ## Common Patterns  You can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).
 *
 * API version: 2019-12-12
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package goapiclient

import (
	"bytes"
	"encoding/json"
)

// CreateAddressRequest A request body to create an Address.
type CreateAddressRequest struct {
	// Reporting location type associated with the address (used for ELD reporting purposes).
	AddressTypes *[]string `json:"addressTypes,omitempty"`
	// An array of Contact IDs associated with this Address.
	ContactIds *[]string `json:"contactIds,omitempty"`
	// The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.
	ExternalIds *map[string]string `json:"externalIds,omitempty"`
	// The full street address for this address/geofence, as it might be recognized by Google Maps.
	FormattedAddress string          `json:"formattedAddress"`
	Geofence         AddressGeofence `json:"geofence"`
	// Latitude of the address. Will be geocoded from `formattedAddress` if not provided.
	Latitude *float64 `json:"latitude,omitempty"`
	// Longitude of the address. Will be geocoded from `formattedAddress` if not provided.
	Longitude *float64 `json:"longitude,omitempty"`
	// Name of the address.
	Name string `json:"name"`
	// Notes about the address.
	Notes *string `json:"notes,omitempty"`
	// An array of IDs of tags to associate with this address.
	TagIds *[]string `json:"tagIds,omitempty"`
}

// GetAddressTypes returns the AddressTypes field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetAddressTypes() []string {
	if o == nil || o.AddressTypes == nil {
		var ret []string
		return ret
	}
	return *o.AddressTypes
}

// GetAddressTypesOk returns a tuple with the AddressTypes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetAddressTypesOk() ([]string, bool) {
	if o == nil || o.AddressTypes == nil {
		var ret []string
		return ret, false
	}
	return *o.AddressTypes, true
}

// HasAddressTypes returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasAddressTypes() bool {
	if o != nil && o.AddressTypes != nil {
		return true
	}

	return false
}

// SetAddressTypes gets a reference to the given []string and assigns it to the AddressTypes field.
func (o *CreateAddressRequest) SetAddressTypes(v []string) {
	o.AddressTypes = &v
}

// GetContactIds returns the ContactIds field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetContactIds() []string {
	if o == nil || o.ContactIds == nil {
		var ret []string
		return ret
	}
	return *o.ContactIds
}

// GetContactIdsOk returns a tuple with the ContactIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetContactIdsOk() ([]string, bool) {
	if o == nil || o.ContactIds == nil {
		var ret []string
		return ret, false
	}
	return *o.ContactIds, true
}

// HasContactIds returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasContactIds() bool {
	if o != nil && o.ContactIds != nil {
		return true
	}

	return false
}

// SetContactIds gets a reference to the given []string and assigns it to the ContactIds field.
func (o *CreateAddressRequest) SetContactIds(v []string) {
	o.ContactIds = &v
}

// GetExternalIds returns the ExternalIds field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetExternalIds() map[string]string {
	if o == nil || o.ExternalIds == nil {
		var ret map[string]string
		return ret
	}
	return *o.ExternalIds
}

// GetExternalIdsOk returns a tuple with the ExternalIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetExternalIdsOk() (map[string]string, bool) {
	if o == nil || o.ExternalIds == nil {
		var ret map[string]string
		return ret, false
	}
	return *o.ExternalIds, true
}

// HasExternalIds returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasExternalIds() bool {
	if o != nil && o.ExternalIds != nil {
		return true
	}

	return false
}

// SetExternalIds gets a reference to the given map[string]string and assigns it to the ExternalIds field.
func (o *CreateAddressRequest) SetExternalIds(v map[string]string) {
	o.ExternalIds = &v
}

// GetFormattedAddress returns the FormattedAddress field value
func (o *CreateAddressRequest) GetFormattedAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FormattedAddress
}

// SetFormattedAddress sets field value
func (o *CreateAddressRequest) SetFormattedAddress(v string) {
	o.FormattedAddress = v
}

// GetGeofence returns the Geofence field value
func (o *CreateAddressRequest) GetGeofence() AddressGeofence {
	if o == nil {
		var ret AddressGeofence
		return ret
	}

	return o.Geofence
}

// SetGeofence sets field value
func (o *CreateAddressRequest) SetGeofence(v AddressGeofence) {
	o.Geofence = v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetLatitude() float64 {
	if o == nil || o.Latitude == nil {
		var ret float64
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetLatitudeOk() (float64, bool) {
	if o == nil || o.Latitude == nil {
		var ret float64
		return ret, false
	}
	return *o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasLatitude() bool {
	if o != nil && o.Latitude != nil {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float64 and assigns it to the Latitude field.
func (o *CreateAddressRequest) SetLatitude(v float64) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetLongitude() float64 {
	if o == nil || o.Longitude == nil {
		var ret float64
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetLongitudeOk() (float64, bool) {
	if o == nil || o.Longitude == nil {
		var ret float64
		return ret, false
	}
	return *o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasLongitude() bool {
	if o != nil && o.Longitude != nil {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float64 and assigns it to the Longitude field.
func (o *CreateAddressRequest) SetLongitude(v float64) {
	o.Longitude = &v
}

// GetName returns the Name field value
func (o *CreateAddressRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *CreateAddressRequest) SetName(v string) {
	o.Name = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetNotesOk() (string, bool) {
	if o == nil || o.Notes == nil {
		var ret string
		return ret, false
	}
	return *o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *CreateAddressRequest) SetNotes(v string) {
	o.Notes = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetTagIds() []string {
	if o == nil || o.TagIds == nil {
		var ret []string
		return ret
	}
	return *o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetTagIdsOk() ([]string, bool) {
	if o == nil || o.TagIds == nil {
		var ret []string
		return ret, false
	}
	return *o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasTagIds() bool {
	if o != nil && o.TagIds != nil {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *CreateAddressRequest) SetTagIds(v []string) {
	o.TagIds = &v
}

type NullableCreateAddressRequest struct {
	Value        CreateAddressRequest
	ExplicitNull bool
}

func (v NullableCreateAddressRequest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCreateAddressRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
