/*
 * Samsara API
 *
 * <style type=\"text/css\"> n {     padding: 1em;     width: 100%;     display: block;     margin: 28px 0; } n.info {     background-color: rgba(0, 51, 160, 0.1); } n.warning {     background-color: #fdf6e3; } i:before {     margin-right: 6px; } nh {     font-size: 1.5rem;     font-weight: 700;     line-height: 1.1;     display: block; } nb {     margin-top: 10px;     padding-left: 22px;     display: block; } </style>  # Overview  <n class=\"info\"> <nh> <i class=\"fa fa-info-circle\"></i> Something new! </nh> <nb> Welcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br> <br> Want to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br> <br> *Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br> <br> Submit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)! </nb> </n>  Samsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.  The Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.  Visit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.  If you have any questions, reach out to us at [support@samsara.com](mailto:support@samsara.com).  ## Endpoints  All our APIs can be accessed through HTTP requests to URLs like:  ``` https://api.samsara.com/<endpoint> ```  For EU customers, this URL will be:  ``` https://api.eu.samsara.com/<endpoint> ```  <n class=\"warning\"> <nh> <i class=\"fa fa-exclamation-circle\"></i> Note </nh> <nb> Legacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>` </nb> </n>  ## Authentication  To authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.  Your API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.  Authentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:  ```curl Authorization: Bearer {access_token} ```  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.  ## Common Patterns  You can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).
 *
 * API version: 2019-12-12
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package goapiclient

import (
	"bytes"
	"encoding/json"
)

// V1VisionRunByCameraResponse struct for V1VisionRunByCameraResponse
type V1VisionRunByCameraResponse struct {
	CameraId          *int64                                          `json:"cameraId,omitempty"`
	EndedAtMs         *int64                                          `json:"endedAtMs,omitempty"`
	InspectionResults *[]V1VisionRunByCameraResponseInspectionResults `json:"inspectionResults,omitempty"`
	IsOngoing         *bool                                           `json:"isOngoing,omitempty"`
	Program           *V1VisionRunByCameraResponseProgram             `json:"program,omitempty"`
	RunSummary        *V1VisionRunByCameraResponseRunSummary          `json:"runSummary,omitempty"`
	StartedAtMs       *int64                                          `json:"startedAtMs,omitempty"`
}

// GetCameraId returns the CameraId field value if set, zero value otherwise.
func (o *V1VisionRunByCameraResponse) GetCameraId() int64 {
	if o == nil || o.CameraId == nil {
		var ret int64
		return ret
	}
	return *o.CameraId
}

// GetCameraIdOk returns a tuple with the CameraId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1VisionRunByCameraResponse) GetCameraIdOk() (int64, bool) {
	if o == nil || o.CameraId == nil {
		var ret int64
		return ret, false
	}
	return *o.CameraId, true
}

// HasCameraId returns a boolean if a field has been set.
func (o *V1VisionRunByCameraResponse) HasCameraId() bool {
	if o != nil && o.CameraId != nil {
		return true
	}

	return false
}

// SetCameraId gets a reference to the given int64 and assigns it to the CameraId field.
func (o *V1VisionRunByCameraResponse) SetCameraId(v int64) {
	o.CameraId = &v
}

// GetEndedAtMs returns the EndedAtMs field value if set, zero value otherwise.
func (o *V1VisionRunByCameraResponse) GetEndedAtMs() int64 {
	if o == nil || o.EndedAtMs == nil {
		var ret int64
		return ret
	}
	return *o.EndedAtMs
}

// GetEndedAtMsOk returns a tuple with the EndedAtMs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1VisionRunByCameraResponse) GetEndedAtMsOk() (int64, bool) {
	if o == nil || o.EndedAtMs == nil {
		var ret int64
		return ret, false
	}
	return *o.EndedAtMs, true
}

// HasEndedAtMs returns a boolean if a field has been set.
func (o *V1VisionRunByCameraResponse) HasEndedAtMs() bool {
	if o != nil && o.EndedAtMs != nil {
		return true
	}

	return false
}

// SetEndedAtMs gets a reference to the given int64 and assigns it to the EndedAtMs field.
func (o *V1VisionRunByCameraResponse) SetEndedAtMs(v int64) {
	o.EndedAtMs = &v
}

// GetInspectionResults returns the InspectionResults field value if set, zero value otherwise.
func (o *V1VisionRunByCameraResponse) GetInspectionResults() []V1VisionRunByCameraResponseInspectionResults {
	if o == nil || o.InspectionResults == nil {
		var ret []V1VisionRunByCameraResponseInspectionResults
		return ret
	}
	return *o.InspectionResults
}

// GetInspectionResultsOk returns a tuple with the InspectionResults field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1VisionRunByCameraResponse) GetInspectionResultsOk() ([]V1VisionRunByCameraResponseInspectionResults, bool) {
	if o == nil || o.InspectionResults == nil {
		var ret []V1VisionRunByCameraResponseInspectionResults
		return ret, false
	}
	return *o.InspectionResults, true
}

// HasInspectionResults returns a boolean if a field has been set.
func (o *V1VisionRunByCameraResponse) HasInspectionResults() bool {
	if o != nil && o.InspectionResults != nil {
		return true
	}

	return false
}

// SetInspectionResults gets a reference to the given []V1VisionRunByCameraResponseInspectionResults and assigns it to the InspectionResults field.
func (o *V1VisionRunByCameraResponse) SetInspectionResults(v []V1VisionRunByCameraResponseInspectionResults) {
	o.InspectionResults = &v
}

// GetIsOngoing returns the IsOngoing field value if set, zero value otherwise.
func (o *V1VisionRunByCameraResponse) GetIsOngoing() bool {
	if o == nil || o.IsOngoing == nil {
		var ret bool
		return ret
	}
	return *o.IsOngoing
}

// GetIsOngoingOk returns a tuple with the IsOngoing field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1VisionRunByCameraResponse) GetIsOngoingOk() (bool, bool) {
	if o == nil || o.IsOngoing == nil {
		var ret bool
		return ret, false
	}
	return *o.IsOngoing, true
}

// HasIsOngoing returns a boolean if a field has been set.
func (o *V1VisionRunByCameraResponse) HasIsOngoing() bool {
	if o != nil && o.IsOngoing != nil {
		return true
	}

	return false
}

// SetIsOngoing gets a reference to the given bool and assigns it to the IsOngoing field.
func (o *V1VisionRunByCameraResponse) SetIsOngoing(v bool) {
	o.IsOngoing = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *V1VisionRunByCameraResponse) GetProgram() V1VisionRunByCameraResponseProgram {
	if o == nil || o.Program == nil {
		var ret V1VisionRunByCameraResponseProgram
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1VisionRunByCameraResponse) GetProgramOk() (V1VisionRunByCameraResponseProgram, bool) {
	if o == nil || o.Program == nil {
		var ret V1VisionRunByCameraResponseProgram
		return ret, false
	}
	return *o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *V1VisionRunByCameraResponse) HasProgram() bool {
	if o != nil && o.Program != nil {
		return true
	}

	return false
}

// SetProgram gets a reference to the given V1VisionRunByCameraResponseProgram and assigns it to the Program field.
func (o *V1VisionRunByCameraResponse) SetProgram(v V1VisionRunByCameraResponseProgram) {
	o.Program = &v
}

// GetRunSummary returns the RunSummary field value if set, zero value otherwise.
func (o *V1VisionRunByCameraResponse) GetRunSummary() V1VisionRunByCameraResponseRunSummary {
	if o == nil || o.RunSummary == nil {
		var ret V1VisionRunByCameraResponseRunSummary
		return ret
	}
	return *o.RunSummary
}

// GetRunSummaryOk returns a tuple with the RunSummary field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1VisionRunByCameraResponse) GetRunSummaryOk() (V1VisionRunByCameraResponseRunSummary, bool) {
	if o == nil || o.RunSummary == nil {
		var ret V1VisionRunByCameraResponseRunSummary
		return ret, false
	}
	return *o.RunSummary, true
}

// HasRunSummary returns a boolean if a field has been set.
func (o *V1VisionRunByCameraResponse) HasRunSummary() bool {
	if o != nil && o.RunSummary != nil {
		return true
	}

	return false
}

// SetRunSummary gets a reference to the given V1VisionRunByCameraResponseRunSummary and assigns it to the RunSummary field.
func (o *V1VisionRunByCameraResponse) SetRunSummary(v V1VisionRunByCameraResponseRunSummary) {
	o.RunSummary = &v
}

// GetStartedAtMs returns the StartedAtMs field value if set, zero value otherwise.
func (o *V1VisionRunByCameraResponse) GetStartedAtMs() int64 {
	if o == nil || o.StartedAtMs == nil {
		var ret int64
		return ret
	}
	return *o.StartedAtMs
}

// GetStartedAtMsOk returns a tuple with the StartedAtMs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1VisionRunByCameraResponse) GetStartedAtMsOk() (int64, bool) {
	if o == nil || o.StartedAtMs == nil {
		var ret int64
		return ret, false
	}
	return *o.StartedAtMs, true
}

// HasStartedAtMs returns a boolean if a field has been set.
func (o *V1VisionRunByCameraResponse) HasStartedAtMs() bool {
	if o != nil && o.StartedAtMs != nil {
		return true
	}

	return false
}

// SetStartedAtMs gets a reference to the given int64 and assigns it to the StartedAtMs field.
func (o *V1VisionRunByCameraResponse) SetStartedAtMs(v int64) {
	o.StartedAtMs = &v
}

type NullableV1VisionRunByCameraResponse struct {
	Value        V1VisionRunByCameraResponse
	ExplicitNull bool
}

func (v NullableV1VisionRunByCameraResponse) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableV1VisionRunByCameraResponse) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
