/*
 * Samsara API
 *
 * <style type=\"text/css\"> n {     padding: 1em;     width: 100%;     display: block;     margin: 28px 0; } n.info {     background-color: rgba(0, 51, 160, 0.1); } n.warning {     background-color: #fdf6e3; } i:before {     margin-right: 6px; } nh {     font-size: 1.5rem;     font-weight: 700;     line-height: 1.1;     display: block; } nb {     margin-top: 10px;     padding-left: 22px;     display: block; } </style>  # Overview  <n class=\"info\"> <nh> <i class=\"fa fa-info-circle\"></i> Something new! </nh> <nb> Welcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br> <br> Want to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br> <br> *Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br> <br> Submit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)! </nb> </n>  Samsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.  The Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.  Visit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.  If you have any questions, reach out to us at [support@samsara.com](mailto:support@samsara.com).  ## Endpoints  All our APIs can be accessed through HTTP requests to URLs like:  ``` https://api.samsara.com/<endpoint> ```  For EU customers, this URL will be:  ``` https://api.eu.samsara.com/<endpoint> ```  <n class=\"warning\"> <nh> <i class=\"fa fa-exclamation-circle\"></i> Note </nh> <nb> Legacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>` </nb> </n>  ## Authentication  To authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.  Your API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.  Authentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:  ```curl Authorization: Bearer {access_token} ```  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.  ## Common Patterns  You can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).
 *
 * API version: 2019-12-12
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package goapiclient

import (
	"bytes"
	"encoding/json"
	"time"
)

// CarrierProposedAssignment A carrier proposed assignment object
type CarrierProposedAssignment struct {
	// Time when the driver accepted this assignment in the mobile app. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.
	AcceptedTime *time.Time `json:"acceptedTime,omitempty"`
	// Time after which this assignment will be active and visible to the driver on the mobile app. Not setting it makes it active now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.
	ActiveTime time.Time `json:"activeTime"`
	// Time when the driver first saw this assignment in the mobile app. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.
	FirstSeenTime *time.Time `json:"firstSeenTime,omitempty"`
	// Time when the driver rejected this assignment in the mobile app. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.
	RejectedTime *time.Time `json:"rejectedTime,omitempty"`
	// Shipping Documents that this assignment will propose to the driver.
	ShippingDocs *string `json:"shippingDocs,omitempty"`
	// Trailers that this assignment will propose to the driver.
	Trailers *[]TrailerNameOnlyResponse `json:"trailers,omitempty"`
	// Samsara ID for the assignment.
	Uuid    string                            `json:"uuid"`
	Vehicle *CarrierProposedAssignmentVehicle `json:"vehicle,omitempty"`
}

// GetAcceptedTime returns the AcceptedTime field value if set, zero value otherwise.
func (o *CarrierProposedAssignment) GetAcceptedTime() time.Time {
	if o == nil || o.AcceptedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.AcceptedTime
}

// GetAcceptedTimeOk returns a tuple with the AcceptedTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CarrierProposedAssignment) GetAcceptedTimeOk() (time.Time, bool) {
	if o == nil || o.AcceptedTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.AcceptedTime, true
}

// HasAcceptedTime returns a boolean if a field has been set.
func (o *CarrierProposedAssignment) HasAcceptedTime() bool {
	if o != nil && o.AcceptedTime != nil {
		return true
	}

	return false
}

// SetAcceptedTime gets a reference to the given time.Time and assigns it to the AcceptedTime field.
func (o *CarrierProposedAssignment) SetAcceptedTime(v time.Time) {
	o.AcceptedTime = &v
}

// GetActiveTime returns the ActiveTime field value
func (o *CarrierProposedAssignment) GetActiveTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ActiveTime
}

// SetActiveTime sets field value
func (o *CarrierProposedAssignment) SetActiveTime(v time.Time) {
	o.ActiveTime = v
}

// GetFirstSeenTime returns the FirstSeenTime field value if set, zero value otherwise.
func (o *CarrierProposedAssignment) GetFirstSeenTime() time.Time {
	if o == nil || o.FirstSeenTime == nil {
		var ret time.Time
		return ret
	}
	return *o.FirstSeenTime
}

// GetFirstSeenTimeOk returns a tuple with the FirstSeenTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CarrierProposedAssignment) GetFirstSeenTimeOk() (time.Time, bool) {
	if o == nil || o.FirstSeenTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.FirstSeenTime, true
}

// HasFirstSeenTime returns a boolean if a field has been set.
func (o *CarrierProposedAssignment) HasFirstSeenTime() bool {
	if o != nil && o.FirstSeenTime != nil {
		return true
	}

	return false
}

// SetFirstSeenTime gets a reference to the given time.Time and assigns it to the FirstSeenTime field.
func (o *CarrierProposedAssignment) SetFirstSeenTime(v time.Time) {
	o.FirstSeenTime = &v
}

// GetRejectedTime returns the RejectedTime field value if set, zero value otherwise.
func (o *CarrierProposedAssignment) GetRejectedTime() time.Time {
	if o == nil || o.RejectedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.RejectedTime
}

// GetRejectedTimeOk returns a tuple with the RejectedTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CarrierProposedAssignment) GetRejectedTimeOk() (time.Time, bool) {
	if o == nil || o.RejectedTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.RejectedTime, true
}

// HasRejectedTime returns a boolean if a field has been set.
func (o *CarrierProposedAssignment) HasRejectedTime() bool {
	if o != nil && o.RejectedTime != nil {
		return true
	}

	return false
}

// SetRejectedTime gets a reference to the given time.Time and assigns it to the RejectedTime field.
func (o *CarrierProposedAssignment) SetRejectedTime(v time.Time) {
	o.RejectedTime = &v
}

// GetShippingDocs returns the ShippingDocs field value if set, zero value otherwise.
func (o *CarrierProposedAssignment) GetShippingDocs() string {
	if o == nil || o.ShippingDocs == nil {
		var ret string
		return ret
	}
	return *o.ShippingDocs
}

// GetShippingDocsOk returns a tuple with the ShippingDocs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CarrierProposedAssignment) GetShippingDocsOk() (string, bool) {
	if o == nil || o.ShippingDocs == nil {
		var ret string
		return ret, false
	}
	return *o.ShippingDocs, true
}

// HasShippingDocs returns a boolean if a field has been set.
func (o *CarrierProposedAssignment) HasShippingDocs() bool {
	if o != nil && o.ShippingDocs != nil {
		return true
	}

	return false
}

// SetShippingDocs gets a reference to the given string and assigns it to the ShippingDocs field.
func (o *CarrierProposedAssignment) SetShippingDocs(v string) {
	o.ShippingDocs = &v
}

// GetTrailers returns the Trailers field value if set, zero value otherwise.
func (o *CarrierProposedAssignment) GetTrailers() []TrailerNameOnlyResponse {
	if o == nil || o.Trailers == nil {
		var ret []TrailerNameOnlyResponse
		return ret
	}
	return *o.Trailers
}

// GetTrailersOk returns a tuple with the Trailers field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CarrierProposedAssignment) GetTrailersOk() ([]TrailerNameOnlyResponse, bool) {
	if o == nil || o.Trailers == nil {
		var ret []TrailerNameOnlyResponse
		return ret, false
	}
	return *o.Trailers, true
}

// HasTrailers returns a boolean if a field has been set.
func (o *CarrierProposedAssignment) HasTrailers() bool {
	if o != nil && o.Trailers != nil {
		return true
	}

	return false
}

// SetTrailers gets a reference to the given []TrailerNameOnlyResponse and assigns it to the Trailers field.
func (o *CarrierProposedAssignment) SetTrailers(v []TrailerNameOnlyResponse) {
	o.Trailers = &v
}

// GetUuid returns the Uuid field value
func (o *CarrierProposedAssignment) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// SetUuid sets field value
func (o *CarrierProposedAssignment) SetUuid(v string) {
	o.Uuid = v
}

// GetVehicle returns the Vehicle field value if set, zero value otherwise.
func (o *CarrierProposedAssignment) GetVehicle() CarrierProposedAssignmentVehicle {
	if o == nil || o.Vehicle == nil {
		var ret CarrierProposedAssignmentVehicle
		return ret
	}
	return *o.Vehicle
}

// GetVehicleOk returns a tuple with the Vehicle field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CarrierProposedAssignment) GetVehicleOk() (CarrierProposedAssignmentVehicle, bool) {
	if o == nil || o.Vehicle == nil {
		var ret CarrierProposedAssignmentVehicle
		return ret, false
	}
	return *o.Vehicle, true
}

// HasVehicle returns a boolean if a field has been set.
func (o *CarrierProposedAssignment) HasVehicle() bool {
	if o != nil && o.Vehicle != nil {
		return true
	}

	return false
}

// SetVehicle gets a reference to the given CarrierProposedAssignmentVehicle and assigns it to the Vehicle field.
func (o *CarrierProposedAssignment) SetVehicle(v CarrierProposedAssignmentVehicle) {
	o.Vehicle = &v
}

type NullableCarrierProposedAssignment struct {
	Value        CarrierProposedAssignment
	ExplicitNull bool
}

func (v NullableCarrierProposedAssignment) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCarrierProposedAssignment) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
