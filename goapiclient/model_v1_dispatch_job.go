/*
 * Samsara API
 *
 * <style type=\"text/css\"> n {     padding: 1em;     width: 100%;     display: block;     margin: 28px 0; } n.info {     background-color: rgba(0, 51, 160, 0.1); } n.warning {     background-color: #fdf6e3; } i:before {     margin-right: 6px; } nh {     font-size: 1.5rem;     font-weight: 700;     line-height: 1.1;     display: block; } nb {     margin-top: 10px;     padding-left: 22px;     display: block; } </style>  # Overview  <n class=\"info\"> <nh> <i class=\"fa fa-info-circle\"></i> Something new! </nh> <nb> Welcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br> <br> Want to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br> <br> *Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br> <br> Submit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)! </nb> </n>  Samsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.  The Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.  Visit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.  If you have any questions, reach out to us at [support@samsara.com](mailto:support@samsara.com).  ## Endpoints  All our APIs can be accessed through HTTP requests to URLs like:  ``` https://api.samsara.com/<endpoint> ```  For EU customers, this URL will be:  ``` https://api.eu.samsara.com/<endpoint> ```  <n class=\"warning\"> <nh> <i class=\"fa fa-exclamation-circle\"></i> Note </nh> <nb> Legacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>` </nb> </n>  ## Authentication  To authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.  Your API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.  Authentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:  ```curl Authorization: Bearer {access_token} ```  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.  ## Common Patterns  You can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).
 *
 * API version: 2019-12-12
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package goapiclient

import (
	"bytes"
	"encoding/json"
)

// V1DispatchJob struct for V1DispatchJob
type V1DispatchJob struct {
	// The time at which the driver arrived at the job destination.
	ArrivedAtMs *int64 `json:"arrived_at_ms,omitempty"`
	// The time at which the job was marked complete (e.g. started driving to the next destination).
	CompletedAtMs *int64 `json:"completed_at_ms,omitempty"`
	// ID of the route that this job belongs to.
	DispatchRouteId int64 `json:"dispatch_route_id"`
	// Document submissions associated with this job.
	Documents *[]V1DispatchJobDocumentInfo `json:"documents,omitempty"`
	// ID of the driver assigned to the dispatch job.
	DriverId *int64 `json:"driver_id,omitempty"`
	// The time at which the assigned driver started fulfilling the job (e.g. started driving to the destination).
	EnRouteAtMs *int64 `json:"en_route_at_ms,omitempty"`
	// The time at which the assigned driver is estimated to arrive at the job destination. Only valid for en-route jobs.
	EstimatedArrivalMs *int64 `json:"estimated_arrival_ms,omitempty"`
	// Fleet viewer url of the dispatch job.
	FleetViewerUrl *string `json:"fleet_viewer_url,omitempty"`
	// Deprecated.
	GroupId *int64 `json:"group_id,omitempty"`
	// ID of the Samsara dispatch job.
	Id       int64       `json:"id"`
	JobState V1jobStatus `json:"job_state"`
	// The time at which the job was marked skipped.
	SkippedAtMs *int64 `json:"skipped_at_ms,omitempty"`
	// ID of the vehicle used for the dispatch job.
	VehicleId *int64 `json:"vehicle_id,omitempty"`
	// The address of the job destination, as it would be recognized if provided to maps.google.com. Optional if a valid destination address ID is provided.
	DestinationAddress *string `json:"destination_address,omitempty"`
	// ID of the job destination associated with an address book entry. Optional if valid values are provided for destination address and latitude/longitude. If a valid destination address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the destination name is not provided.
	DestinationAddressId *int64 `json:"destination_address_id,omitempty"`
	// Latitude of the destination in decimal degrees. Optional if a valid destination address ID is provided.
	DestinationLat *float64 `json:"destination_lat,omitempty"`
	// Longitude of the destination in decimal degrees. Optional if a valid destination address ID is provided.
	DestinationLng *float64 `json:"destination_lng,omitempty"`
	// The name of the job destination. If provided, it will take precedence over the name of the address book entry.
	DestinationName *string `json:"destination_name,omitempty"`
	// Notes regarding the details of this job, maximum of 2000 characters; newline characters ('\\n')can be used for formatting.
	Notes *string `json:"notes,omitempty"`
	// The time at which the assigned driver is scheduled to arrive at the job destination.
	ScheduledArrivalTimeMs int64 `json:"scheduled_arrival_time_ms"`
	// The time at which the assigned driver is scheduled to depart from the job destination.
	ScheduledDepartureTimeMs *int64 `json:"scheduled_departure_time_ms,omitempty"`
}

// GetArrivedAtMs returns the ArrivedAtMs field value if set, zero value otherwise.
func (o *V1DispatchJob) GetArrivedAtMs() int64 {
	if o == nil || o.ArrivedAtMs == nil {
		var ret int64
		return ret
	}
	return *o.ArrivedAtMs
}

// GetArrivedAtMsOk returns a tuple with the ArrivedAtMs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetArrivedAtMsOk() (int64, bool) {
	if o == nil || o.ArrivedAtMs == nil {
		var ret int64
		return ret, false
	}
	return *o.ArrivedAtMs, true
}

// HasArrivedAtMs returns a boolean if a field has been set.
func (o *V1DispatchJob) HasArrivedAtMs() bool {
	if o != nil && o.ArrivedAtMs != nil {
		return true
	}

	return false
}

// SetArrivedAtMs gets a reference to the given int64 and assigns it to the ArrivedAtMs field.
func (o *V1DispatchJob) SetArrivedAtMs(v int64) {
	o.ArrivedAtMs = &v
}

// GetCompletedAtMs returns the CompletedAtMs field value if set, zero value otherwise.
func (o *V1DispatchJob) GetCompletedAtMs() int64 {
	if o == nil || o.CompletedAtMs == nil {
		var ret int64
		return ret
	}
	return *o.CompletedAtMs
}

// GetCompletedAtMsOk returns a tuple with the CompletedAtMs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetCompletedAtMsOk() (int64, bool) {
	if o == nil || o.CompletedAtMs == nil {
		var ret int64
		return ret, false
	}
	return *o.CompletedAtMs, true
}

// HasCompletedAtMs returns a boolean if a field has been set.
func (o *V1DispatchJob) HasCompletedAtMs() bool {
	if o != nil && o.CompletedAtMs != nil {
		return true
	}

	return false
}

// SetCompletedAtMs gets a reference to the given int64 and assigns it to the CompletedAtMs field.
func (o *V1DispatchJob) SetCompletedAtMs(v int64) {
	o.CompletedAtMs = &v
}

// GetDispatchRouteId returns the DispatchRouteId field value
func (o *V1DispatchJob) GetDispatchRouteId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DispatchRouteId
}

// SetDispatchRouteId sets field value
func (o *V1DispatchJob) SetDispatchRouteId(v int64) {
	o.DispatchRouteId = v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *V1DispatchJob) GetDocuments() []V1DispatchJobDocumentInfo {
	if o == nil || o.Documents == nil {
		var ret []V1DispatchJobDocumentInfo
		return ret
	}
	return *o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetDocumentsOk() ([]V1DispatchJobDocumentInfo, bool) {
	if o == nil || o.Documents == nil {
		var ret []V1DispatchJobDocumentInfo
		return ret, false
	}
	return *o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *V1DispatchJob) HasDocuments() bool {
	if o != nil && o.Documents != nil {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []V1DispatchJobDocumentInfo and assigns it to the Documents field.
func (o *V1DispatchJob) SetDocuments(v []V1DispatchJobDocumentInfo) {
	o.Documents = &v
}

// GetDriverId returns the DriverId field value if set, zero value otherwise.
func (o *V1DispatchJob) GetDriverId() int64 {
	if o == nil || o.DriverId == nil {
		var ret int64
		return ret
	}
	return *o.DriverId
}

// GetDriverIdOk returns a tuple with the DriverId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetDriverIdOk() (int64, bool) {
	if o == nil || o.DriverId == nil {
		var ret int64
		return ret, false
	}
	return *o.DriverId, true
}

// HasDriverId returns a boolean if a field has been set.
func (o *V1DispatchJob) HasDriverId() bool {
	if o != nil && o.DriverId != nil {
		return true
	}

	return false
}

// SetDriverId gets a reference to the given int64 and assigns it to the DriverId field.
func (o *V1DispatchJob) SetDriverId(v int64) {
	o.DriverId = &v
}

// GetEnRouteAtMs returns the EnRouteAtMs field value if set, zero value otherwise.
func (o *V1DispatchJob) GetEnRouteAtMs() int64 {
	if o == nil || o.EnRouteAtMs == nil {
		var ret int64
		return ret
	}
	return *o.EnRouteAtMs
}

// GetEnRouteAtMsOk returns a tuple with the EnRouteAtMs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetEnRouteAtMsOk() (int64, bool) {
	if o == nil || o.EnRouteAtMs == nil {
		var ret int64
		return ret, false
	}
	return *o.EnRouteAtMs, true
}

// HasEnRouteAtMs returns a boolean if a field has been set.
func (o *V1DispatchJob) HasEnRouteAtMs() bool {
	if o != nil && o.EnRouteAtMs != nil {
		return true
	}

	return false
}

// SetEnRouteAtMs gets a reference to the given int64 and assigns it to the EnRouteAtMs field.
func (o *V1DispatchJob) SetEnRouteAtMs(v int64) {
	o.EnRouteAtMs = &v
}

// GetEstimatedArrivalMs returns the EstimatedArrivalMs field value if set, zero value otherwise.
func (o *V1DispatchJob) GetEstimatedArrivalMs() int64 {
	if o == nil || o.EstimatedArrivalMs == nil {
		var ret int64
		return ret
	}
	return *o.EstimatedArrivalMs
}

// GetEstimatedArrivalMsOk returns a tuple with the EstimatedArrivalMs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetEstimatedArrivalMsOk() (int64, bool) {
	if o == nil || o.EstimatedArrivalMs == nil {
		var ret int64
		return ret, false
	}
	return *o.EstimatedArrivalMs, true
}

// HasEstimatedArrivalMs returns a boolean if a field has been set.
func (o *V1DispatchJob) HasEstimatedArrivalMs() bool {
	if o != nil && o.EstimatedArrivalMs != nil {
		return true
	}

	return false
}

// SetEstimatedArrivalMs gets a reference to the given int64 and assigns it to the EstimatedArrivalMs field.
func (o *V1DispatchJob) SetEstimatedArrivalMs(v int64) {
	o.EstimatedArrivalMs = &v
}

// GetFleetViewerUrl returns the FleetViewerUrl field value if set, zero value otherwise.
func (o *V1DispatchJob) GetFleetViewerUrl() string {
	if o == nil || o.FleetViewerUrl == nil {
		var ret string
		return ret
	}
	return *o.FleetViewerUrl
}

// GetFleetViewerUrlOk returns a tuple with the FleetViewerUrl field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetFleetViewerUrlOk() (string, bool) {
	if o == nil || o.FleetViewerUrl == nil {
		var ret string
		return ret, false
	}
	return *o.FleetViewerUrl, true
}

// HasFleetViewerUrl returns a boolean if a field has been set.
func (o *V1DispatchJob) HasFleetViewerUrl() bool {
	if o != nil && o.FleetViewerUrl != nil {
		return true
	}

	return false
}

// SetFleetViewerUrl gets a reference to the given string and assigns it to the FleetViewerUrl field.
func (o *V1DispatchJob) SetFleetViewerUrl(v string) {
	o.FleetViewerUrl = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *V1DispatchJob) GetGroupId() int64 {
	if o == nil || o.GroupId == nil {
		var ret int64
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetGroupIdOk() (int64, bool) {
	if o == nil || o.GroupId == nil {
		var ret int64
		return ret, false
	}
	return *o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *V1DispatchJob) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int64 and assigns it to the GroupId field.
func (o *V1DispatchJob) SetGroupId(v int64) {
	o.GroupId = &v
}

// GetId returns the Id field value
func (o *V1DispatchJob) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *V1DispatchJob) SetId(v int64) {
	o.Id = v
}

// GetJobState returns the JobState field value
func (o *V1DispatchJob) GetJobState() V1jobStatus {
	if o == nil {
		var ret V1jobStatus
		return ret
	}

	return o.JobState
}

// SetJobState sets field value
func (o *V1DispatchJob) SetJobState(v V1jobStatus) {
	o.JobState = v
}

// GetSkippedAtMs returns the SkippedAtMs field value if set, zero value otherwise.
func (o *V1DispatchJob) GetSkippedAtMs() int64 {
	if o == nil || o.SkippedAtMs == nil {
		var ret int64
		return ret
	}
	return *o.SkippedAtMs
}

// GetSkippedAtMsOk returns a tuple with the SkippedAtMs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetSkippedAtMsOk() (int64, bool) {
	if o == nil || o.SkippedAtMs == nil {
		var ret int64
		return ret, false
	}
	return *o.SkippedAtMs, true
}

// HasSkippedAtMs returns a boolean if a field has been set.
func (o *V1DispatchJob) HasSkippedAtMs() bool {
	if o != nil && o.SkippedAtMs != nil {
		return true
	}

	return false
}

// SetSkippedAtMs gets a reference to the given int64 and assigns it to the SkippedAtMs field.
func (o *V1DispatchJob) SetSkippedAtMs(v int64) {
	o.SkippedAtMs = &v
}

// GetVehicleId returns the VehicleId field value if set, zero value otherwise.
func (o *V1DispatchJob) GetVehicleId() int64 {
	if o == nil || o.VehicleId == nil {
		var ret int64
		return ret
	}
	return *o.VehicleId
}

// GetVehicleIdOk returns a tuple with the VehicleId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetVehicleIdOk() (int64, bool) {
	if o == nil || o.VehicleId == nil {
		var ret int64
		return ret, false
	}
	return *o.VehicleId, true
}

// HasVehicleId returns a boolean if a field has been set.
func (o *V1DispatchJob) HasVehicleId() bool {
	if o != nil && o.VehicleId != nil {
		return true
	}

	return false
}

// SetVehicleId gets a reference to the given int64 and assigns it to the VehicleId field.
func (o *V1DispatchJob) SetVehicleId(v int64) {
	o.VehicleId = &v
}

// GetDestinationAddress returns the DestinationAddress field value if set, zero value otherwise.
func (o *V1DispatchJob) GetDestinationAddress() string {
	if o == nil || o.DestinationAddress == nil {
		var ret string
		return ret
	}
	return *o.DestinationAddress
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetDestinationAddressOk() (string, bool) {
	if o == nil || o.DestinationAddress == nil {
		var ret string
		return ret, false
	}
	return *o.DestinationAddress, true
}

// HasDestinationAddress returns a boolean if a field has been set.
func (o *V1DispatchJob) HasDestinationAddress() bool {
	if o != nil && o.DestinationAddress != nil {
		return true
	}

	return false
}

// SetDestinationAddress gets a reference to the given string and assigns it to the DestinationAddress field.
func (o *V1DispatchJob) SetDestinationAddress(v string) {
	o.DestinationAddress = &v
}

// GetDestinationAddressId returns the DestinationAddressId field value if set, zero value otherwise.
func (o *V1DispatchJob) GetDestinationAddressId() int64 {
	if o == nil || o.DestinationAddressId == nil {
		var ret int64
		return ret
	}
	return *o.DestinationAddressId
}

// GetDestinationAddressIdOk returns a tuple with the DestinationAddressId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetDestinationAddressIdOk() (int64, bool) {
	if o == nil || o.DestinationAddressId == nil {
		var ret int64
		return ret, false
	}
	return *o.DestinationAddressId, true
}

// HasDestinationAddressId returns a boolean if a field has been set.
func (o *V1DispatchJob) HasDestinationAddressId() bool {
	if o != nil && o.DestinationAddressId != nil {
		return true
	}

	return false
}

// SetDestinationAddressId gets a reference to the given int64 and assigns it to the DestinationAddressId field.
func (o *V1DispatchJob) SetDestinationAddressId(v int64) {
	o.DestinationAddressId = &v
}

// GetDestinationLat returns the DestinationLat field value if set, zero value otherwise.
func (o *V1DispatchJob) GetDestinationLat() float64 {
	if o == nil || o.DestinationLat == nil {
		var ret float64
		return ret
	}
	return *o.DestinationLat
}

// GetDestinationLatOk returns a tuple with the DestinationLat field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetDestinationLatOk() (float64, bool) {
	if o == nil || o.DestinationLat == nil {
		var ret float64
		return ret, false
	}
	return *o.DestinationLat, true
}

// HasDestinationLat returns a boolean if a field has been set.
func (o *V1DispatchJob) HasDestinationLat() bool {
	if o != nil && o.DestinationLat != nil {
		return true
	}

	return false
}

// SetDestinationLat gets a reference to the given float64 and assigns it to the DestinationLat field.
func (o *V1DispatchJob) SetDestinationLat(v float64) {
	o.DestinationLat = &v
}

// GetDestinationLng returns the DestinationLng field value if set, zero value otherwise.
func (o *V1DispatchJob) GetDestinationLng() float64 {
	if o == nil || o.DestinationLng == nil {
		var ret float64
		return ret
	}
	return *o.DestinationLng
}

// GetDestinationLngOk returns a tuple with the DestinationLng field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetDestinationLngOk() (float64, bool) {
	if o == nil || o.DestinationLng == nil {
		var ret float64
		return ret, false
	}
	return *o.DestinationLng, true
}

// HasDestinationLng returns a boolean if a field has been set.
func (o *V1DispatchJob) HasDestinationLng() bool {
	if o != nil && o.DestinationLng != nil {
		return true
	}

	return false
}

// SetDestinationLng gets a reference to the given float64 and assigns it to the DestinationLng field.
func (o *V1DispatchJob) SetDestinationLng(v float64) {
	o.DestinationLng = &v
}

// GetDestinationName returns the DestinationName field value if set, zero value otherwise.
func (o *V1DispatchJob) GetDestinationName() string {
	if o == nil || o.DestinationName == nil {
		var ret string
		return ret
	}
	return *o.DestinationName
}

// GetDestinationNameOk returns a tuple with the DestinationName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetDestinationNameOk() (string, bool) {
	if o == nil || o.DestinationName == nil {
		var ret string
		return ret, false
	}
	return *o.DestinationName, true
}

// HasDestinationName returns a boolean if a field has been set.
func (o *V1DispatchJob) HasDestinationName() bool {
	if o != nil && o.DestinationName != nil {
		return true
	}

	return false
}

// SetDestinationName gets a reference to the given string and assigns it to the DestinationName field.
func (o *V1DispatchJob) SetDestinationName(v string) {
	o.DestinationName = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *V1DispatchJob) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetNotesOk() (string, bool) {
	if o == nil || o.Notes == nil {
		var ret string
		return ret, false
	}
	return *o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *V1DispatchJob) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *V1DispatchJob) SetNotes(v string) {
	o.Notes = &v
}

// GetScheduledArrivalTimeMs returns the ScheduledArrivalTimeMs field value
func (o *V1DispatchJob) GetScheduledArrivalTimeMs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ScheduledArrivalTimeMs
}

// SetScheduledArrivalTimeMs sets field value
func (o *V1DispatchJob) SetScheduledArrivalTimeMs(v int64) {
	o.ScheduledArrivalTimeMs = v
}

// GetScheduledDepartureTimeMs returns the ScheduledDepartureTimeMs field value if set, zero value otherwise.
func (o *V1DispatchJob) GetScheduledDepartureTimeMs() int64 {
	if o == nil || o.ScheduledDepartureTimeMs == nil {
		var ret int64
		return ret
	}
	return *o.ScheduledDepartureTimeMs
}

// GetScheduledDepartureTimeMsOk returns a tuple with the ScheduledDepartureTimeMs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *V1DispatchJob) GetScheduledDepartureTimeMsOk() (int64, bool) {
	if o == nil || o.ScheduledDepartureTimeMs == nil {
		var ret int64
		return ret, false
	}
	return *o.ScheduledDepartureTimeMs, true
}

// HasScheduledDepartureTimeMs returns a boolean if a field has been set.
func (o *V1DispatchJob) HasScheduledDepartureTimeMs() bool {
	if o != nil && o.ScheduledDepartureTimeMs != nil {
		return true
	}

	return false
}

// SetScheduledDepartureTimeMs gets a reference to the given int64 and assigns it to the ScheduledDepartureTimeMs field.
func (o *V1DispatchJob) SetScheduledDepartureTimeMs(v int64) {
	o.ScheduledDepartureTimeMs = &v
}

type NullableV1DispatchJob struct {
	Value        V1DispatchJob
	ExplicitNull bool
}

func (v NullableV1DispatchJob) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableV1DispatchJob) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
