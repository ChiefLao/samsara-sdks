{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "test swagger",
    "title": "Samsara API",
    "version": "0.1.0"
  },
  "host": "api.samsara.com",
  "paths": {
    "/addresses": {
      "get": {
        "description": "Returns a list of all addresses in an organization",
        "tags": [
          "Addresses"
        ],
        "summary": "List all addresses",
        "operationId": "getAddresses",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "default": 512,
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all addresses in the organization",
            "schema": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Address"
                  }
                },
                "pagination": {
                  "$ref": "#/definitions/paginationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new address in the organization",
        "tags": [
          "Addresses"
        ],
        "summary": "Create an address",
        "operationId": "createAddress",
        "parameters": [
          {
            "description": "The address to create.",
            "name": "address",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddressCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created address object with ID",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Address"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/addresses/{id}": {
      "get": {
        "description": "Returns a specific address.",
        "tags": [
          "Addresses"
        ],
        "summary": "Retrieve an address",
        "operationId": "getAddressById",
        "responses": {
          "200": {
            "description": "Newly created address object with ID",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Address"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a specific address.",
        "tags": [
          "Addresses"
        ],
        "summary": "Delete an address",
        "operationId": "deleteAddressById",
        "responses": {
          "204": {
            "description": "Empty success body"
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update a specific address.",
        "tags": [
          "Addresses"
        ],
        "summary": "Update an address",
        "operationId": "updateAddressById",
        "parameters": [
          {
            "description": "The address fields to update.",
            "name": "address",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddressPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated address object with ID.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Address"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Unique Samsara ID for the address",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Address": {
      "description": "Information about an address/geofence. Geofences are either a circle or a polygon.",
      "type": "object",
      "allOf": [
        {
          "required": [
            "id"
          ],
          "properties": {
            "contacts": {
              "description": "An array of all contact mini-objects that are associated with the given address entry.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/contactTinyResponse"
              }
            },
            "id": {
              "description": "Unique Samsara ID for the address.",
              "type": "string",
              "example": "7107471"
            },
            "latitude": {
              "description": "Latitude of the address. Either inferred from the formatted address or defined on address creation.",
              "type": "number",
              "format": "double",
              "example": 37.765363
            },
            "longitude": {
              "description": "Longitude of the address. Either inferred from the formatted address or defined on address creation.",
              "type": "number",
              "format": "double",
              "example": 37.765363
            },
            "tags": {
              "description": "An array of all tag mini-objects that are associated with the given address entry.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/tagTinyResponse"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/AddressResponseCore"
        }
      ]
    },
    "AddressPatch": {
      "description": "Information about an address/geofence. Geofences are either a circle or a polygon.",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "contactIds": {
              "description": "An array of IDs of contacts to associate with this address.",
              "type": "array",
              "items": {
                "type": "string",
                "example": "123"
              }
            },
            "latitude": {
              "description": "Optional latitude field to override the geocoded latitude from the formatted address.",
              "type": "number",
              "format": "double",
              "example": 37.765363
            },
            "longitude": {
              "description": "Optional longitude field to override the geocoded longitude from the formatted address.",
              "type": "number",
              "format": "double",
              "example": 37.765363
            },
            "tagIds": {
              "description": "An array of IDs of tags to associate with this address.",
              "type": "array",
              "items": {
                "type": "string",
                "example": "321"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/AddressRequestCore"
        }
      ]
    },
    "AddressResponseCore": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "geofence": {
              "$ref": "#/definitions/AddressGeofenceResponse"
            }
          }
        },
        {
          "$ref": "#/definitions/AddressCore"
        }
      ]
    },
    "AddressRequestCore": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "geofence": {
              "$ref": "#/definitions/AddressGeofenceRequest"
            }
          }
        },
        {
          "$ref": "#/definitions/AddressCore"
        }
      ]
    },
    "AddressCreate": {
      "description": "An address object.",
      "type": "object",
      "allOf": [
        {
          "required": [
            "name",
            "formattedAddress",
            "geofence"
          ],
          "properties": {
            "contactIds": {
              "description": "An array of IDs of contacts to associate with this address.",
              "type": "array",
              "items": {
                "type": "string",
                "example": "22408"
              }
            },
            "latitude": {
              "description": "Optional latitude field to override the geocoded latitude from the formatted address.",
              "type": "number",
              "format": "double",
              "example": 37.765363
            },
            "longitude": {
              "description": "Optional longitude field to override the geocoded longitude from the formatted address.",
              "type": "number",
              "format": "double",
              "example": 37.765363
            },
            "tagIds": {
              "description": "An array of IDs of tags to associate with this address.",
              "type": "array",
              "items": {
                "type": "string",
                "example": "3914"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/AddressRequestCore"
        }
      ]
    },
    "tagTinyResponse": {
      "description": "A minified tag object",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the tag.",
          "type": "string",
          "example": "3914"
        },
        "name": {
          "description": "Name of the tag.",
          "type": "string",
          "example": "East Coast"
        }
      }
    },
    "contactTinyResponse": {
      "description": "A minified contact object",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First name of the contact.",
          "type": "string",
          "example": "Jane"
        },
        "id": {
          "description": "ID of the contact.",
          "type": "string",
          "example": "22408"
        },
        "lastName": {
          "description": "Last name of the contact.",
          "type": "string",
          "example": "Jones"
        }
      }
    },
    "AddressGeofenceResponse": {
      "description": "The geofence that defines this address and its bounds. This can either be a circle, or a polygon",
      "type": "object",
      "properties": {
        "circle": {
          "description": "Information about a circular geofence. This field is only populated if the geofence is a circle.",
          "type": "object",
          "properties": {
            "latitude": {
              "description": "The latitude of the center of the circular geofence in decimal degrees.",
              "type": "number",
              "format": "double",
              "example": 37.765363
            },
            "longitude": {
              "description": "The longitude of the center of the circular geofence in decimal degrees.",
              "type": "number",
              "format": "double",
              "example": -122.403098
            },
            "radiusMeters": {
              "description": "The radius of the circular geofence in meters.",
              "type": "number",
              "example": 250
            }
          }
        },
        "polygon": {
          "description": "Information about a polygon geofence. This field is only populated if the geofence is a polygon.",
          "type": "object",
          "properties": {
            "vertices": {
              "description": "The vertices of the polygon geofence. These geofence vertices describe the perimeter of the polygon.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "description": "The latitude of a geofence vertex in decimal degrees.",
                    "type": "number",
                    "format": "double"
                  },
                  "longitude": {
                    "description": "The longitude of a geofence vertex in decimal degrees.",
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "example": [
                {
                  "latitude": 37.765363,
                  "longitude": -122.403098
                },
                {
                  "latitude": 38.765363,
                  "longitude": -122.403098
                },
                {
                  "latitude": 37.765363,
                  "longitude": -123.403098
                }
              ]
            }
          }
        }
      }
    },
    "AddressCore": {
      "description": "Core fields used in both address creation and the actual address object.",
      "type": "object",
      "properties": {
        "addressTypes": {
          "description": "Reporting location type associated with the address (used for ELD reporting purposes).",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "yard",
              "shortHaul"
            ],
            "example": "yard"
          }
        },
        "formattedAddress": {
          "description": "The full street address for this address/geofence, as it might be recognized by Google Maps.",
          "type": "string",
          "maxLength": 1024,
          "example": "350 Rhode Island St, San Francisco, CA"
        },
        "name": {
          "description": "Name of the address.",
          "type": "string",
          "maxLength": 255,
          "example": "Samsara HQ"
        },
        "notes": {
          "description": "Notes about the address.",
          "type": "string",
          "maxLength": 280,
          "example": "Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side."
        }
      }
    },
    "paginationResponse": {
      "description": "Pagination parameters.",
      "type": "object",
      "required": [
        "endCursor",
        "hasNextPage"
      ],
      "properties": {
        "endCursor": {
          "description": "Cursor identifier representing the last element in the response. This value should be used in conjunction with a subsequent request's 'after' query parameter. This may be an empty string if there are no more pages left to view.",
          "type": "string",
          "format": "string",
          "example": "MjkY"
        },
        "hasNextPage": {
          "description": "True if there are more pages of results immediately available after this endCursor.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "standardErrorResponse": {
      "description": "Error response",
      "type": "object",
      "properties": {
        "message": {
          "description": "The message of the error.",
          "type": "string"
        },
        "requestId": {
          "description": "The ID of the request.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {}
}