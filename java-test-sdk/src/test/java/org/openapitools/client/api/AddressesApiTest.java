/*
 * Samsara API
 * Integrate your data with the Samsara API, customize the Samsara experience, and join a community of developers building with Samsara.
 *
 * The version of the OpenAPI document: 2019-12-12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddressResponse;
import org.openapitools.client.model.CreateAddressRequest;
import org.openapitools.client.model.ListAddressesResponse;
import org.openapitools.client.model.StandardErrorResponse;
import org.openapitools.client.model.UpdateAddressRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddressesApi
 */
@Ignore
public class AddressesApiTest {

    private final AddressesApi api = new AddressesApi();

    
    /**
     * Create an address
     *
     * Creates a new address in the organization
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAddressTest() throws ApiException {
        CreateAddressRequest address = null;
        AddressResponse response = api.createAddress(address);

        // TODO: test validations
    }
    
    /**
     * Delete an address
     *
     * Delete a specific address.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAddressTest() throws ApiException {
        String id = null;
        api.deleteAddress(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve an address
     *
     * Returns a specific address.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAddressTest() throws ApiException {
        String id = null;
        AddressResponse response = api.getAddress(id);

        // TODO: test validations
    }
    
    /**
     * List all addresses
     *
     * Returns a list of all addresses in an organization
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAddressesTest() throws ApiException {
        Long limit = null;
        String after = null;
        List<String> tagIds = null;
        ListAddressesResponse response = api.listAddresses(limit, after, tagIds);

        // TODO: test validations
    }
    
    /**
     * Update an address
     *
     * Update a specific address.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAddressTest() throws ApiException {
        String id = null;
        UpdateAddressRequest address = null;
        AddressResponse response = api.updateAddress(id, address);

        // TODO: test validations
    }
    
}
