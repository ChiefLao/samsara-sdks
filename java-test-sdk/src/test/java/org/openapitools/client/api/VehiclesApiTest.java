/*
 * Samsara API
 * Integrate your data with the Samsara API, customize the Samsara experience, and join a community of developers building with Samsara.
 *
 * The version of the OpenAPI document: 2019-12-12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.threeten.bp.OffsetDateTime;
import org.openapitools.client.model.StandardErrorResponse;
import org.openapitools.client.model.VehicleLocationsListResponse;
import org.openapitools.client.model.VehicleLocationsResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VehiclesApi
 */
@Ignore
public class VehiclesApiTest {

    private final VehiclesApi api = new VehiclesApi();

    
    /**
     * Get most recent vehicle locations
     *
     * Returns last known location for all vehicles (Samsara Vehicle Gateways). This can be optionally filtered by tags or specific vehicle IDs. See [here](https://developers.samsara.com/docs/vehicle-locations) for more details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVehicleLocationsTest() throws ApiException {
        String after = null;
        List<String> tagIds = null;
        List<String> vehicleIds = null;
        VehicleLocationsResponse response = api.getVehicleLocations(after, tagIds, vehicleIds);

        // TODO: test validations
    }
    
    /**
     * Follow a feed of vehicle locations
     *
     * Follow a continuous feed of all vehicle locations from Samsara Vehicle Gateways.  Your first call to this endpoint will provide you with the most recent location for each vehicle and a &#x60;pagination&#x60; object that contains an &#x60;endCursor&#x60;.  You can provide the &#x60;endCursor&#x60; to the &#x60;after&#x60; parameter of this endpoint to get location updates since that &#x60;endCursor&#x60;.   If &#x60;hasNextPage&#x60; is &#x60;false&#x60;, no updates are readily available yet. We&#39;d suggest waiting a minimum of 5 seconds before requesting updates.  See [this guide](https://developers.samsara.com/docs/vehicle-locations#section-follow-a-real-time-feed-of-vehicle-locations) for more details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVehicleLocationsFeedTest() throws ApiException {
        String after = null;
        List<String> tagIds = null;
        List<String> vehicleIds = null;
        VehicleLocationsListResponse response = api.getVehicleLocationsFeed(after, tagIds, vehicleIds);

        // TODO: test validations
    }
    
    /**
     * Get historical vehicle locations
     *
     * Returns all known vehicle location changes during the given time range for all vehicles (Samsara Vehicle Gateways). This can be optionally filtered by tags or specific vehicle IDs. See [here](https://developers.samsara.com/docs/vehicle-locations) for more details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVehicleLocationsHistoryTest() throws ApiException {
        OffsetDateTime startTime = null;
        OffsetDateTime endTime = null;
        String after = null;
        List<String> tagIds = null;
        List<String> vehicleIds = null;
        VehicleLocationsListResponse response = api.getVehicleLocationsHistory(startTime, endTime, after, tagIds, vehicleIds);

        // TODO: test validations
    }
    
}
